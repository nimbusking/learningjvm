<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='21212' time_ms='1628323281503'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.211-b12
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.211-b12) for windows-amd64 JRE (1.8.0_211-b12), built on Apr  1 2019 20:53:26 by &quot;java_re&quot; with MS VC++ 10.0 (VS2010)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+TraceClassLoading -XX:+LogCompilation -XX:LogFile=./log/logfile.log -XX:+PrintAssembly -XX:+TraceClassLoading -javaagent:G:\Program Files\JetBrains\IntelliJ IDEA 2021.2\lib\idea_rt.jar=2533:G:\Program Files\JetBrains\IntelliJ IDEA 2021.2\bin -Dfile.encoding=UTF-8 
</args>
<command>
cc.nimbusk.learningjvm.hsdis.Bar
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.211-b12
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=G:\Program Files\Java\jdk1.8.0_211\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext
java.endorsed.dirs=G:\Program Files\Java\jdk1.8.0_211\jre\lib\endorsed
sun.boot.library.path=G:\Program Files\Java\jdk1.8.0_211\jre\bin
java.library.path=G:\Program Files\Java\jdk1.8.0_211\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;G:\Program Files\VanDyke Software\Clients\;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;G:\Program Files\MySQL\MySQL Fabric 1.5 &amp; MySQL Utilities 1.5\;G:\Program Files\MySQL\MySQL Fabric 1.5 &amp; MySQL Utilities 1.5\Doctrine extensions for PHP\;G:\Program Files\Java\jdk-9.0.4\bin;G:\Program Files\Java\jdk-9.0.4\jre\bin;C:\Program Files (x86)\Windows Kits\10\Windows Performance Toolkit\;G:\Program Files\nodejs\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;g:\Program Files\Git\cmd;G:\Programs Files\Python\Python38\Scripts\;G:\Programs Files\Python\Python38\;C:\Users\kemiv\AppData\Local\Microsoft\WindowsApps;G:\Program Files\nodejs\node_global;C:\Users\kemiv\AppData\Local\BypassRuntm;D:\shoutcuts;;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.
java.home=G:\Program Files\Java\jdk1.8.0_211\jre
java.class.path=G:\Program Files\Java\jdk1.8.0_211\jre\lib\charsets.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\deploy.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\ext\access-bridge-64.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\ext\cldrdata.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\ext\dnsns.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\ext\jaccess.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\ext\jfxrt.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\ext\localedata.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\ext\nashorn.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\ext\sunec.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\ext\sunjce_provider.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\ext\sunmscapi.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\ext\sunpkcs11.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\ext\zipfs.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\javaws.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\jce.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\jfr.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\jfxswt.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\jsse.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\management-agent.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\plugin.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\resources.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar;E:\Develop\ideaworkspace\git\learningjvm\target\classes
sun.boot.class.path=G:\Program Files\Java\jdk1.8.0_211\jre\lib\resources.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\sunrsasign.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\jsse.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\jce.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\charsets.jar;G:\Program Files\Java\jdk1.8.0_211\jre\lib\jfr.jar;G:\Program Files\Java\jdk1.8.0_211\jre\classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
file.encoding=UTF-8
sun.java.command=cc.nimbusk.learningjvm.hsdis.Bar
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='13832'/>
[Opened G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Object from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.Serializable from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Comparable from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.CharSequence from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.String from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.reflect.AnnotatedElement from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.reflect.GenericDeclaration from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.reflect.Type from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Class from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Cloneable from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ClassLoader from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.System from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Throwable from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Error from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ThreadDeath from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Exception from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.RuntimeException from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.SecurityManager from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.security.ProtectionDomain from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.security.AccessControlContext from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.security.SecureClassLoader from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ReflectiveOperationException from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ClassNotFoundException from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.LinkageError from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.NoClassDefFoundError from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ClassCastException from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ArrayStoreException from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.VirtualMachineError from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.OutOfMemoryError from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.StackOverflowError from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.IllegalMonitorStateException from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ref.Reference from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ref.SoftReference from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ref.WeakReference from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ref.FinalReference from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ref.PhantomReference from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.Cleaner from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ref.Finalizer from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ref.ReferenceQueue from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Runnable from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Thread from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Thread$UncaughtExceptionHandler from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ThreadGroup from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Map from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Dictionary from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Hashtable from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Properties from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.reflect.AccessibleObject from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.reflect.Member from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.reflect.Field from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.reflect.Parameter from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.reflect.Executable from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.reflect.Method from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.reflect.Constructor from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.MagicAccessorImpl from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.MethodAccessor from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.MethodAccessorImpl from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.ConstructorAccessor from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.ConstructorAccessorImpl from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.DelegatingClassLoader from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.ConstantPool from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.FieldAccessor from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.FieldAccessorImpl from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.UnsafeFieldAccessorImpl from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.UnsafeStaticFieldAccessorImpl from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.annotation.Annotation from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.CallerSensitive from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodHandle from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.invoke.DirectMethodHandle from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.invoke.MemberName from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodHandleNatives from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.invoke.LambdaForm from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodType from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.BootstrapMethodError from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.invoke.CallSite from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.invoke.ConstantCallSite from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.invoke.MutableCallSite from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.invoke.VolatileCallSite from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Appendable from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.AbstractStringBuilder from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.StringBuffer from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.StringBuilder from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.Unsafe from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.AutoCloseable from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.Closeable from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.InputStream from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.ByteArrayInputStream from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.File from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.net.URLClassLoader from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.net.URL from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.jar.Manifest from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.Launcher from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.security.CodeSource from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.StackTraceElement from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.nio.Buffer from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Boolean from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Character from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Number from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Float from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Double from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Byte from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Short from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Integer from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Long from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.NullPointerException from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ArithmeticException from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.ObjectStreamField from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Comparator from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.String$CaseInsensitiveComparator from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.security.Guard from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.security.Permission from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.security.BasicPermission from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.RuntimePermission from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.security.AccessController from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.reflect.ReflectPermission from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.security.PrivilegedAction from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.ReflectionFactory$GetReflectionFactoryAction from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.security.cert.Certificate from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Iterable from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Collection from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.List from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.RandomAccess from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.AbstractCollection from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.AbstractList from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Vector from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Stack from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.ReflectionFactory from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ref.Reference$Lock from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ref.Reference$ReferenceHandler from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.InterruptedException from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.ArrayList from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Collections from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Set from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.AbstractSet from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Collections$EmptySet from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Collections$EmptyList from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.AbstractMap from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Collections$EmptyMap from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Collections$UnmodifiableCollection from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Collections$UnmodifiableList from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Collections$UnmodifiableRandomAccessList from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Null from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Lock from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.JavaLangRefAccess from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ref.Reference$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.SharedSecrets from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.IncompatibleClassChangeError from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.NoSuchMethodError from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.Reflection from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.HashMap from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Map$Entry from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.HashMap$Node from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.VM from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Hashtable$Entry from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Math from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ref.Finalizer$FinalizerThread from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.nio.charset.Charset from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.nio.charset.spi.CharsetProvider from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.FastCharsetProvider from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.StandardCharsets from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.util.PreHashedMap from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Aliases from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Classes from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Cache from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ThreadLocal from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.concurrent.atomic.AtomicInteger from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Class$3 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Class$ReflectionData from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Class$Atomic from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.generics.repository.AbstractRepository from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.generics.repository.GenericDeclRepository from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.generics.repository.ClassRepository from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Class$AnnotationData from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.annotation.AnnotationType from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.WeakHashMap from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ClassValue$ClassValueMap from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.reflect.Modifier from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.LangReflectAccess from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.reflect.ReflectAccess from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Arrays from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.nio.charset.Charset$ExtendedProviderHolder from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.nio.charset.Charset$ExtendedProviderHolder$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Opened G:\Program Files\Java\jdk1.8.0_211\jre\lib\charsets.jar]
[Loaded sun.nio.cs.AbstractCharsetProvider from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.ext.ExtendedCharsets from G:\Program Files\Java\jdk1.8.0_211\jre\lib\charsets.jar]
[Loaded java.lang.Class$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.ReflectionFactory$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.NativeConstructorAccessorImpl from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.DelegatingConstructorAccessorImpl from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.SortedMap from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.NavigableMap from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.TreeMap from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.ASCIICaseInsensitiveComparator from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.TreeMap$Entry from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.HistoricallyNamedCharset from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.ext.GBK from G:\Program Files\Java\jdk1.8.0_211\jre\lib\charsets.jar]
[Loaded java.lang.StringCoding from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap$Entry from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.StringCoding$StringDecoder from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.ext.DoubleByte from G:\Program Files\Java\jdk1.8.0_211\jre\lib\charsets.jar]
[Loaded sun.nio.cs.ext.DelegatableDecoder from G:\Program Files\Java\jdk1.8.0_211\jre\lib\charsets.jar]
[Loaded sun.nio.cs.ArrayDecoder from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.nio.charset.CharsetDecoder from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.ext.DoubleByte$Decoder from G:\Program Files\Java\jdk1.8.0_211\jre\lib\charsets.jar]
[Loaded java.nio.charset.CodingErrorAction from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Hashtable$EntrySet from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Collections$SynchronizedCollection from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Collections$SynchronizedSet from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Objects from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Enumeration from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Iterator from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Hashtable$Enumerator from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Runtime from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.Version from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.FileInputStream from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.FileDescriptor from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.JavaIOFileDescriptorAccess from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.FileDescriptor$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.Flushable from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.OutputStream from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.FileOutputStream from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.FilterInputStream from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.BufferedInputStream from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.security.PrivilegedExceptionAction from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.misc.ReflectUtil from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.FilterOutputStream from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.PrintStream from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.BufferedOutputStream from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.Writer from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.OutputStreamWriter from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.StreamEncoder from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.security.action.GetPropertyAction from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.Unicode from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.UTF_8 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.ArrayEncoder from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.nio.charset.CharsetEncoder from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.UTF_8$Encoder from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.nio.ByteBuffer from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.nio.HeapByteBuffer from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.nio.Bits from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.nio.ByteOrder from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.concurrent.atomic.AtomicLong from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.JavaNioAccess from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.nio.Bits$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.BufferedWriter from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.DefaultFileSystem from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.FileSystem from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.WinNTFileSystem from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.ExpiringCache from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.LinkedHashMap from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.ExpiringCache$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Enum from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.File$PathStatus from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.nio.file.Watchable from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.nio.file.Path from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.StringCoding$StringEncoder from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.ext.DoubleByte$Encoder from G:\Program Files\Java\jdk1.8.0_211\jre\lib\charsets.jar]
[Loaded java.lang.Readable from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.nio.CharBuffer from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.nio.HeapCharBuffer from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.nio.charset.CoderResult from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.nio.charset.CoderResult$Cache from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.nio.charset.CoderResult$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.nio.charset.CoderResult$2 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ClassLoader$3 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.ExpiringCache$Entry from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.LinkedHashMap$Entry from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ClassLoader$NativeLibrary from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Terminator from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.SignalHandler from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Terminator$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.Signal from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.NativeSignalHandler from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Integer$IntegerCache from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.OSEnvironment from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.io.Win32ErrorMode from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.JavaLangAccess from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.System$2 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.IllegalArgumentException from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Compiler from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Compiler$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.net.URLStreamHandlerFactory from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.Launcher$Factory from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.security.util.Debug from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ClassLoader$ParallelLoaders from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.WeakHashMap$Entry from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Collections$SetFromMap from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.WeakHashMap$KeySet from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.JavaNetAccess from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.net.URLClassLoader$7 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.StringTokenizer from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.MetaIndex from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.Reader from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.BufferedReader from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.InputStreamReader from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.FileReader from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.StreamDecoder from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.UTF_8$Decoder from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.reflect.Array from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Locale from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.util.locale.LocaleObjectCache from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Locale$Cache from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentMap from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.concurrent.locks.Lock from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.concurrent.locks.ReentrantLock from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Segment from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Node from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CounterCell from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CollectionView from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$KeySetView from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ValuesView from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$EntrySetView from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.util.locale.BaseLocale from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.util.locale.BaseLocale$Cache from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.util.locale.BaseLocale$Key from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.util.locale.LocaleObjectCache$CacheEntry from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Locale$LocaleKey from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.util.locale.LocaleUtils from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.CharacterData from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.CharacterDataLatin1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.HashMap$TreeNode from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.FileInputStream$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.net.www.ParseUtil from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.BitSet from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.net.Parts from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.net.URLStreamHandler from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.net.www.protocol.file.Handler from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.JavaSecurityAccess from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.security.ProtectionDomain$JavaSecurityAccessImpl from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.JavaSecurityProtectionDomainAccess from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.security.ProtectionDomain$2 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.security.ProtectionDomain$Key from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.security.Principal from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.HashSet from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.net.www.protocol.jar.Handler from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.SystemClassLoaderAction from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.InternalError from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.instrument.Instrumentation from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.instrument.InstrumentationImpl from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.instrument.TransformerManager from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.instrument.TransformerManager$TransformerInfo from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.net.URLClassLoader$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.net.util.URLUtil from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath$3 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath$Loader from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.zip.ZipConstants from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.zip.ZipFile from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.JavaUtilZipFileAccess from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.zip.ZipFile$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.ThreadLocalCoders from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.ThreadLocalCoders$Cache from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.ThreadLocalCoders$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.ThreadLocalCoders$2 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.FileURLMapper from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.jar.JarFile from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.JavaUtilJarAccess from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.jar.JavaUtilJarAccessImpl from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.nio.charset.StandardCharsets from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.US_ASCII from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.ISO_8859_1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.UTF_16BE from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.UTF_16LE from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.cs.UTF_16 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Queue from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.Deque from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.ArrayDeque from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.zip.ZipCoder from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.PerfCounter from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.Perf$GetPerfAction from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.Perf from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.PerfCounter$CoreCounters from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.ch.DirectBuffer from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.nio.MappedByteBuffer from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.nio.DirectByteBuffer from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.nio.LongBuffer from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.nio.DirectLongBufferU from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.JarIndex from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.ExtensionDependency from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.zip.ZipEntry from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.jar.JarEntry from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.jar.JarFile$JarFileEntry from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.zip.ZipFile$ZipFileInputStream from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.IOUtils from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.zip.Inflater from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.zip.ZStreamRef from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.zip.InflaterInputStream from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.zip.ZipFile$ZipFileInflaterInputStream from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.AbstractSequentialList from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.LinkedList from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.LinkedList$Node from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath$FileLoader from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.Resource from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader$2 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.jar.Attributes from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.jar.Manifest$FastInputStream from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.jar.Attributes$Name from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Package from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.nio.ByteBuffered from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.security.PermissionCollection from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.security.Permissions from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.net.URLConnection from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.net.www.URLConnection from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.net.www.protocol.file.FileURLConnection from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.net.www.MessageHeader from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.FilePermission from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.FilePermission$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.io.FilePermissionCollection from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.security.AllPermission from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.security.UnresolvedPermission from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.security.BasicPermissionCollection from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded com.intellij.rt.execution.application.AppMainV2$Agent from file:/G:/Program%20Files/JetBrains/IntelliJ%20IDEA%202021.2/lib/idea_rt.jar]
[Loaded sun.instrument.InstrumentationImpl$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.NativeMethodAccessorImpl from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.reflect.DelegatingMethodAccessorImpl from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded com.intellij.rt.execution.application.AppMainV2 from file:/G:/Program%20Files/JetBrains/IntelliJ%20IDEA%202021.2/lib/idea_rt.jar]
[Loaded java.lang.NoSuchMethodException from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.reflect.InvocationTargetException from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ForwardingNode from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded com.intellij.rt.execution.application.AppMainV2$1 from file:/G:/Program%20Files/JetBrains/IntelliJ%20IDEA%202021.2/lib/idea_rt.jar]
<writer thread='22872'/>
[Loaded java.net.Socket from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.net.SocketAddress from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.net.InetSocketAddress from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22496'/>
<thread_logfile thread='22496' filename='C:\Users\kemiv\AppData\Local\Temp\\hs_c22496_pid21212.log'/>
<writer thread='16008'/>
<thread_logfile thread='16008' filename='C:\Users\kemiv\AppData\Local\Temp\\hs_c16008_pid21212.log'/>
<writer thread='22872'/>
[Loaded java.net.InetAddress from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='10556'/>
<thread_logfile thread='10556' filename='C:\Users\kemiv\AppData\Local\Temp\\hs_c10556_pid21212.log'/>
<writer thread='22872'/>
[Loaded java.net.InetSocketAddress$InetSocketAddressHolder from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22716'/>
<thread_logfile thread='22716' filename='C:\Users\kemiv\AppData\Local\Temp\\hs_c22716_pid21212.log'/>
<writer thread='14668'/>
<thread_logfile thread='14668' filename='C:\Users\kemiv\AppData\Local\Temp\\hs_c14668_pid21212.log'/>
<writer thread='22872'/>
[Loaded sun.security.action.GetBooleanAction from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='9844'/>
<thread_logfile thread='9844' filename='C:\Users\kemiv\AppData\Local\Temp\\hs_c9844_pid21212.log'/>
<writer thread='22872'/>
[Loaded java.net.InetAddress$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='23420'/>
<thread_logfile thread='23420' filename='C:\Users\kemiv\AppData\Local\Temp\\hs_c23420_pid21212.log'/>
<writer thread='13832'/>
[Loaded java.lang.invoke.MethodHandleImpl from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='10728'/>
<thread_logfile thread='10728' filename='C:\Users\kemiv\AppData\Local\Temp\\hs_c10728_pid21212.log'/>
<writer thread='22872'/>
<task_queued compile_id='1' method='java/lang/String length ()I' bytes='6' count='27648' iicount='27648' stamp='0.075' comment='tiered' hot_count='27648'/>
<task_queued compile_id='2' method='java/lang/String charAt (I)C' bytes='29' count='102400' iicount='102400' stamp='0.075' comment='tiered' hot_count='102400'/>
<writer thread='22084'/>
<thread_logfile thread='22084' filename='C:\Users\kemiv\AppData\Local\Temp\\hs_c22084_pid21212.log'/>
<writer thread='5512'/>
<thread_logfile thread='5512' filename='C:\Users\kemiv\AppData\Local\Temp\\hs_c5512_pid21212.log'/>
<writer thread='23180'/>
<thread_logfile thread='23180' filename='C:\Users\kemiv\AppData\Local\Temp\\hs_c23180_pid21212.log'/>
<writer thread='22188'/>
<thread_logfile thread='22188' filename='C:\Users\kemiv\AppData\Local\Temp\\hs_c22188_pid21212.log'/>
<writer thread='22872'/>
Loaded disassembler from G:\Program Files\Java\jdk1.8.0_211\jre\bin\server\hsdis-amd64.dll
Decoding compiled method 0x00000000039412d0:
Code:
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
  # {method} {0x00000000264596c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8        = int
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi       = int
  # parm4:    rsi       = int
  #           [sp+0x90]  (sp of caller)
  0x0000000003941440: mov    0x8(%rdx),%r10d
  0x0000000003941444: shl    $0x3,%r10
  0x0000000003941448: cmp    %r10,%rax
  0x000000000394144b: je     0x0000000003941458
  0x0000000003941451: jmpq   0x0000000003915f60  ;   {runtime_call}
  0x0000000003941456: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000003941458: mov    %eax,-0x6000(%rsp)
  0x000000000394145f: push   %rbp
  0x0000000003941460: mov    %rsp,%rbp
  0x0000000003941463: sub    $0x80,%rsp
  0x000000000394146a: mov    %rsi,0x30(%rsp)
  0x000000000394146f: mov    %rdi,0x28(%rsp)
  0x0000000003941474: mov    %r9,0x48(%rsp)
  0x0000000003941479: cmp    $0x0,%r9
  0x000000000394147d: lea    0x48(%rsp),%rax
  0x0000000003941482: cmove  0x48(%rsp),%rax
  0x0000000003941488: mov    %rax,0x20(%rsp)
  0x000000000394148d: mov    %r8,%r9
  0x0000000003941490: mov    %rdx,0x38(%rsp)
  0x0000000003941495: cmp    $0x0,%rdx
  0x0000000003941499: lea    0x38(%rsp),%r8
  0x000000000394149e: cmove  0x38(%rsp),%r8
  0x00000000039414a4: movabs $0x715c00c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00000000039414ae: mov    %r14,0x68(%rsp)
  0x00000000039414b3: lea    0x68(%rsp),%r14
  0x00000000039414b8: mov    %r14,%rdx          ; OopMap{[72]=Oop [56]=Oop [104]=Oop off=123}
  0x00000000039414bb: movabs $0x39414bb,%r10    ;   {section_word}
  0x00000000039414c5: mov    %r10,0x1e0(%r15)
  0x00000000039414cc: mov    %rsp,0x1d8(%r15)
  0x00000000039414d3: cmpb   $0x0,0x6dc35874(%rip)        # 0x0000000071576d4e
                                                ;   {external_word}
  0x00000000039414da: je     0x0000000003941522
  0x00000000039414e0: push   %rdx
  0x00000000039414e1: push   %r8
  0x00000000039414e3: push   %r9
  0x00000000039414e5: movabs $0x264596b8,%rdx   ;   {metadata({method} {0x00000000264596c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00000000039414ef: mov    %r15,%rcx
  0x00000000039414f2: sub    $0x20,%rsp
  0x00000000039414f6: test   $0xf,%esp
  0x00000000039414fc: je     0x0000000003941514
  0x0000000003941502: sub    $0x8,%rsp
  0x0000000003941506: callq  0x0000000070f8df50  ;   {runtime_call}
  0x000000000394150b: add    $0x8,%rsp
  0x000000000394150f: jmpq   0x0000000003941519
  0x0000000003941514: callq  0x0000000070f8df50  ;   {runtime_call}
  0x0000000003941519: add    $0x20,%rsp
  0x000000000394151d: pop    %r9
  0x000000000394151f: pop    %r8
  0x0000000003941521: pop    %rdx
  0x0000000003941522: lea    0x1f8(%r15),%rcx
  0x0000000003941529: movl   $0x4,0x270(%r15)
  0x0000000003941534: movabs $0x7ffaa81706fc,%r10  ;   {runtime_call}
  0x000000000394153e: callq  *%r10
  0x0000000003941541: vzeroupper 
  0x0000000003941544: movl   $0x5,0x270(%r15)
  0x000000000394154f: mov    %r15d,%ecx
  0x0000000003941552: shr    $0x4,%ecx
  0x0000000003941555: and    $0xffc,%ecx
  0x000000000394155b: movabs $0x1a40000,%r10    ;   {external_word}
  0x0000000003941565: mov    %ecx,(%r10,%rcx,1)
  0x0000000003941569: cmpl   $0x0,0x6dc363c5(%rip)        # 0x0000000071577938
                                                ;   {external_word}
  0x0000000003941573: jne    0x0000000003941587
  0x0000000003941579: cmpl   $0x0,0x30(%r15)
  0x0000000003941581: je     0x00000000039415a0
  0x0000000003941587: mov    %r15,%rcx
  0x000000000394158a: mov    %rsp,%r12
  0x000000000394158d: sub    $0x20,%rsp
  0x0000000003941591: and    $0xfffffffffffffff0,%rsp
  0x0000000003941595: callq  0x0000000070fa52a0  ;   {runtime_call}
  0x000000000394159a: mov    %r12,%rsp
  0x000000000394159d: xor    %r12,%r12
  0x00000000039415a0: movl   $0x8,0x270(%r15)
  0x00000000039415ab: cmpl   $0x1,0x29c(%r15)
  0x00000000039415b6: je     0x0000000003941646
  0x00000000039415bc: cmpb   $0x0,0x6dc3578b(%rip)        # 0x0000000071576d4e
                                                ;   {external_word}
  0x00000000039415c3: je     0x0000000003941601
  0x00000000039415c9: movabs $0x264596b8,%rdx   ;   {metadata({method} {0x00000000264596c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00000000039415d3: mov    %r15,%rcx
  0x00000000039415d6: sub    $0x20,%rsp
  0x00000000039415da: test   $0xf,%esp
  0x00000000039415e0: je     0x00000000039415f8
  0x00000000039415e6: sub    $0x8,%rsp
  0x00000000039415ea: callq  0x0000000070f8df50  ;   {runtime_call}
  0x00000000039415ef: add    $0x8,%rsp
  0x00000000039415f3: jmpq   0x00000000039415fd
  0x00000000039415f8: callq  0x0000000070f8df50  ;   {runtime_call}
  0x00000000039415fd: add    $0x20,%rsp
  0x0000000003941601: movabs $0x0,%r10
  0x000000000394160b: mov    %r10,0x1d8(%r15)
  0x0000000003941612: movabs $0x0,%r10
  0x000000000394161c: mov    %r10,0x1e0(%r15)
  0x0000000003941623: mov    0x38(%r15),%rcx
  0x0000000003941627: movl   $0x0,0x100(%rcx)
  0x0000000003941631: leaveq 
  0x0000000003941632: cmpq   $0x0,0x8(%r15)
  0x000000000394163a: jne    0x0000000003941641
  0x0000000003941640: retq   
  0x0000000003941641: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000003941646: mov    %rsp,%r12
  0x0000000003941649: sub    $0x20,%rsp
  0x000000000394164d: and    $0xfffffffffffffff0,%rsp
  0x0000000003941651: callq  0x0000000070f8df70  ;   {runtime_call}
  0x0000000003941656: mov    %r12,%rsp
  0x0000000003941659: xor    %r12,%r12
  0x000000000394165c: jmpq   0x00000000039415bc
  0x0000000003941661: hlt    
  0x0000000003941662: hlt    
  0x0000000003941663: hlt    
  0x0000000003941664: hlt    
  0x0000000003941665: hlt    
  0x0000000003941666: hlt    
  0x0000000003941667: hlt    
<nmethod compile_id='3' compile_kind='c2n' level='0' entry='0x0000000003941440' size='920' address='0x00000000039412d0' relocation_offset='288' consts_offset='920' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='2560' iicount='2560' stamp='0.077'/>
<task_queued compile_id='4' method='java/lang/String hashCode ()I' bytes='55' count='726' backedge_count='14336' iicount='726' level='3' stamp='0.077' comment='tiered' hot_count='726'/>
<task_queued compile_id='5' method='sun/nio/cs/ext/DoubleByte$Encoder encodeChar (C)I' bytes='21' count='896' iicount='896' level='3' stamp='0.077' comment='tiered' hot_count='896'/>
<writer thread='13832'/>
[Loaded java.lang.invoke.MethodHandleImpl$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.util.function.Function from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$2 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$3 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ClassValue from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$4 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.ClassValue$Entry from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22084'/>
Decoding compiled method 0x0000000003b79b50:
Code:
<writer thread='13832'/>
[Loaded java.lang.ClassValue$Identity from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22084'/>
[Entry Point]
[Constants]
  # {method} {0x0000000026444fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000003b79cc0: mov    0x8(%rdx),%r10d
  0x0000000003b79cc4: shl    $0x3,%r10
  0x0000000003b79cc8: cmp    %rax,%r10
  0x0000000003b79ccb: jne    0x0000000003915f60  ;   {runtime_call}
  0x0000000003b79cd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000003b79cdc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003b79ce0: mov    %eax,-0x6000(%rsp)
  0x0000000003b79ce7: push   %rbp
  0x0000000003b79ce8: sub    $0x30,%rsp
  0x0000000003b79cec: movabs $0x26625f78,%rax   ;   {metadata(method data for {method} {0x0000000026444fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b79cf6: mov    0xdc(%rax),%esi
  0x0000000003b79cfc: add    $0x8,%esi
  0x0000000003b79cff: mov    %esi,0xdc(%rax)
  0x0000000003b79d05: movabs $0x26444fb8,%rax   ;   {metadata({method} {0x0000000026444fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b79d0f: and    $0x1ff8,%esi
  0x0000000003b79d15: cmp    $0x0,%esi
  0x0000000003b79d18: je     0x0000000003b79e51  ;*aload_0
                                                ; - java.lang.String::hashCode@0 (line 1466)

  0x0000000003b79d1e: mov    0x10(%rdx),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x0000000003b79d21: cmp    $0x0,%eax
  0x0000000003b79d24: movabs $0x26625f78,%rsi   ;   {metadata(method data for {method} {0x0000000026444fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b79d2e: movabs $0x108,%rdi
  0x0000000003b79d38: jne    0x0000000003b79d48
  0x0000000003b79d3e: movabs $0x118,%rdi
  0x0000000003b79d48: mov    (%rsi,%rdi,1),%rbx
  0x0000000003b79d4c: lea    0x1(%rbx),%rbx
  0x0000000003b79d50: mov    %rbx,(%rsi,%rdi,1)
  0x0000000003b79d54: jne    0x0000000003b79e45  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x0000000003b79d5a: mov    0xc(%rdx),%esi
  0x0000000003b79d5d: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x0000000003b79d61: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x0000000003b79e68
  0x0000000003b79d64: cmp    $0x0,%edi
  0x0000000003b79d67: movabs $0x26625f78,%rbx   ;   {metadata(method data for {method} {0x0000000026444fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b79d71: movabs $0x128,%rcx
  0x0000000003b79d7b: jle    0x0000000003b79d8b
  0x0000000003b79d81: movabs $0x138,%rcx
  0x0000000003b79d8b: mov    (%rbx,%rcx,1),%r8
  0x0000000003b79d8f: lea    0x1(%r8),%r8
  0x0000000003b79d93: mov    %r8,(%rbx,%rcx,1)
  0x0000000003b79d97: jle    0x0000000003b79e45  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x0000000003b79d9d: mov    $0x0,%ebx
  0x0000000003b79da2: jmpq   0x0000000003b79e0a  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x0000000003b79da7: nop
  0x0000000003b79da8: movslq %ebx,%rcx
  0x0000000003b79dab: movzwl 0x10(%rsi,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000003b79db0: mov    %rax,%r8
  0x0000000003b79db3: shl    $0x5,%eax
  0x0000000003b79db6: sub    %r8d,%eax
  0x0000000003b79db9: add    %ecx,%eax
  0x0000000003b79dbb: inc    %ebx
  0x0000000003b79dbd: movabs $0x26625f78,%rcx   ;   {metadata(method data for {method} {0x0000000026444fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b79dc7: mov    0xe0(%rcx),%r8d
  0x0000000003b79dce: add    $0x8,%r8d
  0x0000000003b79dd2: mov    %r8d,0xe0(%rcx)
  0x0000000003b79dd9: movabs $0x26444fb8,%rcx   ;   {metadata({method} {0x0000000026444fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b79de3: and    $0xfff8,%r8d
  0x0000000003b79dea: cmp    $0x0,%r8d
  0x0000000003b79dee: je     0x0000000003b79e6d  ; OopMap{rsi=Oop rdx=Oop off=308}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x0000000003b79df4: test   %eax,-0x2149cfa(%rip)        # 0x0000000001a30100
                                                ;   {poll}
  0x0000000003b79dfa: movabs $0x26625f78,%rcx   ;   {metadata(method data for {method} {0x0000000026444fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b79e04: incl   0x168(%rcx)        ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x0000000003b79e0a: cmp    %edi,%ebx
  0x0000000003b79e0c: movabs $0x26625f78,%rcx   ;   {metadata(method data for {method} {0x0000000026444fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b79e16: movabs $0x148,%r8
  0x0000000003b79e20: jge    0x0000000003b79e30
  0x0000000003b79e26: movabs $0x158,%r8
  0x0000000003b79e30: mov    (%rcx,%r8,1),%r9
  0x0000000003b79e34: lea    0x1(%r9),%r9
  0x0000000003b79e38: mov    %r9,(%rcx,%r8,1)
  0x0000000003b79e3c: jl     0x0000000003b79da8  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000003b79e42: mov    %eax,0x10(%rdx)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x0000000003b79e45: add    $0x30,%rsp
  0x0000000003b79e49: pop    %rbp
  0x0000000003b79e4a: test   %eax,-0x2149d50(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b79e50: retq   
  0x0000000003b79e51: mov    %rax,0x8(%rsp)
  0x0000000003b79e56: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b79e5e: callq  0x0000000003b789e0  ; OopMap{rdx=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)
                                                ;   {runtime_call}
  0x0000000003b79e63: jmpq   0x0000000003b79d1e
<writer thread='22872'/>
[Loaded java.net.InetAddress$InetAddressHolder from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22084'/>

  0x0000000003b79e68: callq  0x000000000393f540  ; OopMap{rdx=Oop rsi=Oop off=429}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x0000000003b79e6d: mov    %rcx,0x8(%rsp)
  0x0000000003b79e72: movq   $0x2d,(%rsp)
  0x0000000003b79e7a: callq  0x0000000003b789e0  ; OopMap{rsi=Oop rdx=Oop off=447}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)
                                                ;   {runtime_call}
  0x0000000003b79e7f: jmpq   0x0000000003b79df4
  0x0000000003b79e84: nop
  0x0000000003b79e85: nop
  0x0000000003b79e86: mov    0x2a8(%r15),%rax
  0x0000000003b79e8d: movabs $0x0,%r10
  0x0000000003b79e97: mov    %r10,0x2a8(%r15)
  0x0000000003b79e9e: movabs $0x0,%r10
  0x0000000003b79ea8: mov    %r10,0x2b0(%r15)
  0x0000000003b79eaf: add    $0x30,%rsp
  0x0000000003b79eb3: pop    %rbp
  0x0000000003b79eb4: jmpq   0x000000000393ea20  ;   {runtime_call}
  0x0000000003b79eb9: hlt    
  0x0000000003b79eba: hlt    
  0x0000000003b79ebb: hlt    
  0x0000000003b79ebc: hlt    
  0x0000000003b79ebd: hlt    
  0x0000000003b79ebe: hlt    
  0x0000000003b79ebf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000003b79ec0: callq  0x000000000393f3a0  ;   {no_reloc}
  0x0000000003b79ec5: mov    %rsp,-0x28(%rsp)
  0x0000000003b79eca: sub    $0x80,%rsp
  0x0000000003b79ed1: mov    %rax,0x78(%rsp)
  0x0000000003b79ed6: mov    %rcx,0x70(%rsp)
  0x0000000003b79edb: mov    %rdx,0x68(%rsp)
  0x0000000003b79ee0: mov    %rbx,0x60(%rsp)
  0x0000000003b79ee5: mov    %rbp,0x50(%rsp)
  0x0000000003b79eea: mov    %rsi,0x48(%rsp)
  0x0000000003b79eef: mov    %rdi,0x40(%rsp)
  0x0000000003b79ef4: mov    %r8,0x38(%rsp)
  0x0000000003b79ef9: mov    %r9,0x30(%rsp)
  0x0000000003b79efe: mov    %r10,0x28(%rsp)
  0x0000000003b79f03: mov    %r11,0x20(%rsp)
  0x0000000003b79f08: mov    %r12,0x18(%rsp)
  0x0000000003b79f0d: mov    %r13,0x10(%rsp)
  0x0000000003b79f12: mov    %r14,0x8(%rsp)
  0x0000000003b79f17: mov    %r15,(%rsp)
  0x0000000003b79f1b: movabs $0x713a0770,%rcx   ;   {external_word}
  0x0000000003b79f25: movabs $0x3b79ec5,%rdx    ;   {internal_word}
  0x0000000003b79f2f: mov    %rsp,%r8
  0x0000000003b79f32: and    $0xfffffffffffffff0,%rsp
  0x0000000003b79f36: callq  0x0000000071056cc0  ;   {runtime_call}
  0x0000000003b79f3b: hlt    
[Deopt Handler Code]
  0x0000000003b79f3c: movabs $0x3b79f3c,%r10    ;   {section_word}
  0x0000000003b79f46: push   %r10
  0x0000000003b79f48: jmpq   0x0000000003917600  ;   {runtime_call}
  0x0000000003b79f4d: hlt    
  0x0000000003b79f4e: hlt    
  0x0000000003b79f4f: hlt    
<nmethod compile_id='4' compiler='C1' level='3' entry='0x0000000003b79cc0' size='1448' address='0x0000000003b79b50' relocation_offset='288' insts_offset='368' stub_offset='880' scopes_data_offset='1032' scopes_pcs_offset='1152' dependencies_offset='1424' nul_chk_table_offset='1432' method='java/lang/String hashCode ()I' bytes='55' count='729' backedge_count='14405' iicount='729' stamp='0.079'/>
<writer thread='22188'/>
Decoding compiled method 0x0000000003b79690:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000265c9660} &apos;encodeCha
<writer thread='22872'/>
[Loaded java.net.InetAddress$Cache from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22188'/>
r&apos; &apos;(C)I&apos; in &apos;sun/nio/cs/ext/DoubleByte$Encoder&apos;
  # this:     rdx:rdx   = &apos;sun/nio/cs/ext/DoubleByte$Encoder&apos;
  # parm0:    r8        = char
  #           [sp+0x40]  (sp of caller)
  0x0000000003b79800: mov    0x8(%rdx),%r10d
  0x0000000003b79804: shl    $0x3,%r10
  0x0000000003b79808: cmp    %rax,%r10
  0x0000000003b7980b: jne    0x0000000003915f60  ;   {runtime_call}
  0x0000000003b79811: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000003b7981c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003b79820: mov    %eax,-0x6000(%rsp)
  0x0000000003b79827: push   %rbp
  0x0000000003b79828: sub    $0x30,%rsp
  0x0000000003b7982c: movabs $0x26675b88,%rax   ;   {metadata(method data for {method} {0x00000000265c9660} &apos;encodeChar&apos; &apos;(C)I&apos; in &apos;sun/nio/cs/ext/DoubleByte$Encoder&apos;)}
  0x0000000003b79836: mov    0xdc(%rax),%esi
  0x0000000003b7983c: add    $0x8,%esi
  0x0000000003b7983f: mov    %esi,0xdc(%rax)
  0x0000000003b79845: movabs $0x265c9658,%rax   ;   {metadata({method} {0x00000000265c9660} &apos;encodeChar&apos; &apos;(C)I&apos; in &apos;sun/nio/cs/ext/DoubleByte$Encoder&apos;)}
  0x0000000003b7984f: and    $0x1ff8,%esi
  0x0000000003b79855: cmp    $0x0,%esi
  0x0000000003b79858: je     0x0000000003b798aa  ;*aload_0
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@0 (line 656)

  0x0000000003b7985e: mov    0x30(%rdx),%eax
  0x0000000003b79861: shl    $0x3,%rax          ;*getfield c2b
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@1 (line 656)

  0x0000000003b79865: mov    0x34(%rdx),%esi
  0x0000000003b79868: shl    $0x3,%rsi          ;*getfield c2bIndex
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@5 (line 656)

  0x0000000003b7986c: mov    %r8,%rdi
  0x0000000003b7986f: sar    $0x8,%edi
  0x0000000003b79872: movslq %edi,%rbx
  0x0000000003b79875: cmp    0xc(%rsi),%edi     ; implicit exception: dispatches to 0x0000000003b798be
  0x0000000003b79878: jae    0x0000000003b798c8
  0x0000000003b7987e: movzwl 0x10(%rsi,%rbx,2),%esi  ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@12 (line 656)

  0x0000000003b79883: and    $0xff,%r8d
  0x0000000003b7988a: add    %r8d,%esi
  0x0000000003b7988d: movslq %esi,%rdi
  0x0000000003b79890: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x0000000003b798d1
  0x0000000003b79893: jae    0x0000000003b798db
  0x0000000003b79899: movzwl 0x10(%rax,%rdi,2),%eax  ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@19 (line 656)

  0x0000000003b7989e: add    $0x30,%rsp
  0x0000000003b798a2: pop    %rbp
  0x0000000003b798a3: test   %eax,-0x21497a9(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b798a9: retq   
  0x0000000003b798aa: mov    %rax,0x8(%rsp)
  0x0000000003b798af: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b798b7: callq  0x0000000003b789e0  ; OopMap{rdx=Oop off=188}
                                                ;*synchronization entry
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@-1 (line 656)
                                                ;   {runtime_call}
  0x0000000003b798bc: jmp    0x0000000003b7985e
  0x0000000003b798be: callq  0x000000000393f540  ; OopMap{rax=Oop rsi=Oop off=195}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@12 (line 656)
                                                ;   {runtime_call}
  0x0000000003b798c3: callq  0x000000000393f540  ; OopMap{rax=Oop rsi=Oop off=200}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@12 (line 656)
                                                ;   {runtime_call}
  0x0000000003b798c8: mov    %rdi,(%rsp)
  0x0000000003b798cc: callq  0x000000000393fc00  ; OopMap{rax=Oop rsi=Oop off=209}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@12 (line 656)
                                                ;   {runtime_call}
  0x0000000003b798d1: callq  0x000000000393f540  ; OopMap{rax=Oop off=214}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@19 (line 656)
                                                ;   {runtime_call}
  0x0000000003b798d6: callq  0x000000000393f540  ; OopMap{rax=Oop off=219}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@19 (line 656)
                                                ;   {runtime_call}
  0x0000000003b798db: mov    %rsi,(%rsp)
  0x0000000003b798df: callq  0x000000000393fc00  ; OopMap{rax=Oop off=228}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@19 (line 656)
                                                ;   {runtime_call}
  0x0000000003b798e4: nop
  0x0000000003b798e5: nop
  0x0000000003b798e6: mov    0x2a8(%r15),%rax
  0x0000000003b798ed: movabs $0x0,%r10
  0x0000000003b798f7: mov    %r10,0x2a8(%r15)
  0x0000000003b798fe: movabs $0x0,%r10
  0x0000000003b79908: mov    %r10,0x2b0(%r15)
  0x0000000003b7990f: add    $0x30,%rsp
  0x0000000003b79913: pop    %rbp
  0x0000000003b79914: jmpq   0x000000000393ea20  ;   {runtime_call}
  0x0000000003b79919: hlt    
  0x0000000003b7991a: hlt    
  0x0000000003b7991b: hlt    
  0x0000000003b7991c: hlt    
  0x0000000003b7991d: hlt    
  0x0000000003b7991e: hlt    
  0x0000000003b7991f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000003b79920: callq  0x000000000393f3a0  ;   {no_reloc}
  0x0000000003b79925: mov    %rsp,-0x28(%rsp)
  0x0000000003b7992a: sub    $0x80,%rsp
  0x0000000003b79931: mov    %rax,0x78(%rsp)
  0x0000000003b79936: mov    %rcx,0x70(%rsp)
  0x0000000003b7993b: mov    %rdx,0x68(%rsp)
  0x0000000003b79940: mov    %rbx,0x60(%rsp)
  0x0000000003b79945: mov    %rbp,0x50(%rsp)
  0x0000000003b7994a: mov    %rsi,0x48(%rsp)
  0x0000000003b7994f: mov    %rdi,0x40(%rsp)
  0x0000000003b79954: mov    %r8,0x38(%rsp)
  0x0000000003b79959: mov    %r9,0x30(%rsp)
  0x0000000003b7995e: mov    %r10,0x28(%rsp)
  0x0000000003b79963: mov    %r11,0x20(%rsp)
  0x0000000003b79968: mov    %r12,0x18(%rsp)
  0x0000000003b7996d: mov    %r13,0x10(%rsp)
  0x0000000003b79972: mov    %r14,0x8(%rsp)
  0x0000000003b79977: mov    %r15,(%rsp)
  0x0000000003b7997b: movabs $0x713a0770,%rcx   ;   {external_word}
  0x0000000003b79985: movabs $0x3b79925,%rdx    ;   {internal_word}
  0x0000000003b7998f: mov    %rsp,%r8
  0x0000000003b79992: and    $0xfffffffffffffff0,%rsp
  0x0000000003b79996: callq  0x0000000071056cc0  ;   {runtime_call}
  0x0000000003b7999b: hlt    
[Deopt Handler Code]
  0x0000000003b7999c: movabs $0x3b7999c,%r10    ;   {section_word}
  0x0000000003b799a6: push   %r10
  0x0000000003b799a8: jmpq   0x0000000003917600  ;   {runtime_call}
  0x0000000003b799ad: hlt    
  0x0000000003b799ae: hlt    
  0x0000000003b799af: hlt    
<nmethod compile_id='5' compiler='C1' level='3' entry='0x0000000003b79800' size='1144' address='0x0000000003b79690' relocation_offset='288' insts_offset='368' stub_offset='656' scopes_data_offset='808' scopes_pcs_offset='872' dependencies_offset='1096' nul_chk_table_offset='1104' method='sun/nio/cs/ext/DoubleByte$Encoder encodeChar (C)I' bytes='21' count='914' iicount='914' stamp='0.081'/>
<writer thread='13832'/>
[Loaded java.lang.ClassValue$Version from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22872'/>
[Loaded java.net.InetAddress$Cache$Type from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.net.InetAddressImplFactory from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='13832'/>
[Loaded java.lang.invoke.MemberName$Factory from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22872'/>
<task_queued compile_id='6' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4352' iicount='4352' level='3' stamp='0.081' comment='tiered' hot_count='4352'/>
<writer thread='13832'/>
[Loaded java.lang.invoke.MethodHandleStatics from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22872'/>
[Loaded java.net.InetAddressImpl from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.net.Inet6AddressImpl from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='13832'/>
[Loaded java.lang.invoke.MethodHandleStatics$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='23180'/>
Decoding compiled method 0x0000000003b78e50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000026440488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x0000000003b78fa0: 
<writer thread='22872'/>
[Loaded sun.net.spi.nameservice.NameService from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='23180'/>
mov    0x8(%rdx),%r10d
  0x0000000003b78fa4: shl    $0x3,%r10
  0x0000000003b78fa8: cmp    %rax,%r10
  0x0000000003b78fab: jne    0x0000000003915f60  ;   {runtime_call}
  0x0000000003b78fb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000003b78fbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003b78fc0: mov    %eax,-0x6000(%rsp)
  0x0000000003b78fc7: push   %rbp
  0x0000000003b78fc8: sub    $0x50,%rsp
  0x0000000003b78fcc: movabs $0x265743d8,%rcx   ;   {metadata(method data for {method} {0x0000000026440488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000003b78fd6: mov    0xdc(%rcx),%esi
  0x0000000003b78fdc: add    $0x8,%esi
  0x0000000003b78fdf: mov    %esi,0xdc(%rcx)
  0x0000000003b78fe5: movabs $0x26440480,%rcx   ;   {metadata({method} {0x0000000026440488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000003b78fef: and    $0x1ff8,%esi
  0x0000000003b78ff5: cmp    $0x0,%esi
  0x0000000003b78ff8: je     0x0000000003b79017
  0x0000000003b78ffe: mov    %rdx,%rcx          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x0000000003b79001: mov    %rdx,0x40(%rsp)
  0x0000000003b79006: callq  0x0000000003b76ca0  ; OopMap{[64]=Oop off=107}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x0000000003b7900b: add    $0x50,%rsp
  0x0000000003b7900f: pop    %rbp
  0x0000000003b79010: test   %eax,-0x2148f16(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b79016: retq   
  0x0000000003b79017: mov    %rcx,0x8(%rsp)
  0x0000000003b7901c: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b79024: callq  0x0000000003b789e0  ; OopMap{rdx=Oop off=137}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ;   {runtime_call}
  0x0000000003b79029: jmp    0x0000000003b78ffe
  0x0000000003b7902b: nop
  0x0000000003b7902c: nop
  0x0000000003b7902d: mov    0x2a8(%r15),%rax
  0x0000000003b79034: movabs $0x0,%r10
  0x0000000003b7903e: mov    %r10,0x2a8(%r15)
  0x0000000003b79045: movabs $0x0,%r10
  0x0000000003b7904f: mov    %r10,0x2b0(%r15)
  0x0000000003b79056: add    $0x50,%rsp
  0x0000000003b7905a: pop    %rbp
  0x0000000003b7905b: jmpq   0x000000000393ea20  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x0000000003b79060: callq  0x000000000393f3a0  ;   {no_reloc}
  0x0000000003b79065: mov    %rsp,-0x28(%rsp)
  0x0000000003b7906a: sub    $0x80,%rsp
  0x0000000003b79071: mov    %rax,0x78(%rsp)
  0x0000000003b79076: mov    %rcx,0x70(%rsp)
  0x0000000003b7907b: mov    %rdx,0x68(%rsp)
  0x0000000003b79080: mov    %rbx,0x60(%rsp)
  0x0000000003b79085: mov    %rbp,0x50(%rsp)
  0x0000000003b7908a: mov    %rsi,0x48(%rsp)
  0x0000000003b7908f: mov    %rdi,0x40(%rsp)
  0x0000000003b79094: mov    %r8,0x38(%rsp)
  0x0000000003b79099: mov    %r9,0x30(%rsp)
  0x0000000003b7909e: mov    %r10,0x28(%rsp)
  0x0000000003b790a3: mov    %r11,0x20(%rsp)
  0x0000000003b790a8: mov    %r12,0x18(%rsp)
  0x0000000003b790ad: mov    %r13,0x10(%rsp)
  0x0000000003b790b2: mov    %r14,0x8(%rsp)
  0x0000000003b790b7: mov    %r15,(%rsp)
  0x0000000003b790bb: movabs $0x713a0770,%rcx   ;   {external_word}
  0x0000000003b790c5: movabs $0x3b79065,%rdx    ;   {internal_word}
  0x0000000003b790cf: mov    %rsp,%r8
  0x0000000003b790d2: and    $0xfffffffffffffff0,%rsp
  0x0000000003b790d6: callq  0x0000000071056cc0  ;   {runtime_call}
  0x0000000003b790db: hlt    
[Deopt Handler Code]
  0x0000000003b790dc: movabs $0x3b790dc,%r10    ;   {section_word}
  0x0000000003b790e6: push   %r10
  0x0000000003b790e8: jmpq   0x0000000003917600  ;   {runtime_call}
  0x0000000003b790ed: hlt    
  0x0000000003b790ee: hlt    
  0x0000000003b790ef: hlt    
<nmethod compile_id='6' compiler='C1' level='3' entry='0x0000000003b78fa0' size='800' address='0x0000000003b78e50' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='712' dependencies_offset='792' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4363' iicount='4363' stamp='0.082'/>
<writer thread='22872'/>
[Loaded java.net.InetAddress$2 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<task_queued compile_id='7' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='2944' iicount='2944' level='3' stamp='0.082' comment='tiered' hot_count='2944'/>
[Loaded sun.net.util.IPAddressUtil from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31628'/>
</blob>
[Loaded java.net.Inet4Address from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='13832'/>
<task_queued compile_id='8' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='640' backedge_count='2994' iicount='640' level='3' stamp='0.082' comment='tiered' hot_count='640'/>
[Loaded sun.misc.PostVMInitHook from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='5512'/>
Decoding compiled method 0x0000000003b7ac10:
Code:
<writer thread='22872'/>
[Loaded java.net.SocksConsts from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='5512'/>
[Entry Point]
[Constants]
  # {method} {0x00000000264b8ba8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuilder&apos;
  # parm0:    r8        = char
  #           [sp+0x100]  (sp of caller)
  0x0000000003b7adc0: mov    0x8(%rdx),%r10d
  0x0000000003b7adc4: shl    $0x3,%r10
  0x0000000003b7adc8: cmp    %rax,%r10
  0x0000000003b7adcb: jne    0x0000000003915f60  ;   {runtime_call}
  0x0000000003b7add1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000003b7addc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003b7ade0: mov    %eax,-0x6000(%rsp)
  0x0000000003b7ade7: push   %rbp
  0x0000000003b7ade8: sub    $0xf0,%rsp
  0x0000000003b7adef: movabs $0x26643dc0,%rsi   ;   {metadata(method data for {method} {0x00000000264b8ba8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000003b7adf9: mov    0xdc(%rsi),%edi
  0x0000000003b7adff: add    $0x8,%edi
  0x0000000003b7ae02: mov    %edi,0xdc(%rsi)
  0x0000000003b7ae08: movabs $0x264b8ba0,%rsi   ;   {metadata({method} {0x00000000264b8ba8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000003b7ae12: and    $0x1ff8,%edi
  0x0000000003b7ae18: cmp    $0x0,%edi
  0x0000000003b7ae1b: je     0x0000000003b7b1b9  ;*aload_0
                                                ; - java.lang.StringBuilder::append@0 (line 202)

  0x0000000003b7ae21: mov    %rdx,%rsi
  0x0000000003b7ae24: movabs $0x26643dc0,%rdi   ;   {metadata(method data for {method} {0x00000000264b8ba8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000003b7ae2e: addq   $0x1,0x108(%rdi)
  0x0000000003b7ae36: movabs $0x26643c88,%rsi   ;   {metadata(method data for {method} {0x00000000264b5b50} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003b7ae40: mov    0xdc(%rsi),%edi
  0x0000000003b7ae46: add    $0x8,%edi
  0x0000000003b7ae49: mov    %edi,0xdc(%rsi)
  0x0000000003b7ae4f: movabs $0x264b5b48,%rsi   ;   {metadata({method} {0x00000000264b5b50} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003b7ae59: and    $0x7ffff8,%edi
  0x0000000003b7ae5f: cmp    $0x0,%edi
  0x0000000003b7ae62: je     0x0000000003b7b1d0
  0x0000000003b7ae68: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000003b7ae6b: inc    %esi
  0x0000000003b7ae6d: mov    %rdx,%rdi
  0x0000000003b7ae70: movabs $0x26643c88,%rbx   ;   {metadata(method data for {method} {0x00000000264b5b50} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003b7ae7a: addq   $0x1,0x108(%rbx)
  0x0000000003b7ae82: movabs $0x26643af8,%rdi   ;   {metadata(method data for {method} {0x00000000264b4a18} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003b7ae8c: mov    0xdc(%rdi),%ebx
  0x0000000003b7ae92: add    $0x8,%ebx
  0x0000000003b7ae95: mov    %ebx,0xdc(%rdi)
  0x0000000003b7ae9b: movabs $0x264b4a10,%rdi   ;   {metadata({method} {0x00000000264b4a18} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003b7aea5: and    $0x7ffff8,%ebx
  0x0000000003b7aeab: cmp    $0x0,%ebx
  0x0000000003b7aeae: je     0x0000000003b7b1e7
  0x0000000003b7aeb4: mov    0x10(%rdx),%edi
  0x0000000003b7aeb7: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000003b7aebb: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; implicit exception: dispatches to 0x0000000003b7b1fe
  0x0000000003b7aebe: mov    %rsi,%rax
  0x0000000003b7aec1: sub    %ebx,%eax
  0x0000000003b7aec3: cmp    $0x0,%eax
  0x0000000003b7aec6: movabs $0x26643af8,%rax   ;   {metadata(method data for {method} {0x00000000264b4a18} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003b7aed0: movabs $0x108,%rcx
  0x0000000003b7aeda: jle    0x0000000003b7aeea
  0x0000000003b7aee0: movabs $0x118,%rcx
  0x0000000003b7aeea: mov    (%rax,%rcx,1),%r9
  0x0000000003b7aeee: lea    0x1(%r9),%r9
  0x0000000003b7aef2: mov    %r9,(%rax,%rcx,1)
  0x0000000003b7aef6: jg     0x0000000003b7af09  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000003b7aefc: mov    %r8d,0xc4(%rsp)
  0x0000000003b7af04: jmpq   0x0000000003b7b17b  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000003b7af09: mov    %ebx,0xc0(%rsp)
  0x0000000003b7af10: mov    %rdi,0xc8(%rsp)
  0x0000000003b7af18: mov    %r8d,0xc4(%rsp)
  0x0000000003b7af20: mov    %rdx,%rax
  0x0000000003b7af23: movabs $0x26643af8,%rcx   ;   {metadata(method data for {method} {0x00000000264b4a18} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003b7af2d: addq   $0x1,0x128(%rcx)
  0x0000000003b7af35: mov    %rsi,%r8
  0x0000000003b7af38: mov    %rdx,%rsi
  0x0000000003b7af3b: mov    %rsi,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000003b7af3e: mov    %rsi,0xd0(%rsp)
  0x0000000003b7af46: nop
  0x0000000003b7af47: callq  0x00000000039161a0  ; OopMap{[208]=Oop [200]=Oop off=396}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {optimized virtual_call}
  0x0000000003b7af4c: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000003b7af4f: movabs $0x26643af8,%rbx   ;   {metadata(method data for {method} {0x00000000264b4a18} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003b7af59: addq   $0x1,0x138(%rbx)
  0x0000000003b7af61: movabs $0x266bd6b0,%rbx   ;   {metadata(method data for {method} {0x0000000026559828} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000003b7af6b: mov    0xdc(%rbx),%edx
  0x0000000003b7af71: add    $0x8,%edx
  0x0000000003b7af74: mov    %edx,0xdc(%rbx)
  0x0000000003b7af7a: movabs $0x26559820,%rbx   ;   {metadata({method} {0x0000000026559828} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000003b7af84: and    $0x7ffff8,%edx
  0x0000000003b7af8a: cmp    $0x0,%edx
  0x0000000003b7af8d: je     0x0000000003b7b203
  0x0000000003b7af93: mov    %r8,%rbx
  0x0000000003b7af96: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000003b7afa0: movslq %ebx,%rbx
  0x0000000003b7afa3: mov    %rbx,%rdi
  0x0000000003b7afa6: cmp    $0xffffff,%rbx
  0x0000000003b7afad: ja     0x0000000003b7b21a
  0x0000000003b7afb3: movabs $0x17,%rsi
  0x0000000003b7afbd: lea    (%rsi,%rbx,2),%rsi
  0x0000000003b7afc1: and    $0xfffffffffffffff8,%rsi
  0x0000000003b7afc5: mov    0x60(%r15),%rax
  0x0000000003b7afc9: lea    (%rax,%rsi,1),%rsi
  0x0000000003b7afcd: cmp    0x70(%r15),%rsi
  0x0000000003b7afd1: ja     0x0000000003b7b21a
  0x0000000003b7afd7: mov    %rsi,0x60(%r15)
  0x0000000003b7afdb: sub    %rax,%rsi
  0x0000000003b7afde: movq   $0x1,(%rax)
  0x0000000003b7afe5: mov    %rdx,%rcx
  0x0000000003b7afe8: shr    $0x3,%rcx
  0x0000000003b7afec: mov    %ecx,0x8(%rax)
  0x0000000003b7afef: mov    %ebx,0xc(%rax)
  0x0000000003b7aff2: sub    $0x10,%rsi
  0x0000000003b7aff6: je     0x0000000003b7b00d
  0x0000000003b7affc: xor    %rbx,%rbx
  0x0000000003b7afff: shr    $0x3,%rsi
  0x0000000003b7b003: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000003b7b008: dec    %rsi
  0x0000000003b7b00b: jne    0x0000000003b7b003  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000003b7b00d: movabs $0x266bd6b0,%rdx   ;   {metadata(method data for {method} {0x0000000026559828} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000003b7b017: addq   $0x1,0x108(%rdx)
  0x0000000003b7b01f: movabs $0x2662ffd0,%rdx   ;   {metadata(method data for {method} {0x00000000265352d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000003b7b029: mov    0xdc(%rdx),%r9d
  0x0000000003b7b030: add    $0x8,%r9d
  0x0000000003b7b034: mov    %r9d,0xdc(%rdx)
  0x0000000003b7b03b: movabs $0x265352c8,%rdx   ;   {metadata({method} {0x00000000265352d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000003b7b045: and    $0x7ffff8,%r9d
  0x0000000003b7b04c: cmp    $0x0,%r9d
  0x0000000003b7b050: je     0x0000000003b7b224
  0x0000000003b7b056: mov    0xc0(%rsp),%ebx
  0x0000000003b7b05d: cmp    %r8d,%ebx
  0x0000000003b7b060: movabs $0x2662ffd0,%rdx   ;   {metadata(method data for {method} {0x00000000265352d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000003b7b06a: movabs $0x108,%r9
  0x0000000003b7b074: jg     0x0000000003b7b084
  0x0000000003b7b07a: movabs $0x118,%r9
  0x0000000003b7b084: mov    (%rdx,%r9,1),%rdi
  0x0000000003b7b088: lea    0x1(%rdi),%rdi
  0x0000000003b7b08c: mov    %rdi,(%rdx,%r9,1)
  0x0000000003b7b090: jg     0x0000000003b7b0ab  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000003b7b096: movabs $0x2662ffd0,%rdx   ;   {metadata(method data for {method} {0x00000000265352d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000003b7b0a0: incl   0x128(%rdx)
  0x0000000003b7b0a6: jmpq   0x0000000003b7b0ae  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000003b7b0ab: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000003b7b0ae: mov    0xc8(%rsp),%rdi
  0x0000000003b7b0b6: movabs $0x266bd6b0,%rdx   ;   {metadata(method data for {method} {0x0000000026559828} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000003b7b0c0: addq   $0x1,0x118(%rdx)
  0x0000000003b7b0c8: mov    %rdi,%rdx
  0x0000000003b7b0cb: mov    $0x0,%r8d
  0x0000000003b7b0d1: mov    %rax,%r9
  0x0000000003b7b0d4: mov    $0x0,%edi
  0x0000000003b7b0d9: mov    %rbx,%rsi
  0x0000000003b7b0dc: mov    %rax,0xd8(%rsp)
  0x0000000003b7b0e4: lea    (%r8,%rsi,1),%rcx
  0x0000000003b7b0e8: cmp    0xc(%rdx),%ecx
  0x0000000003b7b0eb: ja     0x0000000003b7b23b
  0x0000000003b7b0f1: lea    (%rdi,%rsi,1),%rcx
  0x0000000003b7b0f5: cmp    0xc(%r9),%ecx
  0x0000000003b7b0f9: ja     0x0000000003b7b23b
  0x0000000003b7b0ff: test   %esi,%esi
  0x0000000003b7b101: jl     0x0000000003b7b23b
  0x0000000003b7b107: je     0x0000000003b7b14b
  0x0000000003b7b10d: movslq %r8d,%r8
  0x0000000003b7b110: movslq %edi,%rdi
  0x0000000003b7b113: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000003b7b118: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000003b7b11d: mov    %rsi,%r8
  0x0000000003b7b120: sub    $0x20,%rsp
  0x0000000003b7b124: test   $0xf,%esp
  0x0000000003b7b12a: je     0x0000000003b7b142
  0x0000000003b7b130: sub    $0x8,%rsp
  0x0000000003b7b134: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000003b7b139: add    $0x8,%rsp
  0x0000000003b7b13d: jmpq   0x0000000003b7b147
  0x0000000003b7b142: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000003b7b147: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000003b7b14b: mov    0xd8(%rsp),%rax
  0x0000000003b7b153: mov    0xd0(%rsp),%rdx
  0x0000000003b7b15b: mov    %rax,%r10
  0x0000000003b7b15e: shr    $0x3,%r10
  0x0000000003b7b162: mov    %r10d,0x10(%rdx)
  0x0000000003b7b166: mov    %rdx,%rax
  0x0000000003b7b169: shr    $0x9,%rax
  0x0000000003b7b16d: movabs $0xfe86000,%rsi
  0x0000000003b7b177: movb   $0x0,(%rax,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000003b7b17b: mov    0xc4(%rsp),%r8d
  0x0000000003b7b183: mov    0x10(%rdx),%eax
  0x0000000003b7b186: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000003b7b18a: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000003b7b18d: mov    %rsi,%rdi
  0x0000000003b7b190: inc    %edi
  0x0000000003b7b192: mov    %edi,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000003b7b195: movslq %esi,%rdi
  0x0000000003b7b198: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x0000000003b7b249
  0x0000000003b7b19b: jae    0x0000000003b7b253
  0x0000000003b7b1a1: mov    %r8w,0x10(%rax,%rdi,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000003b7b1a7: mov    %rdx,%rax
  0x0000000003b7b1aa: add    $0xf0,%rsp
  0x0000000003b7b1b1: pop    %rbp
  0x0000000003b7b1b2: test   %eax,-0x214b0b8(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b7b1b8: retq   
  0x0000000003b7b1b9: mov    %rsi,0x8(%rsp)
  0x0000000003b7b1be: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b7b1c6: callq  0x0000000003b789e0  ; OopMap{rdx=Oop off=1035}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 202)
                                                ;   {runtime_call}
  0x0000000003b7b1cb: jmpq   0x0000000003b7ae21
  0x0000000003b7b1d0: mov    %rsi,0x8(%rsp)
  0x0000000003b7b1d5: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b7b1dd: callq  0x0000000003b789e0  ; OopMap{rdx=Oop off=1058}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x0000000003b7b1e2: jmpq   0x0000000003b7ae68
  0x0000000003b7b1e7: mov    %rdi,0x8(%rsp)
  0x0000000003b7b1ec: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b7b1f4: callq  0x0000000003b789e0  ; OopMap{rdx=Oop off=1081}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x0000000003b7b1f9: jmpq   0x0000000003b7aeb4
  0x0000000003b7b1fe: callq  0x000000000393f540  ; OopMap{rdx=Oop rdi=Oop off=1091}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x0000000003b7b203: mov    %rbx,0x8(%rsp)
  0x0000000003b7b208: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b7b210: callq  0x0000000003b789e0  ; OopMap{[208]=Oop [200]=Oop off=1109}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x0000000003b7b215: jmpq   0x0000000003b7af93
  0x0000000003b7b21a: callq  0x00000000039402c0  ; OopMap{[208]=Oop [200]=Oop off=1119}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x0000000003b7b21f: jmpq   0x0000000003b7b00d
  0x0000000003b7b224: mov    %rdx,0x8(%rsp)
  0x0000000003b7b229: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b7b231: callq  0x0000000003b789e0  ; OopMap{[208]=Oop [200]=Oop rax=Oop off=1142}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x0000000003b7b236: jmpq   0x0000000003b7b056
  0x0000000003b7b23b: nop
  0x0000000003b7b23c: nop
  0x0000000003b7b23d: nop
  0x0000000003b7b23e: nop
  0x0000000003b7b23f: callq  0x0000000003916620  ; OopMap{[208]=Oop [216]=Oop off=1156}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {static_call}
  0x0000000003b7b244: jmpq   0x0000000003b7b14b
  0x0000000003b7b249: callq  0x000000000393f540  ; OopMap{rdx=Oop rax=Oop off=1166}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x0000000003b7b24e: callq  0x000000000393f540  ; OopMap{rdx=Oop rax=Oop off=1171}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x0000000003b7b253: mov    %rsi,(%rsp)
  0x0000000003b7b257: callq  0x000000000393fc00  ; OopMap{rdx=Oop rax=Oop off=1180}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x0000000003b7b25c: nop
  0x0000000003b7b25d: nop
  0x0000000003b7b25e: mov    0x2a8(%r15),%rax
  0x0000000003b7b265: movabs $0x0,%r10
  0x0000000003b7b26f: mov    %r10,0x2a8(%r15)
  0x0000000003b7b276: movabs $0x0,%r10
  0x0000000003b7b280: mov    %r10,0x2b0(%r15)
  0x0000000003b7b287: add    $0xf0,%rsp
  0x0000000003b7b28e: pop    %rbp
  0x0000000003b7b28f: jmpq   0x000000000393ea20  ;   {runtime_call}
  0x0000000003b7b294: hlt    
  0x0000000003b7b295: hlt    
  0x0000000003b7b296: hlt    
  0x0000000003b7b297: hlt    
  0x0000000003b7b298: hlt    
  0x0000000003b7b299: hlt    
  0x0000000003b7b29a: hlt    
  0x0000000003b7b29b: hlt    
  0x0000000003b7b29c: hlt    
  0x0000000003b7b29d: hlt    
  0x0000000003b7b29e: hlt    
  0x0000000003b7b29f: hlt    
[Stub Code]
  0x0000000003b7b2a0: nop                       ;   {no_reloc}
  0x0000000003b7b2a1: nop
  0x0000000003b7b2a2: nop
  0x0000000003b7b2a3: nop
  0x0000000003b7b2a4: nop
  0x0000000003b7b2a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b7b2af: jmpq   0x0000000003b7b2af  ;   {runtime_call}
  0x0000000003b7b2b4: nop
  0x0000000003b7b2b5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b7b2bf: jmpq   0x0000000003b7b2bf  ;   {runtime_call}
[Exception Handler]
  0x0000000003b7b2c4: callq  0x000000000393f3a0  ;   {runtime_call}
  0x0000000003b7b2c9: mov    %rsp,-0x28(%rsp)
  0x0000000003b7b2ce: sub    $0x80,%rsp
  0x0000000003b7b2d5: mov    %rax,0x78(%rsp)
  0x0000000003b7b2da: mov    %rcx,0x70(%rsp)
  0x0000000003b7b2df: mov    %rdx,0x68(%rsp)
  0x0000000003b7b2e4: mov    %rbx,0x60(%rsp)
  0x0000000003b7b2e9: mov    %rbp,0x50(%rsp)
  0x0000000003b7b2ee: mov    %rsi,0x48(%rsp)
  0x0000000003b7b2f3: mov    %rdi,0x40(%rsp)
  0x0000000003b7b2f8: mov    %r8,0x38(%rsp)
  0x0000000003b7b2fd: mov    %r9,0x30(%rsp)
  0x0000000003b7b302: mov    %r10,0x28(%rsp)
  0x0000000003b7b307: mov    %r11,0x20(%rsp)
  0x0000000003b7b30c: mov    %r12,0x18(%rsp)
  0x0000000003b7b311: mov    %r13,0x10(%rsp)
  0x0000000003b7b316: mov    %r14,0x8(%rsp)
  0x0000000003b7b31b: mov    %r15,(%rsp)
  0x0000000003b7b31f: movabs $0x713a0770,%rcx   ;   {external_word}
  0x0000000003b7b329: movabs $0x3b7b2c9,%rdx    ;   {internal_word}
  0x0000000003b7b333: mov    %rsp,%r8
  0x0000000003b7b336: and    $0xfffffffffffffff0,%rsp
  0x0000000003b7b33a: callq  0x0000000071056cc0  ;   {runtime_call}
  0x0000000003b7b33f: hlt    
[Deopt Handler Code]
  0x0000000003b7b340: movabs $0x3b7b340,%r10    ;   {section_word}
  0x0000000003b7b34a: push   %r10
  0x0000000003b7b34c: jmpq   0x0000000003917600  ;   {runtime_call}
  0x0000000003b7b351: hlt    
  0x0000000003b7b352: hlt    
  0x0000000003b7b353: hlt    
  0x0000000003b7b354: hlt    
  0x0000000003b7b355: hlt    
  0x0000000003b7b356: hlt    
  0x0000000003b7b357: hlt    
<nmethod compile_id='7' compiler='C1' level='3' entry='0x0000000003b7adc0' size='2784' address='0x0000000003b7ac10' relocation_offset='288' insts_offset='432' stub_offset='1680' scopes_data_offset='1904' scopes_pcs_offset='2232' dependencies_offset='2744' nul_chk_table_offset='2752' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='2944' iicount='2944' stamp='0.088'/>
<writer thread='22084'/>
Decoding compiled method 0x0000000003b86990:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000264445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000003b86b20: mov    0x8(%rdx),%r10d
  0x0000000003b86b24: shl    $0x3,%r10
  0x0000000003b86b28: cmp    %rax,%r10
  0x0000000003b86b2b: jne    0x0000000003915f60  ;   {runtime_call}
  0x0000000003b86b31: 
<writer thread='22872'/>
[Loaded java.net.SocketOptions from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22084'/>
data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000003b86b3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003b86b40: mov    %eax,-0x6000(%rsp)
  0x0000000003b86b47: push   %rbp
  0x0000000003b86b48: sub    $0x30,%rsp
  0x0000000003b86b4c: movabs $0x26675920,%rax   ;   {metadata(method data for {method} {0x00000000264445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b86b56: mov    0xdc(%rax),%esi
  0x0000000003b86b5c: add    $0x8,%esi
  0x0000000003b86b5f: mov    %esi,0xdc(%rax)
  0x0000000003b86b65: movabs $0x264445d0,%rax   ;   {metadata({method} {0x00000000264445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b86b6f: and    $0x1ff8,%esi
  0x0000000003b86b75: cmp    $0x0,%esi
  0x0000000003b86b78: je     0x0000000003b86f4e  ;*aload_0
                                                ; - java.lang.String::equals@0 (line 977)

  0x0000000003b86b7e: cmp    %r8,%rdx
  0x0000000003b86b81: movabs $0x26675920,%rax   ;   {metadata(method data for {method} {0x00000000264445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b86b8b: movabs $0x108,%rsi
  0x0000000003b86b95: jne    0x0000000003b86ba5
  0x0000000003b86b9b: movabs $0x118,%rsi
  0x0000000003b86ba5: mov    (%rax,%rsi,1),%rdi
  0x0000000003b86ba9: lea    0x1(%rdi),%rdi
  0x0000000003b86bad: mov    %rdi,(%rax,%rsi,1)
  0x0000000003b86bb1: je     0x0000000003b86f3d  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x0000000003b86bb7: cmp    $0x0,%r8
  0x0000000003b86bbb: jne    0x0000000003b86bd6
  0x0000000003b86bbd: movabs $0x26675920,%rdi   ;   {metadata(method data for {method} {0x00000000264445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b86bc7: orl    $0x100,0x120(%rdi)
  0x0000000003b86bd1: jmpq   0x0000000003b86c98
  0x0000000003b86bd6: movabs $0x7c00016d0,%rbx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000003b86be0: mov    0x8(%r8),%esi
  0x0000000003b86be4: shl    $0x3,%rsi
  0x0000000003b86be8: cmp    %rsi,%rbx
  0x0000000003b86beb: jne    0x0000000003b86c7c
  0x0000000003b86bf1: movabs $0x26675920,%rdi   ;   {metadata(method data for {method} {0x00000000264445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b86bfb: mov    0x8(%r8),%ebx
  0x0000000003b86bff: shl    $0x3,%rbx
  0x0000000003b86c03: cmp    0x130(%rdi),%rbx
  0x0000000003b86c0a: jne    0x0000000003b86c19
  0x0000000003b86c0c: addq   $0x1,0x138(%rdi)
  0x0000000003b86c14: jmpq   0x0000000003b86c9d
  0x0000000003b86c19: cmp    0x140(%rdi),%rbx
  0x0000000003b86c20: jne    0x0000000003b86c2f
  0x0000000003b86c22: addq   $0x1,0x148(%rdi)
  0x0000000003b86c2a: jmpq   0x0000000003b86c9d
  0x0000000003b86c2f: cmpq   $0x0,0x130(%rdi)
  0x0000000003b86c3a: jne    0x0000000003b86c53
  0x0000000003b86c3c: mov    %rbx,0x130(%rdi)
  0x0000000003b86c43: movq   $0x1,0x138(%rdi)
  0x0000000003b86c4e: jmpq   0x0000000003b86c9d
  0x0000000003b86c53: cmpq   $0x0,0x140(%rdi)
  0x0000000003b86c5e: jne    0x0000000003b86c77
  0x0000000003b86c60: mov    %rbx,0x140(%rdi)
  0x0000000003b86c67: movq   $0x1,0x148(%rdi)
  0x0000000003b86c72: jmpq   0x0000000003b86c9d
  0x0000000003b86c77: jmpq   0x0000000003b86c9d
  0x0000000003b86c7c: movabs $0x26675920,%rdi   ;   {metadata(method data for {method} {0x00000000264445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b86c86: subq   $0x1,0x128(%rdi)
  0x0000000003b86c8e: jmpq   0x0000000003b86c98
  0x0000000003b86c93: jmpq   0x0000000003b86c9d
  0x0000000003b86c98: xor    %rax,%rax
  0x0000000003b86c9b: jmp    0x0000000003b86ca7
  0x0000000003b86c9d: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x0000000003b86ca7: cmp    $0x0,%eax
  0x0000000003b86caa: movabs $0x26675920,%rax   ;   {metadata(method data for {method} {0x00000000264445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b86cb4: movabs $0x158,%rsi
  0x0000000003b86cbe: je     0x0000000003b86cce
  0x0000000003b86cc4: movabs $0x168,%rsi
  0x0000000003b86cce: mov    (%rax,%rsi,1),%rdi
  0x0000000003b86cd2: lea    0x1(%rdi),%rdi
  0x0000000003b86cd6: mov    %rdi,(%rax,%rsi,1)
  0x0000000003b86cda: je     0x0000000003b86f2c  ;*ifeq
                                                ; - java.lang.String::equals@11 (line 980)

  0x0000000003b86ce0: cmp    $0x0,%r8
  0x0000000003b86ce4: jne    0x0000000003b86cff
  0x0000000003b86ce6: movabs $0x26675920,%rdi   ;   {metadata(method data for {method} {0x00000000264445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b86cf0: orl    $0x100,0x170(%rdi)
  0x0000000003b86cfa: jmpq   0x0000000003b86dc1
  0x0000000003b86cff: movabs $0x7c00016d0,%rbx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000003b86d09: mov    0x8(%r8),%esi
  0x0000000003b86d0d: shl    $0x3,%rsi
  0x0000000003b86d11: cmp    %rsi,%rbx
  0x0000000003b86d14: jne    0x0000000003b86da5
  0x0000000003b86d1a: movabs $0x26675920,%rdi   ;   {metadata(method data for {method} {0x00000000264445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b86d24: mov    0x8(%r8),%ebx
  0x0000000003b86d28: shl    $0x3,%rbx
  0x0000000003b86d2c: cmp    0x180(%rdi),%rbx
  0x0000000003b86d33: jne    0x0000000003b86d42
  0x0000000003b86d35: addq   $0x1,0x188(%rdi)
  0x0000000003b86d3d: jmpq   0x0000000003b86dc1
  0x0000000003b86d42: cmp    0x190(%rdi),%rbx
  0x0000000003b86d49: jne    0x0000000003b86d58
  0x0000000003b86d4b: addq   $0x1,0x198(%rdi)
  0x0000000003b86d53: jmpq   0x0000000003b86dc1
  0x0000000003b86d58: cmpq   $0x0,0x180(%rdi)
  0x0000000003b86d63: jne    0x0000000003b86d7c
  0x0000000003b86d65: mov    %rbx,0x180(%rdi)
  0x0000000003b86d6c: movq   $0x1,0x188(%rdi)
  0x0000000003b86d77: jmpq   0x0000000003b86dc1
  0x0000000003b86d7c: cmpq   $0x0,0x190(%rdi)
  0x0000000003b86d87: jne    0x0000000003b86da0
  0x0000000003b86d89: mov    %rbx,0x190(%rdi)
  0x0000000003b86d90: movq   $0x1,0x198(%rdi)
  0x0000000003b86d9b: jmpq   0x0000000003b86dc1
  0x0000000003b86da0: jmpq   0x0000000003b86dc1
  0x0000000003b86da5: movabs $0x26675920,%rdi   ;   {metadata(method data for {method} {0x00000000264445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b86daf: subq   $0x1,0x178(%rdi)
  0x0000000003b86db7: jmpq   0x0000000003b86f65
  0x0000000003b86dbc: jmpq   0x0000000003b86dc1
  0x0000000003b86dc1: mov    %r8,%rax           ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)

  0x0000000003b86dc4: mov    0xc(%rdx),%esi
  0x0000000003b86dc7: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x0000000003b86dcb: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ; implicit exception: dispatches to 0x0000000003b86f6e
  0x0000000003b86dce: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x0000000003b86f73
  0x0000000003b86dd1: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x0000000003b86dd5: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x0000000003b86f78
  0x0000000003b86dd8: cmp    %ebx,%edi
  0x0000000003b86dda: movabs $0x26675920,%rbx   ;   {metadata(method data for {method} {0x00000000264445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b86de4: movabs $0x1a8,%rdx
  0x0000000003b86dee: jne    0x0000000003b86dfe
  0x0000000003b86df4: movabs $0x1b8,%rdx
  0x0000000003b86dfe: mov    (%rbx,%rdx,1),%rcx
  0x0000000003b86e02: lea    0x1(%rcx),%rcx
  0x0000000003b86e06: mov    %rcx,(%rbx,%rdx,1)
  0x0000000003b86e0a: jne    0x0000000003b86f2c  ;*if_icmpne
                                                ; - java.lang.String::equals@31 (line 983)

  0x0000000003b86e10: mov    $0x0,%ebx
  0x0000000003b86e15: jmpq   0x0000000003b86ec7  ;*iload_3
                                                ; - java.lang.String::equals@49 (line 987)

  0x0000000003b86e1a: nopw   0x0(%rax,%rax,1)
  0x0000000003b86e20: movslq %ebx,%rdi
  0x0000000003b86e23: cmp    0xc(%rsi),%ebx
  0x0000000003b86e26: jae    0x0000000003b86f7d
  0x0000000003b86e2c: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000003b86e31: movslq %ebx,%rcx
  0x0000000003b86e34: cmp    0xc(%rax),%ebx
  0x0000000003b86e37: jae    0x0000000003b86f86
  0x0000000003b86e3d: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000003b86e42: cmp    %ecx,%edi
  0x0000000003b86e44: movabs $0x26675920,%rdi   ;   {metadata(method data for {method} {0x00000000264445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b86e4e: movabs $0x1e8,%rcx
  0x0000000003b86e58: je     0x0000000003b86e68
  0x0000000003b86e5e: movabs $0x1f8,%rcx
  0x0000000003b86e68: mov    (%rdi,%rcx,1),%r8
  0x0000000003b86e6c: lea    0x1(%r8),%r8
  0x0000000003b86e70: mov    %r8,(%rdi,%rcx,1)
  0x0000000003b86e74: jne    0x0000000003b86f0a  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000000003b86e7a: inc    %ebx
  0x0000000003b86e7c: movabs $0x26675920,%rdi   ;   {metadata(method data for {method} {0x00000000264445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b86e86: mov    0xe0(%rdi),%ecx
  0x0000000003b86e8c: add    $0x8,%ecx
  0x0000000003b86e8f: mov    %ecx,0xe0(%rdi)
  0x0000000003b86e95: movabs $0x264445d0,%rdi   ;   {metadata({method} {0x00000000264445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b86e9f: and    $0xfff8,%ecx
  0x0000000003b86ea5: cmp    $0x0,%ecx
  0x0000000003b86ea8: je     0x0000000003b86f8f  ; OopMap{rax=Oop rsi=Oop off=910}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x0000000003b86eae: test   %eax,-0x2156db4(%rip)        # 0x0000000001a30100
                                                ;   {poll}
  0x0000000003b86eb4: movabs $0x26675920,%rdi   ;   {metadata(method data for {method} {0x00000000264445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b86ebe: incl   0x208(%rdi)
  0x0000000003b86ec4: mov    %rdx,%rdi          ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x0000000003b86ec7: mov    %rdi,%rdx
  0x0000000003b86eca: dec    %edx
  0x0000000003b86ecc: cmp    $0x0,%edi
  0x0000000003b86ecf: movabs $0x26675920,%rdi   ;   {metadata(method data for {method} {0x00000000264445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b86ed9: movabs $0x1c8,%rcx
  0x0000000003b86ee3: je     0x0000000003b86ef3
  0x0000000003b86ee9: movabs $0x1d8,%rcx
  0x0000000003b86ef3: mov    (%rdi,%rcx,1),%r8
  0x0000000003b86ef7: lea    0x1(%r8),%r8
  0x0000000003b86efb: mov    %r8,(%rdi,%rcx,1)
  0x0000000003b86eff: je     0x0000000003b86f1b
  0x0000000003b86f05: jmpq   0x0000000003b86e20  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x0000000003b86f0a: mov    $0x0,%eax
  0x0000000003b86f0f: add    $0x30,%rsp
  0x0000000003b86f13: pop    %rbp
  0x0000000003b86f14: test   %eax,-0x2156e1a(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b86f1a: retq                      ;*ireturn
                                                ; - java.lang.String::equals@70 (line 989)

  0x0000000003b86f1b: mov    $0x1,%eax
  0x0000000003b86f20: add    $0x30,%rsp
  0x0000000003b86f24: pop    %rbp
  0x0000000003b86f25: test   %eax,-0x2156e2b(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b86f2b: retq                      ;*ireturn
                                                ; - java.lang.String::equals@78 (line 992)

  0x0000000003b86f2c: mov    $0x0,%eax
  0x0000000003b86f31: add    $0x30,%rsp
  0x0000000003b86f35: pop    %rbp
  0x0000000003b86f36: test   %eax,-0x2156e3c(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b86f3c: retq                      ;*ireturn
                                                ; - java.lang.String::equals@80 (line 995)

  0x0000000003b86f3d: mov    $0x1,%eax
  0x0000000003b86f42: add    $0x30,%rsp
  0x0000000003b86f46: pop    %rbp
  0x0000000003b86f47: test   %eax,-0x2156e4d(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b86f4d: retq   
  0x0000000003b86f4e: mov    %rax,0x8(%rsp)
  0x0000000003b86f53: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b86f5b: callq  0x0000000003b789e0  ; OopMap{rdx=Oop r8=Oop off=1088}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)
                                                ;   {runtime_call}
  0x0000000003b86f60: jmpq   0x0000000003b86b7e
  0x0000000003b86f65: mov    %r8,(%rsp)
  0x0000000003b86f69: callq  0x0000000003b75f00  ; OopMap{rdx=Oop off=1102}
                                                ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ;   {runtime_call}
  0x0000000003b86f6e: callq  0x000000000393f540  ; OopMap{rax=Oop rsi=Oop off=1107}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x0000000003b86f73: callq  0x000000000393f540  ; OopMap{rsi=Oop off=1112}
                                                ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)
                                                ;   {runtime_call}
  0x0000000003b86f78: callq  0x000000000393f540  ; OopMap{rsi=Oop rax=Oop off=1117}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x0000000003b86f7d: mov    %rbx,(%rsp)
  0x0000000003b86f81: callq  0x000000000393fc00  ; OopMap{rax=Oop rsi=Oop off=1126}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x0000000003b86f86: mov    %rbx,(%rsp)
  0x0000000003b86f8a: callq  0x000000000393fc00  ; OopMap{rax=Oop rsi=Oop off=1135}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x0000000003b86f8f: mov    %rdi,0x8(%rsp)
  0x0000000003b86f94: movq   $0x4a,(%rsp)
  0x0000000003b86f9c: callq  0x0000000003b789e0  ; OopMap{rax=Oop rsi=Oop off=1153}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)
                                                ;   {runtime_call}
  0x0000000003b86fa1: jmpq   0x0000000003b86eae
  0x0000000003b86fa6: nop
  0x0000000003b86fa7: nop
  0x0000000003b86fa8: mov    0x2a8(%r15),%rax
  0x0000000003b86faf: movabs $0x0,%r10
  0x0000000003b86fb9: mov    %r10,0x2a8(%r15)
  0x0000000003b86fc0: movabs $0x0,%r10
  0x0000000003b86fca: mov    %r10,0x2b0(%r15)
  0x0000000003b86fd1: add    $0x30,%rsp
  0x0000000003b86fd5: pop    %rbp
  0x0000000003b86fd6: jmpq   0x000000000393ea20  ;   {runtime_call}
  0x0000000003b86fdb: hlt    
  0x0000000003b86fdc: hlt    
  0x0000000003b86fdd: hlt    
  0x0000000003b86fde: hlt    
  0x0000000003b86fdf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000003b86fe0: callq  0x000000000393f3a0  ;   {no_reloc}
  0x0000000003b86fe5: mov    %rsp,-0x28(%rsp)
  0x0000000003b86fea: sub    $0x80,%rsp
  0x0000000003b86ff1: mov    %rax,0x78(%rsp)
  0x0000000003b86ff6: mov    %rcx,0x70(%rsp)
  0x0000000003b86ffb: mov    %rdx,0x68(%rsp)
  0x0000000003b87000: mov    %rbx,0x60(%rsp)
  0x0000000003b87005: mov    %rbp,0x50(%rsp)
  0x0000000003b8700a: mov    %rsi,0x48(%rsp)
  0x0000000003b8700f: mov    %rdi,0x40(%rsp)
  0x0000000003b87014: mov    %r8,0x38(%rsp)
  0x0000000003b87019: mov    %r9,0x30(%rsp)
  0x0000000003b8701e: mov    %r10,0x28(%rsp)
  0x0000000003b87023: mov    %r11,0x20(%rsp)
  0x0000000003b87028: mov    %r12,0x18(%rsp)
  0x0000000003b8702d: mov    %r13,0x10(%rsp)
  0x0000000003b87032: mov    %r14,0x8(%rsp)
  0x0000000003b87037: mov    %r15,(%rsp)
  0x0000000003b8703b: movabs $0x713a0770,%rcx   ;   {external_word}
  0x0000000003b87045: movabs $0x3b86fe5,%rdx    ;   {internal_word}
  0x0000000003b8704f: mov    %rsp,%r8
  0x0000000003b87052: and    $0xfffffffffffffff0,%rsp
  0x0000000003b87056: callq  0x0000000071056cc0  ;   {runtime_call}
  0x0000000003b8705b: hlt    
[Deopt Handler Code]
  0x0000000003b8705c: movabs $0x3b8705c,%r10    ;   {section_word}
  0x0000000003b87066: push   %r10
  0x0000000003b87068: jmpq   0x0000000003917600  ;   {runtime_call}
  0x0000000003b8706d: hlt    
  0x0000000003b8706e: hlt    
  0x0000000003b8706f: hlt    
<nmethod compile_id='8' compiler='C1' level='3' entry='0x0000000003b86b20' size='2504' address='0x0000000003b86990' relocation_offset='288' insts_offset='400' stub_offset='1616' scopes_data_offset='1768' scopes_pcs_offset='1984' dependencies_offset='2464' nul_chk_table_offset='2472' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='661' backedge_count='3156' iicount='661' stamp='0.092'/>
<writer thread='22872'/>
[Loaded java.net.SocketImpl from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.net.AbstractPlainSocketImpl from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.net.PlainSocketImpl from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.net.SocksSocketImpl from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='13832'/>
[Loaded sun.misc.PostVMInitHook$2 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded jdk.internal.util.EnvUtils from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<task_queued compile_id='9' method='java/lang/String getChars (II[CI)V' bytes='62' count='768' iicount='768' level='3' stamp='0.092' comment='tiered' hot_count='768'/>
<writer thread='22872'/>
[Loaded java.net.AbstractPlainSocketImpl$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='13832'/>
[Loaded sun.misc.PostVMInitHook$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22872'/>
<task_queued compile_id='10' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='256' iicount='256' level='1' stamp='0.092' comment='tiered' hot_count='256'/>
<writer thread='16008'/>
Decoding compiled method 0x0000000003b87390:
Code:
<writer thread='22872'/>
[Loaded java.net.PlainSocketImpl$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='16008'/>
[Entry Point]
[Constants]
  # {method} {0x0000000026443c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000000003b874c0: 
<writer thread='13832'/>
[Loaded sun.usagetracker.UsageTrackerClient from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='16008'/>
mov    0x8(%rdx),%r10d
  0x0000000003b874c4: shl    $0x3,%r10
  0x0000000003b874c8: cmp    %r10,%rax
  0x0000000003b874cb: jne    0x0000000003915f60  ;   {runtime_call}
  0x0000000003b874d1: data16 xchg %ax,%ax
  0x0000000003b874d4: nopl   0x0(%rax,%rax,1)
  0x0000000003b874dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003b874e0: mov    %eax,-0x6000(%rsp)
  0x0000000003b874e7: push   %rbp
  0x0000000003b874e8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)

  0x0000000003b874ec: mov    0xc(%rdx),%r11d    ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x0000000003b874f0: mov    0xc(%r12,%r11,8),%eax  ; implicit exception: dispatches to 0x0000000003b87501
  0x0000000003b874f5: add    $0x10,%rsp
  0x0000000003b874f9: pop    %rbp
  0x0000000003b874fa: test   %eax,-0x2157500(%rip)        # 0x0000000001a30000
                                                ;   {poll_return}
  0x0000000003b87500: retq   
  0x0000000003b87501: mov    $0xfffffff6,%edx
  0x0000000003b87506: nop
  0x0000000003b87507: callq  0x00000000039157a0  ; OopMap{off=76}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x0000000003b8750c: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)

  0x0000000003b8750d: hlt    
  0x0000000003b8750e: hlt    
  0x0000000003b8750f: hlt    
  0x0000000003b87510: hlt    
  0x0000000003b87511: hlt    
  0x0000000003b87512: hlt    
  0x0000000003b87513: hlt    
  0x0000000003b87514: hlt    
  0x0000000003b87515: hlt    
  0x0000000003b87516: hlt    
  0x0000000003b87517: hlt    
  0x0000000003b87518: hlt    
  0x0000000003b87519: hlt    
  0x0000000003b8751a: hlt    
  0x0000000003b8751b: hlt    
  0x0000000003b8751c: hlt    
  0x0000000003b8751d: hlt    
  0x0000000003b8751e: hlt    
  0x0000000003b8751f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000003b87520: jmpq   0x000000000393f2a0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000003b87525: callq  0x0000000003b8752a
  0x0000000003b8752a: subq   $0x5,(%rsp)
  0x0000000003b8752f: jmpq   0x0000000003917600  ;   {runtime_call}
  0x0000000003b87534: hlt    
  0x0000000003b87535: hlt    
  0x0000000003b87536: hlt    
  0x0000000003b87537: hlt    
<nmethod compile_id='1' compiler='C2' level='4' entry='0x0000000003b874c0' size='584' address='0x0000000003b87390' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='464' dependencies_offset='560' nul_chk_table_offset='568' method='java/lang/String length ()I' bytes='6' count='27689' iicount='27689' stamp='0.093'/>
<writer thread='22188'/>
Decoding compiled method 0x0000000003b7cb90:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000264441c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lan
<writer thread='13832'/>
[Loaded java.util.concurrent.atomic.AtomicBoolean from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22188'/>
g/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  # parm2:    rdi:rdi   = &apos;[C&apos;
  # parm3:    rsi       = int
  #           [sp+0x70]  (sp of caller)
  0x0000000003b7cd40: mov    0x8(%rdx),%r10d
  0x0000000003b7cd44: shl    $0x3,%r10
  0x0000000003b7cd48: cmp    %rax,%r10
  0x0000000003b7cd4b: jne    0x0000000003915f60  ;   {runtime_call}
  0x0000000003b7cd51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000003b7cd5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003b7cd60: mov    %eax,-0x6000(%rsp)
  0x0000000003b7cd67: push   %rbp
  0x0000000003b7cd68: sub    $0x60,%rsp
  0x0000000003b7cd6c: movabs $0x2666bbd0,%rbx   ;   {metadata(method data for {method} {0x00000000264441c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b7cd76: mov    0xdc(%rbx),%eax
  0x0000000003b7cd7c: add    $0x8,%eax
  0x0000000003b7cd7f: mov    %eax,0xdc(%rbx)
  0x0000000003b7cd85: movabs $0x264441c0,%rbx   ;   {metadata({method} {0x00000000264441c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b7cd8f: and    $0x1ff8,%eax
  0x0000000003b7cd95: cmp    $0x0,%eax
  0x0000000003b7cd98: je     0x0000000003b7cfce  ;*iload_1
                                                ; - java.lang.String::getChars@0 (line 817)

  0x0000000003b7cd9e: cmp    $0x0,%r8d
  0x0000000003b7cda2: movabs $0x2666bbd0,%rbx   ;   {metadata(method data for {method} {0x00000000264441c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b7cdac: movabs $0x108,%rax
  0x0000000003b7cdb6: jge    0x0000000003b7cdc6
  0x0000000003b7cdbc: movabs $0x118,%rax
  0x0000000003b7cdc6: mov    (%rbx,%rax,1),%rcx
  0x0000000003b7cdca: lea    0x1(%rcx),%rcx
  0x0000000003b7cdce: mov    %rcx,(%rbx,%rax,1)
  0x0000000003b7cdd2: jl     0x0000000003b7cf8e  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)

  0x0000000003b7cdd8: mov    0xc(%rdx),%edx
  0x0000000003b7cddb: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)

  0x0000000003b7cddf: mov    0xc(%rdx),%ebx     ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; implicit exception: dispatches to 0x0000000003b7cfe5
  0x0000000003b7cde2: cmp    %ebx,%r9d
  0x0000000003b7cde5: movabs $0x2666bbd0,%rbx   ;   {metadata(method data for {method} {0x00000000264441c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b7cdef: movabs $0x138,%rax
  0x0000000003b7cdf9: jle    0x0000000003b7ce09
  0x0000000003b7cdff: movabs $0x148,%rax
  0x0000000003b7ce09: mov    (%rbx,%rax,1),%rcx
  0x0000000003b7ce0d: lea    0x1(%rcx),%rcx
  0x0000000003b7ce11: mov    %rcx,(%rbx,%rax,1)
  0x0000000003b7ce15: jg     0x0000000003b7cf4e  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)

  0x0000000003b7ce1b: cmp    %r9d,%r8d
  0x0000000003b7ce1e: movabs $0x2666bbd0,%rbx   ;   {metadata(method data for {method} {0x00000000264441c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b7ce28: movabs $0x168,%rax
  0x0000000003b7ce32: jle    0x0000000003b7ce42
  0x0000000003b7ce38: movabs $0x178,%rax
  0x0000000003b7ce42: mov    (%rbx,%rax,1),%rcx
  0x0000000003b7ce46: lea    0x1(%rcx),%rcx
  0x0000000003b7ce4a: mov    %rcx,(%rbx,%rax,1)
  0x0000000003b7ce4e: jg     0x0000000003b7cf02  ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)

  0x0000000003b7ce54: movabs $0x2666bbd0,%rbx   ;   {metadata(method data for {method} {0x00000000264441c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b7ce5e: addq   $0x1,0x198(%rbx)
  0x0000000003b7ce66: mov    %r9,%rbx
  0x0000000003b7ce69: sub    %r8d,%ebx
  0x0000000003b7ce6c: mov    %rdi,%r9
  0x0000000003b7ce6f: mov    %rsi,%rdi
  0x0000000003b7ce72: mov    %rbx,%rsi
  0x0000000003b7ce75: test   %r9,%r9
  0x0000000003b7ce78: je     0x0000000003b7cfea
  0x0000000003b7ce7e: test   %r8d,%r8d
  0x0000000003b7ce81: jl     0x0000000003b7cfea
  0x0000000003b7ce87: test   %edi,%edi
  0x0000000003b7ce89: jl     0x0000000003b7cfea
  0x0000000003b7ce8f: lea    (%r8,%rsi,1),%rcx
  0x0000000003b7ce93: cmp    0xc(%rdx),%ecx
  0x0000000003b7ce96: ja     0x0000000003b7cfea
  0x0000000003b7ce9c: lea    (%rdi,%rsi,1),%rcx
  0x0000000003b7cea0: cmp    0xc(%r9),%ecx
  0x0000000003b7cea4: ja     0x0000000003b7cfea
  0x0000000003b7ceaa: test   %esi,%esi
  0x0000000003b7ceac: jl     0x0000000003b7cfea
  0x0000000003b7ceb2: je     0x0000000003b7cef6
  0x0000000003b7ceb8: movslq %r8d,%r8
  0x0000000003b7cebb: movslq %edi,%rdi
  0x0000000003b7cebe: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000003b7cec3: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000003b7cec8: mov    %rsi,%r8
  0x0000000003b7cecb: sub    $0x20,%rsp
  0x0000000003b7cecf: test   $0xf,%esp
  0x0000000003b7ced5: je     0x0000000003b7ceed
  0x0000000003b7cedb: sub    $0x8,%rsp
  0x0000000003b7cedf: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x0000000003b7cee4: add    $0x8,%rsp
  0x0000000003b7cee8: jmpq   0x0000000003b7cef2
  0x0000000003b7ceed: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x0000000003b7cef2: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)

  0x0000000003b7cef6: add    $0x60,%rsp
  0x0000000003b7cefa: pop    %rbp
  0x0000000003b7cefb: test   %eax,-0x214ce01(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b7cf01: retq                      ;*return
                                                ; - java.lang.String::getChars@61 (line 827)

  0x0000000003b7cf02: nopw   0x0(%rax,%rax,1)
  0x0000000003b7cf08: jmpq   0x0000000003b7d008  ;   {no_reloc}
  0x0000000003b7cf0d: add    %al,(%rax)
  0x0000000003b7cf0f: add    %al,(%rax)
  0x0000000003b7cf11: add    %ch,%cl
  0x0000000003b7cf13: sti    
  0x0000000003b7cf14: add    %al,(%rax)
  0x0000000003b7cf16: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::getChars@36 (line 824)

  0x0000000003b7cf19: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00000000264441c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b7cf1c: sarb   0x2666(%rbx)
  0x0000000003b7cf22: add    %al,(%rax)
  0x0000000003b7cf24: addq   $0x1,0x188(%rsi)
  0x0000000003b7cf2c: sub    %r8d,%r9d
  0x0000000003b7cf2f: mov    %r9,%r8
  0x0000000003b7cf32: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)

  0x0000000003b7cf35: mov    %rax,0x38(%rsp)
  0x0000000003b7cf3a: nop
  0x0000000003b7cf3b: nop
  0x0000000003b7cf3c: nop
  0x0000000003b7cf3d: nop
  0x0000000003b7cf3e: nop
  0x0000000003b7cf3f: callq  0x00000000039161a0  ; OopMap{[56]=Oop off=516}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)
                                                ;   {optimized virtual_call}
  0x0000000003b7cf44: mov    0x38(%rsp),%rax
  0x0000000003b7cf49: jmpq   0x0000000003b7d096  ;*athrow
                                                ; - java.lang.String::getChars@46 (line 824)

  0x0000000003b7cf4e: xchg   %ax,%ax
  0x0000000003b7cf50: jmpq   0x0000000003b7d02e  ;   {no_reloc}
  0x0000000003b7cf55: add    %al,(%rax)
  0x0000000003b7cf57: add    %al,(%rax)
  0x0000000003b7cf59: add    %ch,%cl
  0x0000000003b7cf5b: flds   (%rax)
  0x0000000003b7cf5d: add    %al,(%rax)         ;*new  ; - java.lang.String::getChars@22 (line 821)

  0x0000000003b7cf5f: mov    %rax,%r8
  0x0000000003b7cf62: movabs $0x2666bbd0,%rdx   ;   {metadata(method data for {method} {0x00000000264441c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b7cf6c: addq   $0x1,0x158(%rdx)
  0x0000000003b7cf74: mov    %r9,%r8
  0x0000000003b7cf77: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)

  0x0000000003b7cf7a: mov    %rax,0x40(%rsp)
  0x0000000003b7cf7f: callq  0x00000000039161a0  ; OopMap{[64]=Oop off=580}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)
                                                ;   {optimized virtual_call}
  0x0000000003b7cf84: mov    0x40(%rsp),%rax
  0x0000000003b7cf89: jmpq   0x0000000003b7d096  ;*athrow
                                                ; - java.lang.String::getChars@30 (line 821)

  0x0000000003b7cf8e: xchg   %ax,%ax
  0x0000000003b7cf90: jmpq   0x0000000003b7d054  ;   {no_reloc}
  0x0000000003b7cf95: add    %al,(%rax)
  0x0000000003b7cf97: add    %al,(%rax)
  0x0000000003b7cf99: add    %ch,%cl
  0x0000000003b7cf9b: mov    $0x48000000,%edi   ;*new  ; - java.lang.String::getChars@4 (line 818)

  0x0000000003b7cfa0: mov    %eax,%edx
  0x0000000003b7cfa2: movabs $0x2666bbd0,%rsi   ;   {metadata(method data for {method} {0x00000000264441c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b7cfac: addq   $0x1,0x128(%rsi)
  0x0000000003b7cfb4: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)

  0x0000000003b7cfb7: mov    %rax,0x48(%rsp)
  0x0000000003b7cfbc: nop
  0x0000000003b7cfbd: nop
  0x0000000003b7cfbe: nop
  0x0000000003b7cfbf: callq  0x00000000039161a0  ; OopMap{[72]=Oop off=644}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)
                                                ;   {optimized virtual_call}
  0x0000000003b7cfc4: mov    0x48(%rsp),%rax
  0x0000000003b7cfc9: jmpq   0x0000000003b7d096
  0x0000000003b7cfce: mov    %rbx,0x8(%rsp)
  0x0000000003b7cfd3: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b7cfdb: callq  0x0000000003b789e0  ; OopMap{rdx=Oop rdi=Oop off=672}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 817)
                                                ;   {runtime_call}
  0x0000000003b7cfe0: jmpq   0x0000000003b7cd9e
  0x0000000003b7cfe5: callq  0x000000000393f540  ; OopMap{rdi=Oop rdx=Oop off=682}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x0000000003b7cfea: nop
  0x0000000003b7cfeb: nop
  0x0000000003b7cfec: nop
  0x0000000003b7cfed: nop
  0x0000000003b7cfee: nop
  0x0000000003b7cfef: callq  0x0000000003916620  ; OopMap{off=692}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {static_call}
  0x0000000003b7cff4: jmpq   0x0000000003b7cef6
  0x0000000003b7cff9: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000003b7d003: mov    $0xa050f00,%eax
  0x0000000003b7d008: callq  0x0000000003b777a0  ; OopMap{off=717}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x0000000003b7d00d: jmpq   0x0000000003b7cf08
  0x0000000003b7d012: mov    %rdx,%rdx
  0x0000000003b7d015: callq  0x00000000039410a0  ; OopMap{off=730}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x0000000003b7d01a: jmpq   0x0000000003b7cf17
  0x0000000003b7d01f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000003b7d029: mov    $0xa050f00,%eax
  0x0000000003b7d02e: callq  0x0000000003b777a0  ; OopMap{off=755}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x0000000003b7d033: jmpq   0x0000000003b7cf50
  0x0000000003b7d038: mov    %rdx,%rdx
  0x0000000003b7d03b: callq  0x00000000039410a0  ; OopMap{off=768}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x0000000003b7d040: jmpq   0x0000000003b7cf5f
  0x0000000003b7d045: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000003b7d04f: mov    $0xa050f00,%eax
  0x0000000003b7d054: callq  0x0000000003b777a0  ; OopMap{off=793}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x0000000003b7d059: jmpq   0x0000000003b7cf90
  0x0000000003b7d05e: mov    %rdx,%rdx
  0x0000000003b7d061: callq  0x00000000039410a0  ; OopMap{off=806}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x0000000003b7d066: jmpq   0x0000000003b7cf9f
  0x0000000003b7d06b: nop
  0x0000000003b7d06c: nop
  0x0000000003b7d06d: mov    0x2a8(%r15),%rax
  0x0000000003b7d074: movabs $0x0,%r10
  0x0000000003b7d07e: mov    %r10,0x2a8(%r15)
  0x0000000003b7d085: movabs $0x0,%r10
  0x0000000003b7d08f: mov    %r10,0x2b0(%r15)
  0x0000000003b7d096: add    $0x60,%rsp
  0x0000000003b7d09a: pop    %rbp
  0x0000000003b7d09b: jmpq   0x000000000393ea20  ;   {runtime_call}
[Stub Code]
  0x0000000003b7d0a0: nop                       ;   {no_reloc}
  0x0000000003b7d0a1: nop
  0x0000000003b7d0a2: nop
  0x0000000003b7d0a3: nop
  0x0000000003b7d0a4: nop
  0x0000000003b7d0a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b7d0af: jmpq   0x0000000003b7d0af  ;   {runtime_call}
  0x0000000003b7d0b4: nop
  0x0000000003b7d0b5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b7d0bf: jmpq   0x0000000003b7d0bf  ;   {runtime_call}
  0x0000000003b7d0c4: nop
  0x0000000003b7d0c5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b7d0cf: jmpq   0x0000000003b7d0cf  ;   {runtime_call}
  0x0000000003b7d0d4: nop
  0x0000000003b7d0d5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b7d0df: jmpq   0x0000000003b7d0df  ;   {runtime_call}
[Exception Handler]
  0x0000000003b7d0e4: callq  0x000000000393f3a0  ;   {runtime_call}
  0x0000000003b7d0e9: mov    %rsp,-0x28(%rsp)
  0x0000000003b7d0ee: sub    $0x80,%rsp
  0x0000000003b7d0f5: mov    %rax,0x78(%rsp)
  0x0000000003b7d0fa: mov    %rcx,0x70(%rsp)
  0x0000000003b7d0ff: mov    %rdx,0x68(%rsp)
  0x0000000003b7d104: mov    %rbx,0x60(%rsp)
  0x0000000003b7d109: mov    %rbp,0x50(%rsp)
  0x0000000003b7d10e: mov    %rsi,0x48(%rsp)
  0x0000000003b7d113: mov    %rdi,0x40(%rsp)
  0x0000000003b7d118: mov    %r8,0x38(%rsp)
  0x0000000003b7d11d: mov    %r9,0x30(%rsp)
  0x0000000003b7d122: mov    %r10,0x28(%rsp)
  0x0000000003b7d127: mov    %r11,0x20(%rsp)
  0x0000000003b7d12c: mov    %r12,0x18(%rsp)
  0x0000000003b7d131: mov    %r13,0x10(%rsp)
  0x0000000003b7d136: mov    %r14,0x8(%rsp)
  0x0000000003b7d13b: mov    %r15,(%rsp)
  0x0000000003b7d13f: movabs $0x713a0770,%rcx   ;   {external_word}
  0x0000000003b7d149: movabs $0x3b7d0e9,%rdx    ;   {internal_word}
  0x0000000003b7d153: mov    %rsp,%r8
  0x0000000003b7d156: and    $0xfffffffffffffff0,%rsp
  0x0000000003b7d15a: callq  0x0000000071056cc0  ;   {runtime_call}
  0x0000000003b7d15f: hlt    
[Deopt Handler Code]
  0x0000000003b7d160: movabs $0x3b7d160,%r10    ;   {section_word}
  0x0000000003b7d16a: push   %r10
  0x0000000003b7d16c: jmpq   0x0000000003917600  ;   {runtime_call}
  0x0000000003b7d171: hlt    
  0x0000000003b7d172: hlt    
  0x0000000003b7d173: hlt    
  0x0000000003b7d174: hlt    
  0x0000000003b7d175: hlt    
  0x0000000003b7d176: hlt    
  0x0000000003b7d177: hlt    
<nmethod compile_id='9' compiler='C1' level='3' entry='0x0000000003b7cd40' size='2256' address='0x0000000003b7cb90' relocation_offset='288' insts_offset='432' stub_offset='1296' scopes_data_offset='1520' scopes_pcs_offset='1752' dependencies_offset='2232' nul_chk_table_offset='2240' method='java/lang/String getChars (II[CI)V' bytes='62' count='778' iicount='778' stamp='0.096'/>
<writer thread='23180'/>
Decoding compiled method 0x0000000003b7c8d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000026468028} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/Reference&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000003b7ca20: mov    0x8(%rdx),%r10d
  0x0000000003b7ca24: shl    $0x3,%r10
  0x0000000003b7ca28: 
<writer thread='22872'/>
[Loaded sun.misc.FloatingDecimal from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='23180'/>
cmp    %rax,%r10
  0x0000000003b7ca2b: jne    0x0000000003915f60  ;   {runtime_call}
  0x0000000003b7ca31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000003b7ca3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003b7ca40: mov    %eax,-0x6000(%rsp)
  0x0000000003b7ca47: push   %rbp
  0x0000000003b7ca48: sub    $0x30,%rsp
  0x0000000003b7ca4c: mov    0xc(%rdx),%eax
  0x0000000003b7ca4f: shl    $0x3,%rax          ;*aload_0
                                                ; - java.lang.ref.Reference::get@0 (line 254)

  0x0000000003b7ca53: add    $0x30,%rsp
  0x0000000003b7ca57: pop    %rbp
  0x0000000003b7ca58: test   %eax,-0x214c95e(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b7ca5e: retq   
  0x0000000003b7ca5f: nop
  0x0000000003b7ca60: nop
  0x0000000003b7ca61: mov    0x2a8(%r15),%rax
  0x0000000003b7ca68: movabs $0x0,%r10
  0x0000000003b7ca72: mov    %r10,0x2a8(%r15)
  0x0000000003b7ca79: movabs $0x0,%r10
  0x0000000003b7ca83: mov    %r10,0x2b0(%r15)
  0x0000000003b7ca8a: add    $0x30,%rsp
  0x0000000003b7ca8e: pop    %rbp
  0x0000000003b7ca8f: jmpq   0x000000000393ea20  ;   {runtime_call}
  0x0000000003b7ca94: hlt    
  0x0000000003b7ca95: hlt    
  0x0000000003b7ca96: hlt    
  0x0000000003b7ca97: hlt    
  0x0000000003b7ca98: hlt    
  0x0000000003b7ca99: hlt    
  0x0000000003b7ca9a: hlt    
  0x0000000003b7ca9b: hlt    
  0x0000000003b7ca9c: hlt    
  0x0000000003b7ca9d: hlt    
  0x0000000003b7ca9e: hlt    
  0x0000000003b7ca9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000003b7caa0: callq  0x000000000393f3a0  ;   {no_reloc}
  0x0000000003b7caa5: mov    %rsp,-0x28(%rsp)
  0x0000000003b7caaa: sub    $0x80,%rsp
  0x0000000003b7cab1: mov    %rax,0x78(%rsp)
  0x0000000003b7cab6: mov    %rcx,0x70(%rsp)
  0x0000000003b7cabb: mov    %rdx,0x68(%rsp)
  0x0000000003b7cac0: mov    %rbx,0x60(%rsp)
  0x0000000003b7cac5: mov    %rbp,0x50(%rsp)
  0x0000000003b7caca: mov    %rsi,0x48(%rsp)
  0x0000000003b7cacf: mov    %rdi,0x40(%rsp)
  0x0000000003b7cad4: mov    %r8,0x38(%rsp)
  0x0000000003b7cad9: mov    %r9,0x30(%rsp)
  0x0000000003b7cade: mov    %r10,0x28(%rsp)
  0x0000000003b7cae3: mov    %r11,0x20(%rsp)
  0x0000000003b7cae8: mov    %r12,0x18(%rsp)
  0x0000000003b7caed: mov    %r13,0x10(%rsp)
  0x0000000003b7caf2: mov    %r14,0x8(%rsp)
  0x0000000003b7caf7: mov    %r15,(%rsp)
  0x0000000003b7cafb: movabs $0x713a0770,%rcx   ;   {external_word}
  0x0000000003b7cb05: movabs $0x3b7caa5,%rdx    ;   {internal_word}
  0x0000000003b7cb0f: mov    %rsp,%r8
  0x0000000003b7cb12: and    $0xfffffffffffffff0,%rsp
  0x0000000003b7cb16: callq  0x0000000071056cc0  ;   {runtime_call}
  0x0000000003b7cb1b: hlt    
[Deopt Handler Code]
  0x0000000003b7cb1c: movabs $0x3b7cb1c,%r10    ;   {section_word}
  0x0000000003b7cb26: push   %r10
  0x0000000003b7cb28: jmpq   0x0000000003917600  ;   {runtime_call}
  0x0000000003b7cb2d: hlt    
  0x0000000003b7cb2e: hlt    
  0x0000000003b7cb2f: hlt    
<nmethod compile_id='10' compiler='C1' level='1' entry='0x0000000003b7ca20' size='680' address='0x0000000003b7c8d0' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='624' dependencies_offset='672' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='256' iicount='256' stamp='0.097'/>
<writer thread='22496'/>
Decoding compiled method 0x0000000003b7c310:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000026443d70} &apos;charAt&apos; &apos;(I)C&apos; in 
<writer thread='13832'/>
[Loaded sun.usagetracker.UsageTrackerClient$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22496'/>
&apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x30]  (sp of caller)
  0x0000000003b7c460: mov    0x8(%rdx),%r10d
  0x0000000003b7c464: shl    $0x3,%r10
  0x0000000003b7c468: cmp    %r10,%rax
  0x0000000003b7c46b: jne    0x0000000003915f60  ;   {runtime_call}
  0x0000000003b7c471: data16 xchg %ax,%ax
  0x0000000003b7c474: nopl   0x0(%rax,%rax,1)
  0x0000000003b7c47c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003b7c480: mov    %eax,-0x6000(%rsp)
  0x0000000003b7c487: push   %rbp
  0x0000000003b7c488: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x0000000003b7c48c: test   %r8d,%r8d
  0x0000000003b7c48f: jl     0x0000000003b7c4cd  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000000003b7c491: mov    0xc(%rdx),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x0000000003b7c495: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x0000000003b7c4f5
  0x0000000003b7c49a: cmp    %ebp,%r8d
  0x0000000003b7c49d: jge    0x0000000003b7c4e1  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x0000000003b7c49f: cmp    %ebp,%r8d
  0x0000000003b7c4a2: jae    0x0000000003b7c4ba
  0x0000000003b7c4a4: shl    $0x3,%r10
  0x0000000003b7c4a8: movzwl 0x10(%r10,%r8,2),%eax
  0x0000000003b7c4ae: add    $0x20,%rsp
  0x0000000003b7c4b2: pop    %rbp
  0x0000000003b7c4b3: test   %eax,-0x214c4b9(%rip)        # 0x0000000001a30000
                                                ;   {poll_return}
  0x0000000003b7c4b9: retq   
  0x0000000003b7c4ba: mov    $0xffffffe4,%edx
  0x0000000003b7c4bf: mov    %r8d,%ebp
  0x0000000003b7c4c2: mov    %r10d,(%rsp)
  0x0000000003b7c4c6: nop
  0x0000000003b7c4c7: callq  0x00000000039157a0  ; OopMap{[0]=NarrowOop off=108}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x0000000003b7c4cc: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x0000000003b7c4cd: mov    %rdx,%rbp
  0x0000000003b7c4d0: mov    %r8d,0x4(%rsp)
  0x0000000003b7c4d5: mov    $0xffffff65,%edx
  0x0000000003b7c4da: nop
  0x0000000003b7c4db: callq  0x00000000039157a0  ; OopMap{rbp=Oop off=128}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x0000000003b7c4e0: int3                      ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000000003b7c4e1: mov    %rdx,(%rsp)
  0x0000000003b7c4e5: mov    %r8d,0xc(%rsp)
  0x0000000003b7c4ea: mov    $0xffffff65,%edx
  0x0000000003b7c4ef: callq  0x00000000039157a0  ; OopMap{[0]=Oop off=148}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x0000000003b7c4f4: int3                      ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x0000000003b7c4f5: mov    $0xfffffff6,%edx
  0x0000000003b7c4fa: nop
  0x0000000003b7c4fb: callq  0x00000000039157a0  ; OopMap{off=160}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x0000000003b7c500: int3                      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)

  0x0000000003b7c501: hlt    
  0x0000000003b7c502: hlt    
  0x0000000003b7c503: hlt    
  0x0000000003b7c504: hlt    
  0x0000000003b7c505: hlt    
  0x0000000003b7c506: hlt    
  0x0000000003b7c507: hlt    
  0x0000000003b7c508: hlt    
  0x0000000003b7c509: hlt    
  0x0000000003b7c50a: hlt    
  0x0000000003b7c50b: hlt    
  0x0000000003b7c50c: hlt    
  0x0000000003b7c50d: hlt    
  0x0000000003b7c50e: hlt    
  0x0000000003b7c50f: hlt    
  0x0000000003b7c510: hlt    
  0x0000000003b7c511: hlt    
  0x0000000003b7c512: hlt    
  0x0000000003b7c513: hlt    
  0x0000000003b7c514: hlt    
  0x0000000003b7c515: hlt    
  0x0000000003b7c516: hlt    
  0x0000000003b7c517: hlt    
  0x0000000003b7c518: hlt    
  0x0000000003b7c519: hlt    
  0x0000000003b7c51a: hlt    
  0x0000000003b7c51b: hlt    
  0x0000000003b7c51c: hlt    
  0x0000000003b7c51d: hlt    
  0x0000000003b7c51e: hlt    
  0x0000000003b7c51f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000003b7c520: jmpq   0x000000000393f2a0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000003b7c525: callq  0x0000000003b7c52a
  0x0000000003b7c52a: subq   $0x5,(%rsp)
  0x0000000003b7c52f: jmpq   0x0000000003917600  ;   {runtime_call}
  0x0000000003b7c534: hlt    
  0x0000000003b7c535: hlt    
  0x0000000003b7c536: hlt    
  0x0000000003b7c537: hlt    
<nmethod compile_id='2' compiler='C2' level='4' entry='0x0000000003b7c460' size='928' address='0x0000000003b7c310' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='560' scopes_pcs_offset='664' dependencies_offset='904' nul_chk_table_offset='912' method='java/lang/String charAt (I)C' bytes='29' count='102620' iicount='102620' stamp='0.099'/>
<writer thread='22872'/>
<task_queued compile_id='11' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='128' iicount='128' level='1' stamp='0.099' comment='tiered' hot_count='128'/>
[Loaded sun.misc.FloatingDecimal$BinaryToASCIIConverter from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded sun.misc.FloatingDecimal$ExceptionalBinaryToASCIIBuffer from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='13832'/>
[Loaded sun.usagetracker.UsageTrackerClient$4 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<task_queued compile_id='12' method='java/lang/Character toLowerCase (I)I' bytes='9' count='3328' iicount='3328' level='3' stamp='0.099' comment='tiered' hot_count='3328'/>
<task_queued compile_id='13' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='3328' iicount='3328' level='3' stamp='0.099' comment='tiered' hot_count='3328'/>
<writer thread='5512'/>
Decoding compiled method 0x0000000003b86690:
Code:
<writer thread='13832'/>
[Loaded sun.usagetracker.UsageTrackerClient$2 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22872'/>
[Loaded sun.misc.FloatingDecimal$BinaryToASCIIBuffer from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='5512'/>
[Entry Point]
[Constants]
  # {method} {0x0000000026635470} &apos;getSnapshotTransformerList&apos; &apos;()[Lsun/instrument/TransformerManager$TransformerInfo;&apos; in &apos;sun/instrument/TransformerManager&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000003b867e0: mov    0x8(%rdx),%r10d
  0x0000000003b867e4: shl    $0x3,%r10
  0x0000000003b867e8: cmp    %rax,%r10
  0x0000000003b867eb: jne    0x0000000003915f60  ;   {runtime_call}
  0x0000000003b867f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000003b867fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003b86800: mov    %eax,-0x6000(%rsp)
  0x0000000003b86807: push   %rbp
  0x0000000003b86808: sub    $0x30,%rsp         ;*aload_0
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@0 (line 166)

  0x0000000003b8680c: mov    0x10(%rdx),%eax
  0x0000000003b8680f: shl    $0x3,%rax          ;*getfield mTransformerList
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@1 (line 166)

  0x0000000003b86813: add    $0x30,%rsp
  0x0000000003b86817: pop    %rbp
  0x0000000003b86818: test   %eax,-0x215671e(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b8681e: retq   
  0x0000000003b8681f: nop
  0x0000000003b86820: nop
  0x0000000003b86821: mov    0x2a8(%r15),%rax
  0x0000000003b86828: movabs $0x0,%r10
  0x0000000003b86832: mov    %r10,0x2a8(%r15)
  0x0000000003b86839: movabs $0x0,%r10
  0x0000000003b86843: mov    %r10,0x2b0(%r15)
  0x0000000003b8684a: add    $0x30,%rsp
  0x0000000003b8684e: pop    %rbp
  0x0000000003b8684f: jmpq   0x000000000393ea20  ;   {runtime_call}
  0x0000000003b86854: hlt    
  0x0000000003b86855: hlt    
  0x0000000003b86856: hlt    
  0x0000000003b86857: hlt    
  0x0000000003b86858: hlt    
  0x0000000003b86859: hlt    
  0x0000000003b8685a: hlt    
  0x0000000003b8685b: hlt    
  0x0000000003b8685c: hlt    
  0x0000000003b8685d: hlt    
  0x0000000003b8685e: hlt    
  0x0000000003b8685f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000003b86860: callq  0x000000000393f3a0  ;   {no_reloc}
  0x0000000003b86865: mov    %rsp,-0x28(%rsp)
  0x0000000003b8686a: sub    $0x80,%rsp
  0x0000000003b86871: mov    %rax,0x78(%rsp)
  0x0000000003b86876: mov    %rcx,0x70(%rsp)
  0x0000000003b8687b: mov    %rdx,0x68(%rsp)
  0x0000000003b86880: mov    %rbx,0x60(%rsp)
  0x0000000003b86885: mov    %rbp,0x50(%rsp)
  0x0000000003b8688a: mov    %rsi,0x48(%rsp)
  0x0000000003b8688f: mov    %rdi,0x40(%rsp)
  0x0000000003b86894: mov    %r8,0x38(%rsp)
  0x0000000003b86899: mov    %r9,0x30(%rsp)
  0x0000000003b8689e: mov    %r10,0x28(%rsp)
  0x0000000003b868a3: mov    %r11,0x20(%rsp)
  0x0000000003b868a8: mov    %r12,0x18(%rsp)
  0x0000000003b868ad: mov    %r13,0x10(%rsp)
  0x0000000003b868b2: mov    %r14,0x8(%rsp)
  0x0000000003b868b7: mov    %r15,(%rsp)
  0x0000000003b868bb: movabs $0x713a0770,%rcx   ;   {external_word}
  0x0000000003b868c5: movabs $0x3b86865,%rdx    ;   {internal_word}
  0x0000000003b868cf: mov    %rsp,%r8
  0x0000000003b868d2: and    $0xfffffffffffffff0,%rsp
  0x0000000003b868d6: callq  0x0000000071056cc0  ;   {runtime_call}
  0x0000000003b868db: hlt    
[Deopt Handler Code]
  0x0000000003b868dc: movabs $0x3b868dc,%r10    ;   {section_word}
  0x0000000003b868e6: push   %r10
  0x0000000003b868e8: jmpq   0x0000000003917600  ;   {runtime_call}
  0x0000000003b868ed: hlt    
  0x0000000003b868ee: hlt    
  0x0000000003b868ef: hlt    
<nmethod compile_id='11' compiler='C1' level='1' entry='0x0000000003b867e0' size='704' address='0x0000000003b86690' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='131' iicount='131' stamp='0.100'/>
<writer thread='13832'/>
<task_queued compile_id='14' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='768' iicount='768' level='3' stamp='0.100' comment='tiered' hot_count='768'/>
<writer thread='22872'/>
[Loaded sun.misc.FloatingDecimal$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='13832'/>
[Loaded sun.usagetracker.UsageTrackerClient$3 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22188'/>
Decoding compiled method 0x0000000003b85fd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000000264db700} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Charac
<writer thread='22872'/>
[Loaded sun.misc.FloatingDecimal$ASCIIToBinaryConverter from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22188'/>
ter&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000003b86140: mov    %eax,-0x6000(%rsp)
  0x0000000003b86147: push   %rbp
  0x0000000003b86148: sub    $0x30,%rsp
  0x0000000003b8614c: movabs $0x26616b50,%rsi   ;   {metadata(method data for {method} {0x00000000264db700} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000003b86156: mov    0xdc(%rsi),%edi
  0x0000000003b8615c: add    $0x8,%edi
  0x0000000003b8615f: mov    %edi,0xdc(%rsi)
  0x0000000003b86165: movabs $0x264db6f8,%rsi   ;   {metadata({method} {0x00000000264db700} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000003b8616f: and    $0x1ff8,%edi
  0x0000000003b86175: cmp    $0x0,%edi
  0x0000000003b86178: je     0x0000000003b86260  ;*iload_0
                                                ; - java.lang.Character::toLowerCase@0 (line 6374)

  0x0000000003b8617e: movabs $0x26616b50,%rsi   ;   {metadata(method data for {method} {0x00000000264db700} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000003b86188: addq   $0x1,0x108(%rsi)
  0x0000000003b86190: mov    %rdx,%rsi
  0x0000000003b86193: mov    %rsi,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6374)

  0x0000000003b86196: mov    %esi,0x20(%rsp)
  0x0000000003b8619a: nop
  0x0000000003b8619b: nop
  0x0000000003b8619c: nop
  0x0000000003b8619d: nop
  0x0000000003b8619e: nop
  0x0000000003b8619f: callq  0x0000000003916620  ; OopMap{off=100}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6374)
                                                ;   {static_call}
  0x0000000003b861a4: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000003b86277
  0x0000000003b861a7: mov    %rax,%r8
  0x0000000003b861aa: movabs $0x26616b50,%rdx   ;   {metadata(method data for {method} {0x00000000264db700} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000003b861b4: mov    0x8(%r8),%r8d
  0x0000000003b861b8: shl    $0x3,%r8
  0x0000000003b861bc: cmp    0x120(%rdx),%r8
  0x0000000003b861c3: jne    0x0000000003b861d2
  0x0000000003b861c5: addq   $0x1,0x128(%rdx)
  0x0000000003b861cd: jmpq   0x0000000003b86238
  0x0000000003b861d2: cmp    0x130(%rdx),%r8
  0x0000000003b861d9: jne    0x0000000003b861e8
  0x0000000003b861db: addq   $0x1,0x138(%rdx)
  0x0000000003b861e3: jmpq   0x0000000003b86238
  0x0000000003b861e8: cmpq   $0x0,0x120(%rdx)
  0x0000000003b861f3: jne    0x0000000003b8620c
  0x0000000003b861f5: mov    %r8,0x120(%rdx)
  0x0000000003b861fc: movq   $0x1,0x128(%rdx)
  0x0000000003b86207: jmpq   0x0000000003b86238
  0x0000000003b8620c: cmpq   $0x0,0x130(%rdx)
  0x0000000003b86217: jne    0x0000000003b86230
  0x0000000003b86219: mov    %r8,0x130(%rdx)
  0x0000000003b86220: movq   $0x1,0x138(%rdx)
  0x0000000003b8622b: jmpq   0x0000000003b86238
  0x0000000003b86230: addq   $0x1,0x118(%rdx)
  0x0000000003b86238: mov    0x20(%rsp),%r8d
  0x0000000003b8623d: mov    %rax,%rdx          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6374)

  0x0000000003b86240: nop
  0x0000000003b86241: nop
  0x0000000003b86242: nop
  0x0000000003b86243: nop
  0x0000000003b86244: nop
  0x0000000003b86245: movabs $0xffffffffffffffff,%rax
  0x0000000003b8624f: callq  0x00000000039163e0  ; OopMap{off=276}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6374)
                                                ;   {virtual_call}
  0x0000000003b86254: add    $0x30,%rsp
  0x0000000003b86258: pop    %rbp
  0x0000000003b86259: test   %eax,-0x215615f(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b8625f: retq   
  0x0000000003b86260: mov    %rsi,0x8(%rsp)
  0x0000000003b86265: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b8626d: callq  0x0000000003b789e0  ; OopMap{off=306}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6374)
                                                ;   {runtime_call}
  0x0000000003b86272: jmpq   0x0000000003b8617e
  0x0000000003b86277: callq  0x000000000393f540  ; OopMap{rax=Oop off=316}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6374)
                                                ;   {runtime_call}
  0x0000000003b8627c: nop
  0x0000000003b8627d: nop
  0x0000000003b8627e: mov    0x2a8(%r15),%rax
  0x0000000003b86285: movabs $0x0,%r10
  0x0000000003b8628f: mov    %r10,0x2a8(%r15)
  0x0000000003b86296: movabs $0x0,%r10
  0x0000000003b862a0: mov    %r10,0x2b0(%r15)
  0x0000000003b862a7: add    $0x30,%rsp
  0x0000000003b862ab: pop    %rbp
  0x0000000003b862ac: jmpq   0x000000000393ea20  ;   {runtime_call}
  0x0000000003b862b1: hlt    
  0x0000000003b862b2: hlt    
  0x0000000003b862b3: hlt    
  0x0000000003b862b4: hlt    
  0x0000000003b862b5: hlt    
  0x0000000003b862b6: hlt    
  0x0000000003b862b7: hlt    
  0x0000000003b862b8: hlt    
  0x0000000003b862b9: hlt    
  0x0000000003b862ba: hlt    
  0x0000000003b862bb: hlt    
  0x0000000003b862bc: hlt    
  0x0000000003b862bd: hlt    
  0x0000000003b862be: hlt    
  0x0000000003b862bf: hlt    
[Stub Code]
  0x0000000003b862c0: nop                       ;   {no_reloc}
  0x0000000003b862c1: nop
  0x0000000003b862c2: nop
  0x0000000003b862c3: nop
  0x0000000003b862c4: nop
  0x0000000003b862c5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b862cf: jmpq   0x0000000003b862cf  ;   {runtime_call}
  0x0000000003b862d4: nop
  0x0000000003b862d5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b862df: jmpq   0x0000000003b862df  ;   {runtime_call}
[Exception Handler]
  0x0000000003b862e4: callq  0x000000000393f3a0  ;   {runtime_call}
  0x0000000003b862e9: mov    %rsp,-0x28(%rsp)
  0x0000000003b862ee: sub    $0x80,%rsp
  0x0000000003b862f5: mov    %rax,0x78(%rsp)
  0x0000000003b862fa: mov    %rcx,0x70(%rsp)
  0x0000000003b862ff: mov    %rdx,0x68(%rsp)
  0x0000000003b86304: mov    %rbx,0x60(%rsp)
  0x0000000003b86309: mov    %rbp,0x50(%rsp)
  0x0000000003b8630e: mov    %rsi,0x48(%rsp)
  0x0000000003b86313: mov    %rdi,0x40(%rsp)
  0x0000000003b86318: mov    %r8,0x38(%rsp)
  0x0000000003b8631d: mov    %r9,0x30(%rsp)
  0x0000000003b86322: mov    %r10,0x28(%rsp)
  0x0000000003b86327: mov    %r11,0x20(%rsp)
  0x0000000003b8632c: mov    %r12,0x18(%rsp)
  0x0000000003b86331: mov    %r13,0x10(%rsp)
  0x0000000003b86336: mov    %r14,0x8(%rsp)
  0x0000000003b8633b: mov    %r15,(%rsp)
  0x0000000003b8633f: movabs $0x713a0770,%rcx   ;   {external_word}
  0x0000000003b86349: movabs $0x3b862e9,%rdx    ;   {internal_word}
  0x0000000003b86353: mov    %rsp,%r8
  0x0000000003b86356: and    $0xfffffffffffffff0,%rsp
  0x0000000003b8635a: callq  0x0000000071056cc0  ;   {runtime_call}
  0x0000000003b8635f: hlt    
[Deopt Handler Code]
  0x0000000003b86360: movabs $0x3b86360,%r10    ;   {section_word}
  0x0000000003b8636a: push   %r10
  0x0000000003b8636c: jmpq   0x0000000003917600  ;   {runtime_call}
  0x0000000003b86371: hlt    
  0x0000000003b86372: hlt    
  0x0000000003b86373: hlt    
  0x0000000003b86374: hlt    
  0x0000000003b86375: hlt    
  0x0000000003b86376: hlt    
  0x0000000003b86377: hlt    
<nmethod compile_id='12' compiler='C1' level='3' entry='0x0000000003b86140' size='1160' address='0x0000000003b85fd0' relocation_offset='288' insts_offset='368' stub_offset='752' scopes_data_offset='944' scopes_pcs_offset='992' dependencies_offset='1136' nul_chk_table_offset='1144' method='java/lang/Character toLowerCase (I)I' bytes='9' count='3346' iicount='3346' stamp='0.102'/>
<writer thread='13832'/>
<task_queued compile_id='15' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='143' count='142' backedge_count='3072' iicount='142' level='3' stamp='0.102' comment='tiered' hot_count='142'/>
<writer thread='22872'/>
[Loaded sun.misc.FloatingDecimal$PreparedASCIIToBinaryBuffer from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='23180'/>
Decoding compiled method 0x0000000003b85a50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000026614140} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x0000000003b85bc0: mov    0x8(%rdx),%r10d
  0x0000000003b85bc4: shl    $0x3,%r10
  0x0000000003b85bc8: cmp    %rax,%r10
  0x0000000003b85bcb: jne    0x0000000003915f60  ;   {runtime_call}
  0x0000000003b85bd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000003b85bdc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003b85be0: mov    %eax,-0x6000(%rsp)
  0x0000000003b85be7: push   %rbp
  0x0000000003b85be8: sub    $0x40,%rsp
  0x0000000003b85bec: movabs $0x26616f48,%rax   ;   {metadata(method data for {method} {0x0000000026614140} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000003b85bf6: mov    0xdc(%rax),%esi
  0x0000000003b85bfc: add    $0x8,%esi
  0x0000000003b85bff: mov    %esi,0xdc(%rax)
  0x0000000003b85c05: movabs $0x26614138,%rax   ;   {metadata({method} {0x0000000026614140} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000003b85c0f: and    $0x1ff8,%esi
  0x0000000003b85c15: cmp    $0x0,%esi
  0x0000000003b85c18: je     0x0000000003b85d27  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@0 (line 133)

  0x0000000003b85c1e: movabs $0x26616f48,%rax   ;   {metadata(method data for {method} {0x0000000026614140} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000003b85c28: addq   $0x1,0x118(%rax)
  0x0000000003b85c30: movabs $0x26617108,%rax   ;   {metadata(method data for {method} {0x0000000026613970} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000003b85c3a: mov    0xdc(%rax),%esi
  0x0000000003b85c40: add    $0x8,%esi
  0x0000000003b85c43: mov    %esi,0xdc(%rax)
  0x0000000003b85c49: movabs $0x26613968,%rax   ;   {metadata({method} {0x0000000026613970} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000003b85c53: and    $0x7ffff8,%esi
  0x0000000003b85c59: cmp    $0x0,%esi
  0x0000000003b85c5c: je     0x0000000003b85d3e
  0x0000000003b85c62: mov    %r8,%rax
  0x0000000003b85c65: and    $0xffff,%eax
  0x0000000003b85c6b: movabs $0x715c8b790,%rsi  ;   {oop([I)}
  0x0000000003b85c75: movslq %eax,%rdi
  0x0000000003b85c78: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x0000000003b85d55
  0x0000000003b85c7b: jae    0x0000000003b85d5f
  0x0000000003b85c81: mov    0x10(%rsi,%rdi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x0000000003b85c85: mov    %rax,%rsi
  0x0000000003b85c88: and    $0x20000,%esi
  0x0000000003b85c8e: cmp    $0x0,%esi
  0x0000000003b85c91: movabs $0x26616f48,%rsi   ;   {metadata(method data for {method} {0x0000000026614140} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000003b85c9b: movabs $0x138,%rdi
  0x0000000003b85ca5: je     0x0000000003b85cb5
  0x0000000003b85cab: movabs $0x148,%rdi
  0x0000000003b85cb5: mov    (%rsi,%rdi,1),%rbx
  0x0000000003b85cb9: lea    0x1(%rbx),%rbx
  0x0000000003b85cbd: mov    %rbx,(%rsi,%rdi,1)
  0x0000000003b85cc1: je     0x0000000003b85d18  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)

  0x0000000003b85cc7: mov    %rax,%rsi
  0x0000000003b85cca: and    $0x7fc0000,%esi
  0x0000000003b85cd0: cmp    $0x7fc0000,%esi
  0x0000000003b85cd6: movabs $0x26616f48,%rsi   ;   {metadata(method data for {method} {0x0000000026614140} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000003b85ce0: movabs $0x158,%rdi
  0x0000000003b85cea: je     0x0000000003b85cfa
  0x0000000003b85cf0: movabs $0x168,%rdi
  0x0000000003b85cfa: mov    (%rsi,%rdi,1),%rbx
  0x0000000003b85cfe: lea    0x1(%rbx),%rbx
  0x0000000003b85d02: mov    %rbx,(%rsi,%rdi,1)
  0x0000000003b85d06: je     0x0000000003b85d18  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)

  0x0000000003b85d0c: shl    $0x5,%eax
  0x0000000003b85d0f: sar    $0x17,%eax
  0x0000000003b85d12: add    %r8d,%eax
  0x0000000003b85d15: mov    %rax,%r8           ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)

  0x0000000003b85d18: mov    %r8,%rax
  0x0000000003b85d1b: add    $0x40,%rsp
  0x0000000003b85d1f: pop    %rbp
  0x0000000003b85d20: test   %eax,-0x2155c26(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b85d26: retq   
  0x0000000003b85d27: mov    %rax,0x8(%rsp)
  0x0000000003b85d2c: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b85d34: callq  0x0000000003b789e0  ; OopMap{rdx=Oop off=377}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@-1 (line 133)
                                                ;   {runtime_call}
  0x0000000003b85d39: jmpq   0x0000000003b85c1e
  0x0000000003b85d3e: mov    %rax,0x8(%rsp)
  0x0000000003b85d43: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b85d4b: callq  0x0000000003b789e0  ; OopMap{off=400}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000003b85d50: jmpq   0x0000000003b85c62
  0x0000000003b85d55: callq  0x000000000393f540  ; OopMap{rsi=Oop off=410}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000003b85d5a: callq  0x000000000393f540  ; OopMap{rsi=Oop off=415}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000003b85d5f: mov    %rax,(%rsp)
  0x0000000003b85d63: callq  0x000000000393fc00  ; OopMap{rsi=Oop off=424}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000003b85d68: nop
  0x0000000003b85d69: nop
  0x0000000003b85d6a: mov    0x2a8(%r15),%rax
  0x0000000003b85d71: movabs $0x0,%r10
  0x0000000003b85d7b: mov    %r10,0x2a8(%r15)
  0x0000000003b85d82: movabs $0x0,%r10
  0x0000000003b85d8c: mov    %r10,0x2b0(%r15)
  0x0000000003b85d93: add    $0x40,%rsp
  0x0000000003b85d97: pop    %rbp
  0x0000000003b85d98: jmpq   0x000000000393ea20  ;   {runtime_call}
  0x0000000003b85d9d: hlt    
  0x0000000003b85d9e: hlt    
  0x0000000003b85d9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000003b85da0: callq  0x000000000393f3a0  ;   {no_reloc}
  0x0000000003b85da5: mov    %rsp,-0x28(%rsp)
  0x0000000003b85daa: sub    $0x80,%rsp
  0x0000000003b85db1: mov    %rax,0x78(%rsp)
  0x0000000003b85db6: mov    %rcx,0x70(%rsp)
  0x0000000003b85dbb: mov    %rdx,0x68(%rsp)
  0x0000000003b85dc0: mov    %rbx,0x60(%rsp)
  0x0000000003b85dc5: mov    %rbp,0x50(%rsp)
  0x0000000003b85dca: mov    %rsi,0x48(%rsp)
  0x0000000003b85dcf: mov    %rdi,0x40(%rsp)
  0x0000000003b85dd4: mov    %r8,0x38(%rsp)
  0x0000000003b85dd9: mov    %r9,0x30(%rsp)
  0x0000000003b85dde: mov    %r10,0x28(%rsp)
  0x0000000003b85de3: mov    %r11,0x20(%rsp)
  0x0000000003b85de8: mov    %r12,0x18(%rsp)
  0x0000000003b85ded: mov    %r13,0x10(%rsp)
  0x0000000003b85df2: mov    %r14,0x8(%rsp)
  0x0000000003b85df7: mov    %r15,(%rsp)
  0x0000000003b85dfb: movabs $0x713a0770,%rcx   ;   {external_word}
  0x0000000003b85e05: movabs $0x3b85da5,%rdx    ;   {internal_word}
  0x0000000003b85e0f: mov    %rsp,%r8
  0x0000000003b85e12: and    $0xfffffffffffffff0,%rsp
  0x0000000003b85e16: callq  0x0000000071056cc0  ;   {runtime_call}
  0x0000000003b85e1b: hlt    
[Deopt Handler Code]
  0x0000000003b85e1c: movabs $0x3b85e1c,%r10    ;   {section_word}
  0x0000000003b85e26: push   %r10
  0x0000000003b85e28: jmpq   0x0000000003917600  ;   {runtime_call}
  0x0000000003b85e2d: hlt    
  0x0000000003b85e2e: hlt    
  0x0000000003b85e2f: hlt    
<nmethod compile_id='13' compiler='C1' level='3' entry='0x0000000003b85bc0' size='1352' address='0x0000000003b85a50' relocation_offset='288' insts_offset='368' stub_offset='848' scopes_data_offset='1016' scopes_pcs_offset='1128' dependencies_offset='1320' nul_chk_table_offset='1328' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='3357' iicount='3357' stamp='0.103'/>
<writer thread='13832'/>
<task_queued compile_id='16' method='java/lang/String indexOf (II)I' bytes='70' count='486' backedge_count='16384' iicount='486' level='3' stamp='0.103' comment='tiered' hot_count='486'/>
<writer thread='22872'/>
[Loaded sun.misc.FloatingDecimal$ASCIIToBinaryBuffer from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22084'/>
Decoding compiled method 0x0000000003b89810:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000026443160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0: 
<writer thread='22872'/>
[Loaded java.net.DualStackPlainSocketImpl from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22084'/>
   r8:r8                = &apos;[C&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  #           [sp+0x70]  (sp of caller)
  0x0000000003b899e0: mov    0x8(%rdx),%r10d
  0x0000000003b899e4: shl    $0x3,%r10
  0x0000000003b899e8: cmp    %rax,%r10
  0x0000000003b899eb: jne    0x0000000003915f60  ;   {runtime_call}
  0x0000000003b899f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000003b899fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003b89a00: mov    %eax,-0x6000(%rsp)
  0x0000000003b89a07: push   %rbp
  0x0000000003b89a08: sub    $0x60,%rsp
  0x0000000003b89a0c: movabs $0x2666b980,%rsi   ;   {metadata(method data for {method} {0x0000000026443160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b89a16: mov    0xdc(%rsi),%ebx
  0x0000000003b89a1c: add    $0x8,%ebx
  0x0000000003b89a1f: mov    %ebx,0xdc(%rsi)
  0x0000000003b89a25: movabs $0x26443158,%rsi   ;   {metadata({method} {0x0000000026443160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b89a2f: and    $0x1ff8,%ebx
  0x0000000003b89a35: cmp    $0x0,%ebx
  0x0000000003b89a38: je     0x0000000003b89d0e  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 190)

  0x0000000003b89a3e: mov    %rdx,%rsi
  0x0000000003b89a41: movabs $0x2666b980,%rbx   ;   {metadata(method data for {method} {0x0000000026443160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b89a4b: addq   $0x1,0x108(%rbx)
  0x0000000003b89a53: movabs $0x265743d8,%rsi   ;   {metadata(method data for {method} {0x0000000026440488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000003b89a5d: mov    0xdc(%rsi),%ebx
  0x0000000003b89a63: add    $0x8,%ebx
  0x0000000003b89a66: mov    %ebx,0xdc(%rsi)
  0x0000000003b89a6c: movabs $0x26440480,%rsi   ;   {metadata({method} {0x0000000026440488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000003b89a76: and    $0x7ffff8,%ebx
  0x0000000003b89a7c: cmp    $0x0,%ebx
  0x0000000003b89a7f: je     0x0000000003b89d25
  0x0000000003b89a85: cmp    $0x0,%r9d
  0x0000000003b89a89: movabs $0x2666b980,%rsi   ;   {metadata(method data for {method} {0x0000000026443160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b89a93: movabs $0x118,%rbx
  0x0000000003b89a9d: jge    0x0000000003b89aad
  0x0000000003b89aa3: movabs $0x128,%rbx
  0x0000000003b89aad: mov    (%rsi,%rbx,1),%rax
  0x0000000003b89ab1: lea    0x1(%rax),%rax
  0x0000000003b89ab5: mov    %rax,(%rsi,%rbx,1)
  0x0000000003b89ab9: jl     0x0000000003b89cce  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)

  0x0000000003b89abf: cmp    $0x0,%edi
  0x0000000003b89ac2: movabs $0x2666b980,%rsi   ;   {metadata(method data for {method} {0x0000000026443160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b89acc: movabs $0x148,%rbx
  0x0000000003b89ad6: jg     0x0000000003b89ae6
  0x0000000003b89adc: movabs $0x158,%rbx
  0x0000000003b89ae6: mov    (%rsi,%rbx,1),%rax
  0x0000000003b89aea: lea    0x1(%rax),%rax
  0x0000000003b89aee: mov    %rax,(%rsi,%rbx,1)
  0x0000000003b89af2: jg     0x0000000003b89b6e  ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)

  0x0000000003b89af8: cmp    $0x0,%edi
  0x0000000003b89afb: movabs $0x2666b980,%rsi   ;   {metadata(method data for {method} {0x0000000026443160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b89b05: movabs $0x168,%rbx
  0x0000000003b89b0f: jge    0x0000000003b89b1f
  0x0000000003b89b15: movabs $0x178,%rbx
  0x0000000003b89b1f: mov    (%rsi,%rbx,1),%rax
  0x0000000003b89b23: lea    0x1(%rax),%rax
  0x0000000003b89b27: mov    %rax,(%rsi,%rbx,1)
  0x0000000003b89b2b: jl     0x0000000003b89c8e  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@22 (line 195)

  0x0000000003b89b31: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; implicit exception: dispatches to 0x0000000003b89d3c
  0x0000000003b89b35: cmp    %esi,%r9d
  0x0000000003b89b38: movabs $0x2666b980,%rsi   ;   {metadata(method data for {method} {0x0000000026443160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b89b42: movabs $0x198,%rbx
  0x0000000003b89b4c: jg     0x0000000003b89b5c
  0x0000000003b89b52: movabs $0x1a8,%rbx
  0x0000000003b89b5c: mov    (%rsi,%rbx,1),%rax
  0x0000000003b89b60: lea    0x1(%rax),%rax
  0x0000000003b89b64: mov    %rax,(%rsi,%rbx,1)
  0x0000000003b89b68: jle    0x0000000003b89c0a  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)

  0x0000000003b89b6e: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; implicit exception: dispatches to 0x0000000003b89d41
  0x0000000003b89b72: sub    %edi,%esi
  0x0000000003b89b74: cmp    %esi,%r9d
  0x0000000003b89b77: movabs $0x2666b980,%rsi   ;   {metadata(method data for {method} {0x0000000026443160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b89b81: movabs $0x1b8,%rbx
  0x0000000003b89b8b: jle    0x0000000003b89b9b
  0x0000000003b89b91: movabs $0x1c8,%rbx
  0x0000000003b89b9b: mov    (%rsi,%rbx,1),%rax
  0x0000000003b89b9f: lea    0x1(%rax),%rax
  0x0000000003b89ba3: mov    %rax,(%rsi,%rbx,1)
  0x0000000003b89ba7: jg     0x0000000003b89c44  ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)

  0x0000000003b89bad: mov    %rdx,0x38(%rsp)
  0x0000000003b89bb2: movabs $0x2666b980,%rsi   ;   {metadata(method data for {method} {0x0000000026443160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b89bbc: addq   $0x1,0x1e8(%rsi)
  0x0000000003b89bc4: add    %r9d,%edi
  0x0000000003b89bc7: mov    %r8,%rdx
  0x0000000003b89bca: mov    %r9,%r8
  0x0000000003b89bcd: mov    %rdi,%r9           ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)

  0x0000000003b89bd0: nop
  0x0000000003b89bd1: nop
  0x0000000003b89bd2: nop
  0x0000000003b89bd3: nop
  0x0000000003b89bd4: nop
  0x0000000003b89bd5: nop
  0x0000000003b89bd6: nop
  0x0000000003b89bd7: callq  0x0000000003916620  ; OopMap{[56]=Oop off=508}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ;   {static_call}
  0x0000000003b89bdc: mov    0x38(%rsp),%rdx
  0x0000000003b89be1: mov    %rax,%r10
  0x0000000003b89be4: shr    $0x3,%r10
  0x0000000003b89be8: mov    %r10d,0xc(%rdx)
  0x0000000003b89bec: shr    $0x9,%rdx
  0x0000000003b89bf0: movabs $0xfe86000,%rax
  0x0000000003b89bfa: movb   $0x0,(%rdx,%rax,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)

  0x0000000003b89bfe: add    $0x60,%rsp
  0x0000000003b89c02: pop    %rbp
  0x0000000003b89c03: test   %eax,-0x2159b09(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b89c09: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@81 (line 208)

  0x0000000003b89c0a: movabs $0x715c0aab0,%rax  ;   {oop(&quot;&quot;)}
  0x0000000003b89c14: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x0000000003b89d46
  0x0000000003b89c17: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)

  0x0000000003b89c1b: mov    %rax,%r10
  0x0000000003b89c1e: shr    $0x3,%r10
  0x0000000003b89c22: mov    %r10d,0xc(%rdx)
  0x0000000003b89c26: shr    $0x9,%rdx
  0x0000000003b89c2a: movabs $0xfe86000,%rax
  0x0000000003b89c34: movb   $0x0,(%rdx,%rax,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)

  0x0000000003b89c38: add    $0x60,%rsp
  0x0000000003b89c3c: pop    %rbp
  0x0000000003b89c3d: test   %eax,-0x2159b43(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b89c43: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@49 (line 200)

  0x0000000003b89c44: nopl   0x0(%rax)
  0x0000000003b89c48: jmpq   0x0000000003b89d5a  ;   {no_reloc}
  0x0000000003b89c4d: add    %al,(%rax)
  0x0000000003b89c4f: add    %al,(%rax)
  0x0000000003b89c51: add    %ch,%cl
  0x0000000003b89c53: or     $0x4c000001,%eax   ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)

  0x0000000003b89c58: mov    %eax,%eax
  0x0000000003b89c5a: movabs $0x2666b980,%rdx   ;   {metadata(method data for {method} {0x0000000026443160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b89c64: addq   $0x1,0x1d8(%rdx)
  0x0000000003b89c6c: add    %r9d,%edi
  0x0000000003b89c6f: mov    %rdi,%r8
  0x0000000003b89c72: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)

  0x0000000003b89c75: mov    %rax,0x40(%rsp)
  0x0000000003b89c7a: nop
  0x0000000003b89c7b: nop
  0x0000000003b89c7c: nop
  0x0000000003b89c7d: nop
  0x0000000003b89c7e: nop
  0x0000000003b89c7f: callq  0x00000000039161a0  ; OopMap{[64]=Oop off=676}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)
                                                ;   {optimized virtual_call}
  0x0000000003b89c84: mov    0x40(%rsp),%rax
  0x0000000003b89c89: jmpq   0x0000000003b89de8  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@68 (line 205)

  0x0000000003b89c8e: xchg   %ax,%ax
  0x0000000003b89c90: jmpq   0x0000000003b89d80  ;   {no_reloc}
  0x0000000003b89c95: add    %al,(%rax)
  0x0000000003b89c97: add    %al,(%rax)
  0x0000000003b89c99: add    %ch,%cl
  0x0000000003b89c9b: jmp    0x0000000003b89c9d
  0x0000000003b89c9d: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)

  0x0000000003b89c9f: mov    %rax,%r8
  0x0000000003b89ca2: movabs $0x2666b980,%rdx   ;   {metadata(method data for {method} {0x0000000026443160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b89cac: addq   $0x1,0x188(%rdx)
  0x0000000003b89cb4: mov    %rdi,%r8
  0x0000000003b89cb7: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)

  0x0000000003b89cba: mov    %rax,0x48(%rsp)
  0x0000000003b89cbf: callq  0x00000000039161a0  ; OopMap{[72]=Oop off=740}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)
                                                ;   {optimized virtual_call}
  0x0000000003b89cc4: mov    0x48(%rsp),%rax
  0x0000000003b89cc9: jmpq   0x0000000003b89de8  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@33 (line 196)

  0x0000000003b89cce: xchg   %ax,%ax
  0x0000000003b89cd0: jmpq   0x0000000003b89da6  ;   {no_reloc}
  0x0000000003b89cd5: add    %al,(%rax)
  0x0000000003b89cd7: add    %al,(%rax)
  0x0000000003b89cd9: add    %ch,%cl
  0x0000000003b89cdb: roll   (%rax)
  0x0000000003b89cdd: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)

  0x0000000003b89cdf: mov    %rax,%r8
  0x0000000003b89ce2: movabs $0x2666b980,%rdx   ;   {metadata(method data for {method} {0x0000000026443160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b89cec: addq   $0x1,0x138(%rdx)
  0x0000000003b89cf4: mov    %r9,%r8
  0x0000000003b89cf7: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)

  0x0000000003b89cfa: mov    %rax,0x50(%rsp)
  0x0000000003b89cff: callq  0x00000000039161a0  ; OopMap{[80]=Oop off=804}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)
                                                ;   {optimized virtual_call}
  0x0000000003b89d04: mov    0x50(%rsp),%rax
  0x0000000003b89d09: jmpq   0x0000000003b89de8
  0x0000000003b89d0e: mov    %rsi,0x8(%rsp)
  0x0000000003b89d13: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b89d1b: callq  0x0000000003b789e0  ; OopMap{rdx=Oop r8=Oop off=832}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ;   {runtime_call}
  0x0000000003b89d20: jmpq   0x0000000003b89a3e
  0x0000000003b89d25: mov    %rsi,0x8(%rsp)
  0x0000000003b89d2a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b89d32: callq  0x0000000003b789e0  ; OopMap{rdx=Oop r8=Oop off=855}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ;   {runtime_call}
  0x0000000003b89d37: jmpq   0x0000000003b89a85
  0x0000000003b89d3c: callq  0x000000000393f540  ; OopMap{rdx=Oop r8=Oop off=865}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ;   {runtime_call}
  0x0000000003b89d41: callq  0x000000000393f540  ; OopMap{rdx=Oop r8=Oop off=870}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ;   {runtime_call}
  0x0000000003b89d46: callq  0x000000000393f540  ; OopMap{rdx=Oop off=875}
                                                ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ;   {runtime_call}
  0x0000000003b89d4b: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000003b89d55: mov    $0xa050f00,%eax
  0x0000000003b89d5a: callq  0x0000000003b777a0  ; OopMap{off=895}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x0000000003b89d5f: jmpq   0x0000000003b89c48
  0x0000000003b89d64: mov    %rdx,%rdx
  0x0000000003b89d67: callq  0x00000000039410a0  ; OopMap{off=908}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x0000000003b89d6c: jmpq   0x0000000003b89c57
  0x0000000003b89d71: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000003b89d7b: mov    $0xa050f00,%eax
  0x0000000003b89d80: callq  0x0000000003b777a0  ; OopMap{off=933}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x0000000003b89d85: jmpq   0x0000000003b89c90
  0x0000000003b89d8a: mov    %rdx,%rdx
  0x0000000003b89d8d: callq  0x00000000039410a0  ; OopMap{off=946}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x0000000003b89d92: jmpq   0x0000000003b89c9f
  0x0000000003b89d97: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000003b89da1: mov    $0xa050f00,%eax
  0x0000000003b89da6: callq  0x0000000003b777a0  ; OopMap{off=971}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x0000000003b89dab: jmpq   0x0000000003b89cd0
  0x0000000003b89db0: mov    %rdx,%rdx
  0x0000000003b89db3: callq  0x00000000039410a0  ; OopMap{off=984}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x0000000003b89db8: jmpq   0x0000000003b89cdf
  0x0000000003b89dbd: nop
  0x0000000003b89dbe: nop
  0x0000000003b89dbf: mov    0x2a8(%r15),%rax
  0x0000000003b89dc6: movabs $0x0,%r10
  0x0000000003b89dd0: mov    %r10,0x2a8(%r15)
  0x0000000003b89dd7: movabs $0x0,%r10
  0x0000000003b89de1: mov    %r10,0x2b0(%r15)
  0x0000000003b89de8: add    $0x60,%rsp
  0x0000000003b89dec: pop    %rbp
  0x0000000003b89ded: jmpq   0x000000000393ea20  ;   {runtime_call}
  0x0000000003b89df2: hlt    
  0x0000000003b89df3: hlt    
  0x0000000003b89df4: hlt    
  0x0000000003b89df5: hlt    
  0x0000000003b89df6: hlt    
  0x0000000003b89df7: hlt    
  0x0000000003b89df8: hlt    
  0x0000000003b89df9: hlt    
  0x0000000003b89dfa: hlt    
  0x0000000003b89dfb: hlt    
  0x0000000003b89dfc: hlt    
  0x0000000003b89dfd: hlt    
  0x0000000003b89dfe: hlt    
  0x0000000003b89dff: hlt    
[Stub Code]
  0x0000000003b89e00: nop                       ;   {no_reloc}
  0x0000000003b89e01: nop
  0x0000000003b89e02: nop
  0x0000000003b89e03: nop
  0x0000000003b89e04: nop
  0x0000000003b89e05: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b89e0f: jmpq   0x0000000003b89e0f  ;   {runtime_call}
  0x0000000003b89e14: nop
  0x0000000003b89e15: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b89e1f: jmpq   0x0000000003b89e1f  ;   {runtime_call}
  0x0000000003b89e24: nop
  0x0000000003b89e25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b89e2f: jmpq   0x0000000003b89e2f  ;   {runtime_call}
  0x0000000003b89e34: nop
  0x0000000003b89e35: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b89e3f: jmpq   0x0000000003b89e3f  ;   {runtime_call}
[Exception Handler]
  0x0000000003b89e44: callq  0x000000000393f3a0  ;   {runtime_call}
  0x0000000003b89e49: mov    %rsp,-0x28(%rsp)
  0x0000000003b89e4e: sub    $0x80,%rsp
  0x0000000003b89e55: mov    %rax,0x78(%rsp)
  0x0000000003b89e5a: mov    %rcx,0x70(%rsp)
  0x0000000003b89e5f: mov    %rdx,0x68(%rsp)
  0x0000000003b89e64: mov    %rbx,0x60(%rsp)
  0x0000000003b89e69: mov    %rbp,0x50(%rsp)
  0x0000000003b89e6e: mov    %rsi,0x48(%rsp)
  0x0000000003b89e73: mov    %rdi,0x40(%rsp)
  0x0000000003b89e78: mov    %r8,0x38(%rsp)
  0x0000000003b89e7d: mov    %r9,0x30(%rsp)
  0x0000000003b89e82: mov    %r10,0x28(%rsp)
  0x0000000003b89e87: mov    %r11,0x20(%rsp)
  0x0000000003b89e8c: mov    %r12,0x18(%rsp)
  0x0000000003b89e91: mov    %r13,0x10(%rsp)
  0x0000000003b89e96: mov    %r14,0x8(%rsp)
  0x0000000003b89e9b: mov    %r15,(%rsp)
  0x0000000003b89e9f: movabs $0x713a0770,%rcx   ;   {external_word}
  0x0000000003b89ea9: movabs $0x3b89e49,%rdx    ;   {internal_word}
  0x0000000003b89eb3: mov    %rsp,%r8
  0x0000000003b89eb6: and    $0xfffffffffffffff0,%rsp
  0x0000000003b89eba: callq  0x0000000071056cc0  ;   {runtime_call}
  0x0000000003b89ebf: hlt    
[Deopt Handler Code]
  0x0000000003b89ec0: movabs $0x3b89ec0,%r10    ;   {section_word}
  0x0000000003b89eca: push   %r10
  0x0000000003b89ecc: jmpq   0x0000000003917600  ;   {runtime_call}
  0x0000000003b89ed1: hlt    
  0x0000000003b89ed2: hlt    
  0x0000000003b89ed3: hlt    
  0x0000000003b89ed4: hlt    
  0x0000000003b89ed5: hlt    
  0x0000000003b89ed6: hlt    
  0x0000000003b89ed7: hlt    
<nmethod compile_id='14' compiler='C1' level='3' entry='0x0000000003b899e0' size='2704' address='0x0000000003b89810' relocation_offset='288' insts_offset='464' stub_offset='1520' scopes_data_offset='1752' scopes_pcs_offset='2040' dependencies_offset='2664' nul_chk_table_offset='2672' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='774' iicount='774' stamp='0.108'/>
<writer thread='22188'/>
Decoding compiled method 0x0000000003b89090:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000026445140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000003b89220: mov    0x8(%rdx),%r10d
  0x0000000003b89224: shl    $0x3,%r10
  0x0000000003b89228: cmp    %rax,%r10
  0x0000000003b8922b: jne    0x0000000003915f60  ;   {runtime_call}
  0x0000000003b89231: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000003b8923c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003b89240: mov    %eax,-0x6000(%rsp)
  0x0000000003b89247: push   %rbp
  0x0000000003b89248: sub    $0x30,%rsp
  0x0000000003b8924c: movabs $0x26631278,%rax   ;   {metadata(method data for {method} {0x0000000026445140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b89256: mov    0xdc(%rax),%esi
  0x0000000003b8925c: add    $0x8,%esi
  0x0000000003b8925f: mov    %esi,0xdc(%rax)
  0x0000000003b89265: movabs $0x26445138,%rax   ;   {metadata({method} {0x0000000026445140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b8926f: and    $0x1ff8,%esi
  0x0000000003b89275: cmp    $0x0,%esi
  0x0000000003b89278: je     0x0000000003b89491  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1546)

  0x0000000003b8927e: mov    0xc(%rdx),%eax
  0x0000000003b89281: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x0000000003b89285: mov    0xc(%rax),%esi     ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x0000000003b894a8
  0x0000000003b89288: cmp    $0x0,%r9d
  0x0000000003b8928c: movabs $0x26631278,%rdi   ;   {metadata(method data for {method} {0x0000000026445140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b89296: movabs $0x108,%rbx
  0x0000000003b892a0: jge    0x0000000003b892b0
  0x0000000003b892a6: movabs $0x118,%rbx
  0x0000000003b892b0: mov    (%rdi,%rbx,1),%rcx
  0x0000000003b892b4: lea    0x1(%rcx),%rcx
  0x0000000003b892b8: mov    %rcx,(%rdi,%rbx,1)
  0x0000000003b892bc: jge    0x0000000003b892de  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x0000000003b892c2: movabs $0x26631278,%r9    ;   {metadata(method data for {method} {0x0000000026445140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b892cc: incl   0x128(%r9)
  0x0000000003b892d3: mov    $0x0,%r9d
  0x0000000003b892d9: jmpq   0x0000000003b89317  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1548)

  0x0000000003b892de: cmp    %esi,%r9d
  0x0000000003b892e1: movabs $0x26631278,%rdi   ;   {metadata(method data for {method} {0x0000000026445140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b892eb: movabs $0x140,%rbx
  0x0000000003b892f5: jl     0x0000000003b89305
  0x0000000003b892fb: movabs $0x150,%rbx
  0x0000000003b89305: mov    (%rdi,%rbx,1),%rcx
  0x0000000003b89309: lea    0x1(%rcx),%rcx
  0x0000000003b8930d: mov    %rcx,(%rdi,%rbx,1)
  0x0000000003b89311: jge    0x0000000003b89480  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x0000000003b89317: cmp    $0x10000,%r8d
  0x0000000003b8931e: movabs $0x26631278,%rdi   ;   {metadata(method data for {method} {0x0000000026445140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b89328: movabs $0x160,%rbx
  0x0000000003b89332: jge    0x0000000003b89342
  0x0000000003b89338: movabs $0x170,%rbx
  0x0000000003b89342: mov    (%rdi,%rbx,1),%rcx
  0x0000000003b89346: lea    0x1(%rcx),%rcx
  0x0000000003b8934a: mov    %rcx,(%rdi,%rbx,1)
  0x0000000003b8934e: jge    0x0000000003b89454
  0x0000000003b89354: jmpq   0x0000000003b893f6  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x0000000003b89359: nopl   0x0(%rax)
  0x0000000003b89360: movslq %r9d,%rdx
  0x0000000003b89363: cmp    0xc(%rax),%r9d
  0x0000000003b89367: jae    0x0000000003b894ad
  0x0000000003b8936d: movzwl 0x10(%rax,%rdx,2),%edx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000003b89372: cmp    %r8d,%edx
  0x0000000003b89375: movabs $0x26631278,%rdx   ;   {metadata(method data for {method} {0x0000000026445140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b8937f: movabs $0x1a0,%rdi
  0x0000000003b89389: jne    0x0000000003b89399
  0x0000000003b8938f: movabs $0x1b0,%rdi
  0x0000000003b89399: mov    (%rdx,%rdi,1),%rbx
  0x0000000003b8939d: lea    0x1(%rbx),%rbx
  0x0000000003b893a1: mov    %rbx,(%rdx,%rdi,1)
  0x0000000003b893a5: je     0x0000000003b89434  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000003b893ab: inc    %r9d
  0x0000000003b893ae: movabs $0x26631278,%rdx   ;   {metadata(method data for {method} {0x0000000026445140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b893b8: mov    0xe0(%rdx),%edi
  0x0000000003b893be: add    $0x8,%edi
  0x0000000003b893c1: mov    %edi,0xe0(%rdx)
  0x0000000003b893c7: movabs $0x26445138,%rdx   ;   {metadata({method} {0x0000000026445140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b893d1: and    $0xfff8,%edi
  0x0000000003b893d7: cmp    $0x0,%edi
  0x0000000003b893da: je     0x0000000003b894b6  ; OopMap{rax=Oop off=448}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x0000000003b893e0: test   %eax,-0x21592e6(%rip)        # 0x0000000001a30100
                                                ;   {poll}
  0x0000000003b893e6: movabs $0x26631278,%rdx   ;   {metadata(method data for {method} {0x0000000026445140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b893f0: incl   0x1c0(%rdx)        ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x0000000003b893f6: cmp    %esi,%r9d
  0x0000000003b893f9: movabs $0x26631278,%rdx   ;   {metadata(method data for {method} {0x0000000026445140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b89403: movabs $0x180,%rdi
  0x0000000003b8940d: jge    0x0000000003b8941d
  0x0000000003b89413: movabs $0x190,%rdi
  0x0000000003b8941d: mov    (%rdx,%rdi,1),%rbx
  0x0000000003b89421: lea    0x1(%rbx),%rbx
  0x0000000003b89425: mov    %rbx,(%rdx,%rdi,1)
  0x0000000003b89429: jge    0x0000000003b89443
  0x0000000003b8942f: jmpq   0x0000000003b89360  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000000003b89434: mov    %r9,%rax
  0x0000000003b89437: add    $0x30,%rsp
  0x0000000003b8943b: pop    %rbp
  0x0000000003b8943c: test   %eax,-0x2159342(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b89442: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@54 (line 1560)

  0x0000000003b89443: mov    $0xffffffff,%eax
  0x0000000003b89448: add    $0x30,%rsp
  0x0000000003b8944c: pop    %rbp
  0x0000000003b8944d: test   %eax,-0x2159353(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b89453: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@62 (line 1563)

  0x0000000003b89454: mov    %rdx,%rsi
  0x0000000003b89457: movabs $0x26631278,%rdi   ;   {metadata(method data for {method} {0x0000000026445140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b89461: addq   $0x1,0x1d8(%rdi)
  0x0000000003b89469: nop
  0x0000000003b8946a: nop
  0x0000000003b8946b: nop
  0x0000000003b8946c: nop
  0x0000000003b8946d: nop
  0x0000000003b8946e: nop
  0x0000000003b8946f: callq  0x00000000039161a0  ; OopMap{off=596}
                                                ;*invokespecial indexOfSupplementary
                                                ; - java.lang.String::indexOf@66 (line 1565)
                                                ;   {optimized virtual_call}
  0x0000000003b89474: add    $0x30,%rsp
  0x0000000003b89478: pop    %rbp
  0x0000000003b89479: test   %eax,-0x215937f(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b8947f: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@69 (line 1565)

  0x0000000003b89480: mov    $0xffffffff,%eax
  0x0000000003b89485: add    $0x30,%rsp
  0x0000000003b89489: pop    %rbp
  0x0000000003b8948a: test   %eax,-0x2159390(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b89490: retq   
  0x0000000003b89491: mov    %rax,0x8(%rsp)
  0x0000000003b89496: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b8949e: callq  0x0000000003b789e0  ; OopMap{rdx=Oop off=643}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)
                                                ;   {runtime_call}
  0x0000000003b894a3: jmpq   0x0000000003b8927e
  0x0000000003b894a8: callq  0x000000000393f540  ; OopMap{rdx=Oop rax=Oop off=653}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x0000000003b894ad: mov    %r9,(%rsp)
  0x0000000003b894b1: callq  0x000000000393fc00  ; OopMap{rax=Oop off=662}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x0000000003b894b6: mov    %rdx,0x8(%rsp)
  0x0000000003b894bb: movq   $0x3a,(%rsp)
  0x0000000003b894c3: callq  0x0000000003b789e0  ; OopMap{rax=Oop off=680}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)
                                                ;   {runtime_call}
  0x0000000003b894c8: jmpq   0x0000000003b893e0
  0x0000000003b894cd: nop
  0x0000000003b894ce: nop
  0x0000000003b894cf: mov    0x2a8(%r15),%rax
  0x0000000003b894d6: movabs $0x0,%r10
  0x0000000003b894e0: mov    %r10,0x2a8(%r15)
  0x0000000003b894e7: movabs $0x0,%r10
  0x0000000003b894f1: mov    %r10,0x2b0(%r15)
  0x0000000003b894f8: add    $0x30,%rsp
  0x0000000003b894fc: pop    %rbp
  0x0000000003b894fd: jmpq   0x000000000393ea20  ;   {runtime_call}
  0x0000000003b89502: hlt    
  0x0000000003b89503: hlt    
  0x0000000003b89504: hlt    
  0x0000000003b89505: hlt    
  0x0000000003b89506: hlt    
  0x0000000003b89507: hlt    
  0x0000000003b89508: hlt    
  0x0000000003b89509: hlt    
  0x0000000003b8950a: hlt    
  0x0000000003b8950b: hlt    
  0x0000000003b8950c: hlt    
  0x0000000003b8950d: hlt    
  0x0000000003b8950e: hlt    
  0x0000000003b8950f: hlt    
  0x0000000003b89510: hlt    
  0x0000000003b89511: hlt    
  0x0000000003b89512: hlt    
  0x0000000003b89513: hlt    
  0x0000000003b89514: hlt    
  0x0000000003b89515: hlt    
  0x0000000003b89516: hlt    
  0x0000000003b89517: hlt    
  0x0000000003b89518: hlt    
  0x0000000003b89519: hlt    
  0x0000000003b8951a: hlt    
  0x0000000003b8951b: hlt    
  0x0000000003b8951c: hlt    
  0x0000000003b8951d: hlt    
  0x0000000003b8951e: hlt    
  0x0000000003b8951f: hlt    
[Stub Code]
  0x0000000003b89520: nop                       ;   {no_reloc}
  0x0000000003b89521: nop
  0x0000000003b89522: nop
  0x0000000003b89523: nop
  0x0000000003b89524: nop
  0x0000000003b89525: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b8952f: jmpq   0x0000000003b8952f  ;   {runtime_call}
[Exception Handler]
  0x0000000003b89534: callq  0x000000000393f3a0  ;   {runtime_call}
  0x0000000003b89539: mov    %rsp,-0x28(%rsp)
  0x0000000003b8953e: sub    $0x80,%rsp
  0x0000000003b89545: mov    %rax,0x78(%rsp)
  0x0000000003b8954a: mov    %rcx,0x70(%rsp)
  0x0000000003b8954f: mov    %rdx,0x68(%rsp)
  0x0000000003b89554: mov    %rbx,0x60(%rsp)
  0x0000000003b89559: mov    %rbp,0x50(%rsp)
  0x0000000003b8955e: mov    %rsi,0x48(%rsp)
  0x0000000003b89563: mov    %rdi,0x40(%rsp)
  0x0000000003b89568: mov    %r8,0x38(%rsp)
  0x0000000003b8956d: mov    %r9,0x30(%rsp)
  0x0000000003b89572: mov    %r10,0x28(%rsp)
  0x0000000003b89577: mov    %r11,0x20(%rsp)
  0x0000000003b8957c: mov    %r12,0x18(%rsp)
  0x0000000003b89581: mov    %r13,0x10(%rsp)
  0x0000000003b89586: mov    %r14,0x8(%rsp)
  0x0000000003b8958b: mov    %r15,(%rsp)
  0x0000000003b8958f: movabs $0x713a0770,%rcx   ;   {external_word}
  0x0000000003b89599: movabs $0x3b89539,%rdx    ;   {internal_word}
  0x0000000003b895a3: mov    %rsp,%r8
  0x0000000003b895a6: and    $0xfffffffffffffff0,%rsp
  0x0000000003b895aa: callq  0x0000000071056cc0  ;   {runtime_call}
  0x0000000003b895af: hlt    
[Deopt Handler Code]
  0x0000000003b895b0: movabs $0x3b895b0,%r10    ;   {section_word}
  0x0000000003b895ba: push   %r10
  0x0000000003b895bc: jmpq   0x0000000003917600  ;   {runtime_call}
  0x0000000003b895c1: hlt    
  0x0000000003b895c2: hlt    
  0x0000000003b895c3: hlt    
  0x0000000003b895c4: hlt    
  0x0000000003b895c5: hlt    
  0x0000000003b895c6: hlt    
  0x0000000003b895c7: hlt    
<nmethod compile_id='16' compiler='C1' level='3' entry='0x0000000003b89220' size='1880' address='0x0000000003b89090' relocation_offset='288' insts_offset='400' stub_offset='1168' scopes_data_offset='1344' scopes_pcs_offset='1504' dependencies_offset='1856' nul_chk_table_offset='1864' method='java/lang/String indexOf (II)I' bytes='70' count='486' backedge_count='16433' iicount='486' stamp='0.111'/>
<writer thread='13832'/>
<task_queued compile_id='17' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='256' iicount='256' level='3' stamp='0.111' comment='tiered' hot_count='256'/>
<writer thread='22188'/>
Decoding compiled method 0x0000000003b88b50:
Code:
<writer thread='13832'/>
[Loaded java.io.FileOutputStream$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22188'/>
[Entry Point]
[Constants]
  # 
<writer thread='22872'/>
[Loaded java.net.Inet6Address from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22188'/>
{method} {0x00000000264b8468} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000003b88cc0: mov    0x8(%rdx),%r10d
  0x0000000003b88cc4: shl    $0x3,%r10
  0x0000000003b88cc8: cmp    %rax,%r10
  0x0000000003b88ccb: jne    0x0000000003915f60  ;   {runtime_call}
  0x0000000003b88cd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000003b88cdc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003b88ce0: mov    %eax,-0x6000(%rsp)
  0x0000000003b88ce7: push   %rbp
  0x0000000003b88ce8: sub    $0x40,%rsp
  0x0000000003b88cec: mov    %rdx,%r8
  0x0000000003b88cef: movabs $0x266e3918,%rbx   ;   {metadata(method data for {method} {0x00000000264b8468} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000003b88cf9: mov    0xdc(%rbx),%edx
  0x0000000003b88cff: add    $0x8,%edx
  0x0000000003b88d02: mov    %edx,0xdc(%rbx)
  0x0000000003b88d08: movabs $0x264b8460,%rbx   ;   {metadata({method} {0x00000000264b8468} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000003b88d12: and    $0x1ff8,%edx
  0x0000000003b88d18: cmp    $0x0,%edx
  0x0000000003b88d1b: je     0x0000000003b88e55  ;*aload_0
                                                ; - java.lang.StringBuilder::&lt;init&gt;@0 (line 89)

  0x0000000003b88d21: mov    %r8,%rbx
  0x0000000003b88d24: movabs $0x266e3918,%rdx   ;   {metadata(method data for {method} {0x00000000264b8468} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000003b88d2e: addq   $0x1,0x108(%rdx)
  0x0000000003b88d36: movabs $0x266e3ac8,%rbx   ;   {metadata(method data for {method} {0x00000000264b4798} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003b88d40: mov    0xdc(%rbx),%edx
  0x0000000003b88d46: add    $0x8,%edx
  0x0000000003b88d49: mov    %edx,0xdc(%rbx)
  0x0000000003b88d4f: movabs $0x264b4790,%rbx   ;   {metadata({method} {0x00000000264b4798} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003b88d59: and    $0x7ffff8,%edx
  0x0000000003b88d5f: cmp    $0x0,%edx
  0x0000000003b88d62: je     0x0000000003b88e6c
  0x0000000003b88d68: mov    %r8,%rbx
  0x0000000003b88d6b: movabs $0x266e3ac8,%rdx   ;   {metadata(method data for {method} {0x00000000264b4798} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003b88d75: addq   $0x1,0x108(%rdx)
  0x0000000003b88d7d: movabs $0x265743d8,%rbx   ;   {metadata(method data for {method} {0x0000000026440488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000003b88d87: mov    0xdc(%rbx),%edx
  0x0000000003b88d8d: add    $0x8,%edx
  0x0000000003b88d90: mov    %edx,0xdc(%rbx)
  0x0000000003b88d96: movabs $0x26440480,%rbx   ;   {metadata({method} {0x0000000026440488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000003b88da0: and    $0x7ffff8,%edx
  0x0000000003b88da6: cmp    $0x0,%edx
  0x0000000003b88da9: je     0x0000000003b88e83
  0x0000000003b88daf: mov    $0x10,%ebx
  0x0000000003b88db4: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000003b88dbe: movslq %ebx,%rbx
  0x0000000003b88dc1: mov    %rbx,%rdi
  0x0000000003b88dc4: cmp    $0xffffff,%rbx
  0x0000000003b88dcb: ja     0x0000000003b88e9a
  0x0000000003b88dd1: movabs $0x17,%rsi
  0x0000000003b88ddb: lea    (%rsi,%rbx,2),%rsi
  0x0000000003b88ddf: and    $0xfffffffffffffff8,%rsi
  0x0000000003b88de3: mov    0x60(%r15),%rax
  0x0000000003b88de7: lea    (%rax,%rsi,1),%rsi
  0x0000000003b88deb: cmp    0x70(%r15),%rsi
  0x0000000003b88def: ja     0x0000000003b88e9a
  0x0000000003b88df5: mov    %rsi,0x60(%r15)
  0x0000000003b88df9: sub    %rax,%rsi
  0x0000000003b88dfc: movq   $0x1,(%rax)
  0x0000000003b88e03: mov    %rdx,%rcx
  0x0000000003b88e06: shr    $0x3,%rcx
  0x0000000003b88e0a: mov    %ecx,0x8(%rax)
  0x0000000003b88e0d: mov    %ebx,0xc(%rax)
  0x0000000003b88e10: sub    $0x10,%rsi
  0x0000000003b88e14: je     0x0000000003b88e2b
  0x0000000003b88e1a: xor    %rbx,%rbx
  0x0000000003b88e1d: shr    $0x3,%rsi
  0x0000000003b88e21: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000003b88e26: dec    %rsi
  0x0000000003b88e29: jne    0x0000000003b88e21  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)

  0x0000000003b88e2b: mov    %rax,%r10
  0x0000000003b88e2e: shr    $0x3,%r10
  0x0000000003b88e32: mov    %r10d,0x10(%r8)
  0x0000000003b88e36: shr    $0x9,%r8
  0x0000000003b88e3a: movabs $0xfe86000,%rsi
  0x0000000003b88e44: movb   $0x0,(%r8,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)

  0x0000000003b88e49: add    $0x40,%rsp
  0x0000000003b88e4d: pop    %rbp
  0x0000000003b88e4e: test   %eax,-0x2158d54(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b88e54: retq   
  0x0000000003b88e55: mov    %rbx,0x8(%rsp)
  0x0000000003b88e5a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b88e62: callq  0x0000000003b789e0  ; OopMap{r8=Oop off=423}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ;   {runtime_call}
  0x0000000003b88e67: jmpq   0x0000000003b88d21
  0x0000000003b88e6c: mov    %rbx,0x8(%rsp)
  0x0000000003b88e71: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b88e79: callq  0x0000000003b789e0  ; OopMap{r8=Oop off=446}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ;   {runtime_call}
  0x0000000003b88e7e: jmpq   0x0000000003b88d68
  0x0000000003b88e83: mov    %rbx,0x8(%rsp)
  0x0000000003b88e88: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b88e90: callq  0x0000000003b789e0  ; OopMap{r8=Oop off=469}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ;   {runtime_call}
  0x0000000003b88e95: jmpq   0x0000000003b88daf
  0x0000000003b88e9a: callq  0x00000000039402c0  ; OopMap{r8=Oop off=479}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ;   {runtime_call}
  0x0000000003b88e9f: jmp    0x0000000003b88e2b
  0x0000000003b88ea1: nop
  0x0000000003b88ea2: nop
  0x0000000003b88ea3: mov    0x2a8(%r15),%rax
  0x0000000003b88eaa: movabs $0x0,%r10
  0x0000000003b88eb4: mov    %r10,0x2a8(%r15)
  0x0000000003b88ebb: movabs $0x0,%r10
  0x0000000003b88ec5: mov    %r10,0x2b0(%r15)
  0x0000000003b88ecc: add    $0x40,%rsp
  0x0000000003b88ed0: pop    %rbp
  0x0000000003b88ed1: jmpq   0x000000000393ea20  ;   {runtime_call}
  0x0000000003b88ed6: hlt    
  0x0000000003b88ed7: hlt    
  0x0000000003b88ed8: hlt    
  0x0000000003b88ed9: hlt    
  0x0000000003b88eda: hlt    
  0x0000000003b88edb: hlt    
  0x0000000003b88edc: hlt    
  0x0000000003b88edd: hlt    
  0x0000000003b88ede: hlt    
  0x0000000003b88edf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000003b88ee0: callq  0x000000000393f3a0  ;   {no_reloc}
  0x0000000003b88ee5: mov    %rsp,-0x28(%rsp)
  0x0000000003b88eea: sub    $0x80,%rsp
  0x0000000003b88ef1: mov    %rax,0x78(%rsp)
  0x0000000003b88ef6: mov    %rcx,0x70(%rsp)
  0x0000000003b88efb: mov    %rdx,0x68(%rsp)
  0x0000000003b88f00: mov    %rbx,0x60(%rsp)
  0x0000000003b88f05: mov    %rbp,0x50(%rsp)
  0x0000000003b88f0a: mov    %rsi,0x48(%rsp)
  0x0000000003b88f0f: mov    %rdi,0x40(%rsp)
  0x0000000003b88f14: mov    %r8,0x38(%rsp)
  0x0000000003b88f19: mov    %r9,0x30(%rsp)
  0x0000000003b88f1e: mov    %r10,0x28(%rsp)
  0x0000000003b88f23: mov    %r11,0x20(%rsp)
  0x0000000003b88f28: mov    %r12,0x18(%rsp)
  0x0000000003b88f2d: mov    %r13,0x10(%rsp)
  0x0000000003b88f32: mov    %r14,0x8(%rsp)
  0x0000000003b88f37: mov    %r15,(%rsp)
  0x0000000003b88f3b: movabs $0x713a0770,%rcx   ;   {external_word}
  0x0000000003b88f45: movabs $0x3b88ee5,%rdx    ;   {internal_word}
  0x0000000003b88f4f: mov    %rsp,%r8
  0x0000000003b88f52: and    $0xfffffffffffffff0,%rsp
  0x0000000003b88f56: callq  0x0000000071056cc0  ;   {runtime_call}
  0x0000000003b88f5b: hlt    
[Deopt Handler Code]
  0x0000000003b88f5c: movabs $0x3b88f5c,%r10    ;   {section_word}
  0x0000000003b88f66: push   %r10
  0x0000000003b88f68: jmpq   0x0000000003917600  ;   {runtime_call}
  0x0000000003b88f6d: hlt    
  0x0000000003b88f6e: hlt    
  0x0000000003b88f6f: hlt    
<nmethod compile_id='17' compiler='C1' level='3' entry='0x0000000003b88cc0' size='1312' address='0x0000000003b88b50' relocation_offset='288' insts_offset='368' stub_offset='912' scopes_data_offset='1080' scopes_pcs_offset='1160' dependencies_offset='1304' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='256' iicount='256' stamp='0.113'/>
<writer thread='5512'/>
Decoding compiled method 0x0000000003b87b90:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000265bd220} &apos;normalize&apos; &apos;
<writer thread='22872'/>
[Loaded java.net.Inet6Address$Inet6AddressHolder from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='5512'/>
(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           
<writer thread='13832'/>
[Loaded sun.launcher.LauncherHelper from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='5512'/>
[sp+0xa0]  (sp of caller)
  0x0000000003b87d80: mov    0x8(%rdx),%r10d
  0x0000000003b87d84: shl    $0x3,%r10
  0x0000000003b87d88: cmp    %rax,%r10
  0x0000000003b87d8b: jne    0x0000000003915f60  ;   {runtime_call}
  0x0000000003b87d91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000003b87d9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003b87da0: mov    %eax,-0x6000(%rsp)
  0x0000000003b87da7: push   %rbp
  0x0000000003b87da8: sub    $0x90,%rsp
  0x0000000003b87daf: movabs $0x266de970,%r9    ;   {metadata(method data for {method} {0x00000000265bd220} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b87db9: mov    0xdc(%r9),%edi
  0x0000000003b87dc0: add    $0x8,%edi
  0x0000000003b87dc3: mov    %edi,0xdc(%r9)
  0x0000000003b87dca: movabs $0x265bd218,%r9    ;   {metadata({method} {0x00000000265bd220} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b87dd4: and    $0x1ff8,%edi
  0x0000000003b87dda: cmp    $0x0,%edi
  0x0000000003b87ddd: je     0x0000000003b883e6  ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@0 (line 82)

  0x0000000003b87de3: cmp    (%r8),%rax         ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ; implicit exception: dispatches to 0x0000000003b883fd
  0x0000000003b87de6: mov    %r8,%r9
  0x0000000003b87de9: movabs $0x266de970,%rdi   ;   {metadata(method data for {method} {0x00000000265bd220} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b87df3: mov    0x8(%r9),%r9d
  0x0000000003b87df7: shl    $0x3,%r9
  0x0000000003b87dfb: cmp    0x110(%rdi),%r9
  0x0000000003b87e02: jne    0x0000000003b87e11
  0x0000000003b87e04: addq   $0x1,0x118(%rdi)
  0x0000000003b87e0c: jmpq   0x0000000003b87e77
  0x0000000003b87e11: cmp    0x120(%rdi),%r9
  0x0000000003b87e18: jne    0x0000000003b87e27
  0x0000000003b87e1a: addq   $0x1,0x128(%rdi)
  0x0000000003b87e22: jmpq   0x0000000003b87e77
  0x0000000003b87e27: cmpq   $0x0,0x110(%rdi)
  0x0000000003b87e32: jne    0x0000000003b87e4b
  0x0000000003b87e34: mov    %r9,0x110(%rdi)
  0x0000000003b87e3b: movq   $0x1,0x118(%rdi)
  0x0000000003b87e46: jmpq   0x0000000003b87e77
  0x0000000003b87e4b: cmpq   $0x0,0x120(%rdi)
  0x0000000003b87e56: jne    0x0000000003b87e6f
  0x0000000003b87e58: mov    %r9,0x120(%rdi)
  0x0000000003b87e5f: movq   $0x1,0x128(%rdi)
  0x0000000003b87e6a: jmpq   0x0000000003b87e77
  0x0000000003b87e6f: addq   $0x1,0x108(%rdi)
  0x0000000003b87e77: movabs $0x26573698,%r9    ;   {metadata(method data for {method} {0x0000000026443c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b87e81: mov    0xdc(%r9),%edi
  0x0000000003b87e88: add    $0x8,%edi
  0x0000000003b87e8b: mov    %edi,0xdc(%r9)
  0x0000000003b87e92: movabs $0x26443c18,%r9    ;   {metadata({method} {0x0000000026443c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b87e9c: and    $0x7ffff8,%edi
  0x0000000003b87ea2: cmp    $0x0,%edi
  0x0000000003b87ea5: je     0x0000000003b88402
  0x0000000003b87eab: mov    0xc(%r8),%r9d
  0x0000000003b87eaf: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x0000000003b87eb3: mov    0xc(%r9),%esi      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ; implicit exception: dispatches to 0x0000000003b88419
  0x0000000003b87eb7: movzwl 0xc(%rdx),%edi     ;*getfield slash
                                                ; - java.io.WinNTFileSystem::normalize@6 (line 83)

  0x0000000003b87ebb: movzwl 0xe(%rdx),%ebx     ;*getfield altSlash
                                                ; - java.io.WinNTFileSystem::normalize@11 (line 84)

  0x0000000003b87ebf: mov    $0x0,%ecx
  0x0000000003b87ec4: mov    $0x0,%r9d          ;*iload
                                                ; - java.io.WinNTFileSystem::normalize@22 (line 86)

  0x0000000003b87eca: nopw   0x0(%rax,%rax,1)
  0x0000000003b87ed0: cmp    %esi,%ecx
  0x0000000003b87ed2: movabs $0x266de970,%rax   ;   {metadata(method data for {method} {0x00000000265bd220} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b87edc: movabs $0x138,%r11
  0x0000000003b87ee6: jge    0x0000000003b87ef6
  0x0000000003b87eec: movabs $0x148,%r11
  0x0000000003b87ef6: mov    (%rax,%r11,1),%r13
  0x0000000003b87efa: lea    0x1(%r13),%r13
  0x0000000003b87efe: mov    %r13,(%rax,%r11,1)
  0x0000000003b87f02: jge    0x0000000003b8824f  ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@25 (line 86)

  0x0000000003b87f08: mov    %r8,%rax
  0x0000000003b87f0b: movabs $0x266de970,%r11   ;   {metadata(method data for {method} {0x00000000265bd220} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b87f15: mov    0x8(%rax),%eax
  0x0000000003b87f18: shl    $0x3,%rax
  0x0000000003b87f1c: cmp    0x160(%r11),%rax
  0x0000000003b87f23: jne    0x0000000003b87f32
  0x0000000003b87f25: addq   $0x1,0x168(%r11)
  0x0000000003b87f2d: jmpq   0x0000000003b87f98
  0x0000000003b87f32: cmp    0x170(%r11),%rax
  0x0000000003b87f39: jne    0x0000000003b87f48
  0x0000000003b87f3b: addq   $0x1,0x178(%r11)
  0x0000000003b87f43: jmpq   0x0000000003b87f98
  0x0000000003b87f48: cmpq   $0x0,0x160(%r11)
  0x0000000003b87f53: jne    0x0000000003b87f6c
  0x0000000003b87f55: mov    %rax,0x160(%r11)
  0x0000000003b87f5c: movq   $0x1,0x168(%r11)
  0x0000000003b87f67: jmpq   0x0000000003b87f98
  0x0000000003b87f6c: cmpq   $0x0,0x170(%r11)
  0x0000000003b87f77: jne    0x0000000003b87f90
  0x0000000003b87f79: mov    %rax,0x170(%r11)
  0x0000000003b87f80: movq   $0x1,0x178(%r11)
  0x0000000003b87f8b: jmpq   0x0000000003b87f98
  0x0000000003b87f90: addq   $0x1,0x158(%r11)
  0x0000000003b87f98: movabs $0x26573520,%rax   ;   {metadata(method data for {method} {0x0000000026443d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b87fa2: mov    0xdc(%rax),%r11d
  0x0000000003b87fa9: add    $0x8,%r11d
  0x0000000003b87fad: mov    %r11d,0xdc(%rax)
  0x0000000003b87fb4: movabs $0x26443d68,%rax   ;   {metadata({method} {0x0000000026443d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b87fbe: and    $0x7ffff8,%r11d
  0x0000000003b87fc5: cmp    $0x0,%r11d
  0x0000000003b87fc9: je     0x0000000003b8841e
  0x0000000003b87fcf: cmp    $0x0,%ecx
  0x0000000003b87fd2: movabs $0x26573520,%rax   ;   {metadata(method data for {method} {0x0000000026443d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b87fdc: movabs $0x108,%r11
  0x0000000003b87fe6: jl     0x0000000003b87ff6
  0x0000000003b87fec: movabs $0x118,%r11
  0x0000000003b87ff6: mov    (%rax,%r11,1),%r13
  0x0000000003b87ffa: lea    0x1(%r13),%r13
  0x0000000003b87ffe: mov    %r13,(%rax,%r11,1)
  0x0000000003b88002: jl     0x0000000003b88383  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x0000000003b88008: mov    0xc(%r8),%eax
  0x0000000003b8800c: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x0000000003b88010: mov    0xc(%rax),%r11d    ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ; implicit exception: dispatches to 0x0000000003b88435
  0x0000000003b88014: cmp    %r11d,%ecx
  0x0000000003b88017: movabs $0x26573520,%r11   ;   {metadata(method data for {method} {0x0000000026443d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b88021: movabs $0x128,%r13
  0x0000000003b8802b: jl     0x0000000003b8803b
  0x0000000003b88031: movabs $0x138,%r13
  0x0000000003b8803b: mov    (%r11,%r13,1),%r14
  0x0000000003b8803f: lea    0x1(%r14),%r14
  0x0000000003b88043: mov    %r14,(%r11,%r13,1)
  0x0000000003b88047: jge    0x0000000003b88383  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x0000000003b8804d: movslq %ecx,%r11
  0x0000000003b88050: cmp    0xc(%rax),%ecx
  0x0000000003b88053: jae    0x0000000003b8843a
  0x0000000003b88059: movzwl 0x10(%rax,%r11,2),%eax  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x0000000003b8805f: and    $0xffff,%eax
  0x0000000003b88065: cmp    %ebx,%eax
  0x0000000003b88067: movabs $0x266de970,%r11   ;   {metadata(method data for {method} {0x00000000265bd220} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b88071: movabs $0x188,%r13
  0x0000000003b8807b: jne    0x0000000003b8808b
  0x0000000003b88081: movabs $0x198,%r13
  0x0000000003b8808b: mov    (%r11,%r13,1),%r14
  0x0000000003b8808f: lea    0x1(%r14),%r14
  0x0000000003b88093: mov    %r14,(%r11,%r13,1)
  0x0000000003b88097: je     0x0000000003b88211  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@40 (line 88)

  0x0000000003b8809d: cmp    %edi,%eax
  0x0000000003b8809f: movabs $0x266de970,%r11   ;   {metadata(method data for {method} {0x00000000265bd220} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b880a9: movabs $0x1f0,%r13
  0x0000000003b880b3: jne    0x0000000003b880c3
  0x0000000003b880b9: movabs $0x200,%r13
  0x0000000003b880c3: mov    (%r11,%r13,1),%r14
  0x0000000003b880c7: lea    0x1(%r14),%r14
  0x0000000003b880cb: mov    %r14,(%r11,%r13,1)
  0x0000000003b880cf: jne    0x0000000003b88147  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@68 (line 90)

  0x0000000003b880d5: cmp    %edi,%r9d
  0x0000000003b880d8: movabs $0x266de970,%r9    ;   {metadata(method data for {method} {0x00000000265bd220} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b880e2: movabs $0x210,%r11
  0x0000000003b880ec: jne    0x0000000003b880fc
  0x0000000003b880f2: movabs $0x220,%r11
  0x0000000003b880fc: mov    (%r9,%r11,1),%r13
  0x0000000003b88100: lea    0x1(%r13),%r13
  0x0000000003b88104: mov    %r13,(%r9,%r11,1)
  0x0000000003b88108: jne    0x0000000003b88147  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@74 (line 90)

  0x0000000003b8810e: cmp    $0x1,%ecx
  0x0000000003b88111: movabs $0x266de970,%r9    ;   {metadata(method data for {method} {0x00000000265bd220} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b8811b: movabs $0x230,%r11
  0x0000000003b88125: jle    0x0000000003b88135
  0x0000000003b8812b: movabs $0x240,%r11
  0x0000000003b88135: mov    (%r9,%r11,1),%r13
  0x0000000003b88139: lea    0x1(%r13),%r13
  0x0000000003b8813d: mov    %r13,(%r9,%r11,1)
  0x0000000003b88141: jg     0x0000000003b8834b  ;*if_icmple
                                                ; - java.io.WinNTFileSystem::normalize@80 (line 90)

  0x0000000003b88147: cmp    $0x3a,%eax
  0x0000000003b8814a: movabs $0x266de970,%r9    ;   {metadata(method data for {method} {0x00000000265bd220} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b88154: movabs $0x260,%r11
  0x0000000003b8815e: jne    0x0000000003b8816e
  0x0000000003b88164: movabs $0x270,%r11
  0x0000000003b8816e: mov    (%r9,%r11,1),%r13
  0x0000000003b88172: lea    0x1(%r13),%r13
  0x0000000003b88176: mov    %r13,(%r9,%r11,1)
  0x0000000003b8817a: jne    0x0000000003b881b9  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@98 (line 92)

  0x0000000003b88180: cmp    $0x1,%ecx
  0x0000000003b88183: movabs $0x266de970,%r9    ;   {metadata(method data for {method} {0x00000000265bd220} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b8818d: movabs $0x280,%r11
  0x0000000003b88197: jle    0x0000000003b881a7
  0x0000000003b8819d: movabs $0x290,%r11
  0x0000000003b881a7: mov    (%r9,%r11,1),%r13
  0x0000000003b881ab: lea    0x1(%r13),%r13
  0x0000000003b881af: mov    %r13,(%r9,%r11,1)
  0x0000000003b881b3: jg     0x0000000003b88313  ;*if_icmple
                                                ; - java.io.WinNTFileSystem::normalize@104 (line 92)

  0x0000000003b881b9: inc    %ecx
  0x0000000003b881bb: movabs $0x266de970,%r9    ;   {metadata(method data for {method} {0x00000000265bd220} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b881c5: mov    0xe0(%r9),%r11d
  0x0000000003b881cc: add    $0x8,%r11d
  0x0000000003b881d0: mov    %r11d,0xe0(%r9)
  0x0000000003b881d7: movabs $0x265bd218,%r9    ;   {metadata({method} {0x00000000265bd220} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b881e1: and    $0xfff8,%r11d
  0x0000000003b881e8: cmp    $0x0,%r11d
  0x0000000003b881ec: je     0x0000000003b88443  ; OopMap{rdx=Oop r8=Oop off=1138}
                                                ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@122 (line 86)

  0x0000000003b881f2: test   %eax,-0x21580f8(%rip)        # 0x0000000001a30100
                                                ;   {poll}
  0x0000000003b881f8: movabs $0x266de970,%r9    ;   {metadata(method data for {method} {0x00000000265bd220} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b88202: incl   0x2b0(%r9)
  0x0000000003b88209: mov    %rax,%r9
  0x0000000003b8820c: jmpq   0x0000000003b87ed0  ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@122 (line 86)

  0x0000000003b88211: cmp    %edi,%r9d
  0x0000000003b88214: movabs $0x266de970,%r9    ;   {metadata(method data for {method} {0x00000000265bd220} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b8821e: movabs $0x1a8,%rdi
  0x0000000003b88228: jne    0x0000000003b88238
  0x0000000003b8822e: movabs $0x1b8,%rdi
  0x0000000003b88238: mov    (%r9,%rdi,1),%rbx
  0x0000000003b8823c: lea    0x1(%rbx),%rbx
  0x0000000003b88240: mov    %rbx,(%r9,%rdi,1)
  0x0000000003b88244: jne    0x0000000003b882e0
  0x0000000003b8824a: jmpq   0x0000000003b882cd  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@49 (line 89)

  0x0000000003b8824f: cmp    %edi,%r9d
  0x0000000003b88252: movabs $0x266de970,%r9    ;   {metadata(method data for {method} {0x00000000265bd220} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b8825c: movabs $0x2c8,%rdi
  0x0000000003b88266: jne    0x0000000003b88276
  0x0000000003b8826c: movabs $0x2d8,%rdi
  0x0000000003b88276: mov    (%r9,%rdi,1),%rbx
  0x0000000003b8827a: lea    0x1(%rbx),%rbx
  0x0000000003b8827e: mov    %rbx,(%r9,%rdi,1)
  0x0000000003b88282: jne    0x0000000003b882bb  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@128 (line 96)

  0x0000000003b88288: mov    %rdx,%r9
  0x0000000003b8828b: movabs $0x266de970,%rdi   ;   {metadata(method data for {method} {0x00000000265bd220} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b88295: addq   $0x1,0x2e8(%rdi)
  0x0000000003b8829d: mov    %rsi,%rdi
  0x0000000003b882a0: dec    %edi
  0x0000000003b882a2: mov    %rsi,%r9           ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@137 (line 96)

  0x0000000003b882a5: nop
  0x0000000003b882a6: nop
  0x0000000003b882a7: callq  0x00000000039161a0  ; OopMap{off=1324}
                                                ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@137 (line 96)
                                                ;   {optimized virtual_call}
  0x0000000003b882ac: add    $0x90,%rsp
  0x0000000003b882b3: pop    %rbp
  0x0000000003b882b4: test   %eax,-0x21581ba(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b882ba: retq                      ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@140 (line 96)

  0x0000000003b882bb: mov    %r8,%rax
  0x0000000003b882be: add    $0x90,%rsp
  0x0000000003b882c5: pop    %rbp
  0x0000000003b882c6: test   %eax,-0x21581cc(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b882cc: retq                      ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@142 (line 97)

  0x0000000003b882cd: dec    %ecx
  0x0000000003b882cf: movabs $0x266de970,%r9    ;   {metadata(method data for {method} {0x00000000265bd220} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b882d9: incl   0x1c8(%r9)         ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@56 (line 89)

  0x0000000003b882e0: mov    %rdx,%r9
  0x0000000003b882e3: movabs $0x266de970,%rdi   ;   {metadata(method data for {method} {0x00000000265bd220} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b882ed: addq   $0x1,0x1e0(%rdi)
  0x0000000003b882f5: mov    %rsi,%r9
  0x0000000003b882f8: mov    %rcx,%rdi          ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000003b882fb: nop
  0x0000000003b882fc: nop
  0x0000000003b882fd: nop
  0x0000000003b882fe: nop
  0x0000000003b882ff: callq  0x00000000039161a0  ; OopMap{off=1412}
                                                ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {optimized virtual_call}
  0x0000000003b88304: add    $0x90,%rsp
  0x0000000003b8830b: pop    %rbp
  0x0000000003b8830c: test   %eax,-0x2158212(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b88312: retq                      ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@64 (line 89)

  0x0000000003b88313: mov    %rdx,%r9
  0x0000000003b88316: movabs $0x266de970,%rdi   ;   {metadata(method data for {method} {0x00000000265bd220} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b88320: addq   $0x1,0x2a0(%rdi)
  0x0000000003b88328: mov    %rsi,%r9
  0x0000000003b8832b: mov    $0x0,%edi          ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000003b88330: nop
  0x0000000003b88331: nop
  0x0000000003b88332: nop
  0x0000000003b88333: nop
  0x0000000003b88334: nop
  0x0000000003b88335: nop
  0x0000000003b88336: nop
  0x0000000003b88337: callq  0x00000000039161a0  ; OopMap{off=1468}
                                                ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {optimized virtual_call}
  0x0000000003b8833c: add    $0x90,%rsp
  0x0000000003b88343: pop    %rbp
  0x0000000003b88344: test   %eax,-0x215824a(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b8834a: retq                      ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@114 (line 93)

  0x0000000003b8834b: mov    %rdx,%r9
  0x0000000003b8834e: movabs $0x266de970,%rdi   ;   {metadata(method data for {method} {0x00000000265bd220} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b88358: addq   $0x1,0x250(%rdi)
  0x0000000003b88360: dec    %ecx
  0x0000000003b88362: mov    %rsi,%r9
  0x0000000003b88365: mov    %rcx,%rdi          ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@90 (line 91)

  0x0000000003b88368: nop
  0x0000000003b88369: nop
  0x0000000003b8836a: nop
  0x0000000003b8836b: nop
  0x0000000003b8836c: nop
  0x0000000003b8836d: nop
  0x0000000003b8836e: nop
  0x0000000003b8836f: callq  0x00000000039161a0  ; OopMap{off=1524}
                                                ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@90 (line 91)
                                                ;   {optimized virtual_call}
  0x0000000003b88374: add    $0x90,%rsp
  0x0000000003b8837b: pop    %rbp
  0x0000000003b8837c: test   %eax,-0x2158282(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b88382: retq                      ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@93 (line 91)

  0x0000000003b88383: mov    %r9d,0x74(%rsp)
  0x0000000003b88388: mov    %ebx,0x70(%rsp)
  0x0000000003b8838c: mov    %edi,0x6c(%rsp)
  0x0000000003b88390: mov    %esi,0x68(%rsp)
  0x0000000003b88394: mov    %r8,0x58(%rsp)
  0x0000000003b88399: mov    %rdx,0x60(%rsp)
  0x0000000003b8839e: xchg   %ax,%ax
  0x0000000003b883a0: jmpq   0x0000000003b88469  ;   {no_reloc}
  0x0000000003b883a5: add    %al,(%rax)
  0x0000000003b883a7: add    %al,(%rax)
  0x0000000003b883a9: add    %ch,%cl
  0x0000000003b883ab: (bad)  
  0x0000000003b883ac: add    %al,(%rax)
  0x0000000003b883ae: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x0000000003b883b1: rorb   -0x43(%rcx)        ;   {metadata(method data for {method} {0x0000000026443d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b883b4: and    %dh,0x2657(%rip)        # 0x0000000003b8aa11
  0x0000000003b883ba: add    %al,(%rax)
  0x0000000003b883bc: addq   $0x1,0x148(%r13)
  0x0000000003b883c4: mov    %rcx,%r8
  0x0000000003b883c7: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x0000000003b883ca: mov    %ecx,0x78(%rsp)
  0x0000000003b883ce: mov    %rax,0x50(%rsp)
  0x0000000003b883d3: nop
  0x0000000003b883d4: nop
  0x0000000003b883d5: nop
  0x0000000003b883d6: nop
  0x0000000003b883d7: callq  0x00000000039161a0  ; OopMap{[88]=Oop [80]=Oop [96]=Oop off=1628}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {optimized virtual_call}
  0x0000000003b883dc: mov    0x50(%rsp),%rax
  0x0000000003b883e1: jmpq   0x0000000003b884ab
  0x0000000003b883e6: mov    %r9,0x8(%rsp)
  0x0000000003b883eb: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b883f3: callq  0x0000000003b789e0  ; OopMap{rdx=Oop r8=Oop off=1656}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 82)
                                                ;   {runtime_call}
  0x0000000003b883f8: jmpq   0x0000000003b87de3
  0x0000000003b883fd: callq  0x000000000393f540  ; OopMap{rdx=Oop r8=Oop off=1666}
                                                ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ;   {runtime_call}
  0x0000000003b88402: mov    %r9,0x8(%rsp)
  0x0000000003b88407: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b8840f: callq  0x0000000003b789e0  ; OopMap{rdx=Oop r8=Oop off=1684}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ;   {runtime_call}
  0x0000000003b88414: jmpq   0x0000000003b87eab
  0x0000000003b88419: callq  0x000000000393f540  ; OopMap{rdx=Oop r8=Oop off=1694}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ;   {runtime_call}
  0x0000000003b8841e: mov    %rax,0x8(%rsp)
  0x0000000003b88423: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b8842b: callq  0x0000000003b789e0  ; OopMap{rdx=Oop r8=Oop off=1712}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x0000000003b88430: jmpq   0x0000000003b87fcf
  0x0000000003b88435: callq  0x000000000393f540  ; OopMap{rdx=Oop r8=Oop rax=Oop off=1722}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x0000000003b8843a: mov    %rcx,(%rsp)
  0x0000000003b8843e: callq  0x000000000393fc00  ; OopMap{rdx=Oop r8=Oop rax=Oop off=1731}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x0000000003b88443: mov    %r9,0x8(%rsp)
  0x0000000003b88448: movq   $0x7a,(%rsp)
  0x0000000003b88450: callq  0x0000000003b789e0  ; OopMap{rdx=Oop r8=Oop off=1749}
                                                ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@122 (line 86)
                                                ;   {runtime_call}
  0x0000000003b88455: jmpq   0x0000000003b881f2
  0x0000000003b8845a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000003b88464: mov    $0xa050f00,%eax
  0x0000000003b88469: callq  0x0000000003b777a0  ; OopMap{[88]=Oop [96]=Oop off=1774}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x0000000003b8846e: jmpq   0x0000000003b883a0
  0x0000000003b88473: mov    %rdx,%rdx
  0x0000000003b88476: callq  0x00000000039410a0  ; OopMap{[88]=Oop [96]=Oop off=1787}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x0000000003b8847b: jmpq   0x0000000003b883af
  0x0000000003b88480: nop
  0x0000000003b88481: nop
  0x0000000003b88482: mov    0x2a8(%r15),%rax
  0x0000000003b88489: movabs $0x0,%r10
  0x0000000003b88493: mov    %r10,0x2a8(%r15)
  0x0000000003b8849a: movabs $0x0,%r10
  0x0000000003b884a4: mov    %r10,0x2b0(%r15)
  0x0000000003b884ab: add    $0x90,%rsp
  0x0000000003b884b2: pop    %rbp
  0x0000000003b884b3: jmpq   0x000000000393ea20  ;   {runtime_call}
  0x0000000003b884b8: hlt    
  0x0000000003b884b9: hlt    
  0x0000000003b884ba: hlt    
  0x0000000003b884bb: hlt    
  0x0000000003b884bc: hlt    
  0x0000000003b884bd: hlt    
  0x0000000003b884be: hlt    
  0x0000000003b884bf: hlt    
[Stub Code]
  0x0000000003b884c0: nop                       ;   {no_reloc}
  0x0000000003b884c1: nop
  0x0000000003b884c2: nop
  0x0000000003b884c3: nop
  0x0000000003b884c4: nop
  0x0000000003b884c5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b884cf: jmpq   0x0000000003b884cf  ;   {runtime_call}
  0x0000000003b884d4: nop
  0x0000000003b884d5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b884df: jmpq   0x0000000003b884df  ;   {runtime_call}
  0x0000000003b884e4: nop
  0x0000000003b884e5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b884ef: jmpq   0x0000000003b884ef  ;   {runtime_call}
  0x0000000003b884f4: nop
  0x0000000003b884f5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b884ff: jmpq   0x0000000003b884ff  ;   {runtime_call}
  0x0000000003b88504: nop
  0x0000000003b88505: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b8850f: jmpq   0x0000000003b8850f  ;   {runtime_call}
[Exception Handler]
  0x0000000003b88514: callq  0x000000000393f3a0  ;   {runtime_call}
  0x0000000003b88519: mov    %rsp,-0x28(%rsp)
  0x0000000003b8851e: sub    $0x80,%rsp
  0x0000000003b88525: mov    %rax,0x78(%rsp)
  0x0000000003b8852a: mov    %rcx,0x70(%rsp)
  0x0000000003b8852f: mov    %rdx,0x68(%rsp)
  0x0000000003b88534: mov    %rbx,0x60(%rsp)
  0x0000000003b88539: mov    %rbp,0x50(%rsp)
  0x0000000003b8853e: mov    %rsi,0x48(%rsp)
  0x0000000003b88543: mov    %rdi,0x40(%rsp)
  0x0000000003b88548: mov    %r8,0x38(%rsp)
  0x0000000003b8854d: mov    %r9,0x30(%rsp)
  0x0000000003b88552: mov    %r10,0x28(%rsp)
  0x0000000003b88557: mov    %r11,0x20(%rsp)
  0x0000000003b8855c: mov    %r12,0x18(%rsp)
  0x0000000003b88561: mov    %r13,0x10(%rsp)
  0x0000000003b88566: mov    %r14,0x8(%rsp)
  0x0000000003b8856b: mov    %r15,(%rsp)
  0x0000000003b8856f: movabs $0x713a0770,%rcx   ;   {external_word}
  0x0000000003b88579: movabs $0x3b88519,%rdx    ;   {internal_word}
  0x0000000003b88583: mov    %rsp,%r8
  0x0000000003b88586: and    $0xfffffffffffffff0,%rsp
  0x0000000003b8858a: callq  0x0000000071056cc0  ;   {runtime_call}
  0x0000000003b8858f: hlt    
[Deopt Handler Code]
  0x0000000003b88590: movabs $0x3b88590,%r10    ;   {section_word}
  0x0000000003b8859a: push   %r10
  0x0000000003b8859c: jmpq   0x0000000003917600  ;   {runtime_call}
  0x0000000003b885a1: hlt    
  0x0000000003b885a2: hlt    
  0x0000000003b885a3: hlt    
  0x0000000003b885a4: hlt    
  0x0000000003b885a5: hlt    
  0x0000000003b885a6: hlt    
  0x0000000003b885a7: hlt    
<nmethod compile_id='15' compiler='C1' level='3' entry='0x0000000003b87d80' size='3984' address='0x0000000003b87b90' relocation_offset='288' insts_offset='496' stub_offset='2352' scopes_data_offset='2616' scopes_pcs_offset='3112' dependencies_offset='3944' nul_chk_table_offset='3952' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='143' count='146' backedge_count='3232' iicount='146' stamp='0.119'/>
<writer thread='13832'/>
<task_queued compile_id='18' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='640' backedge_count='1180' iicount='640' level='3' stamp='0.119' comment='tiered' hot_count='640'/>
<writer thread='22872'/>
[Loaded java.net.SocksSocketImpl$3 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='13832'/>
<task_queued compile_id='19' method='java/lang/Math min (II)I' bytes='11' count='1792' iicount='1792' level='3' stamp='0.119' comment='tiered' hot_count='1792'/>
<writer thread='22872'/>
[Loaded java.net.ProxySelector from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='13832'/>
<task_queued compile_id='20' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='3584' iicount='3584' level='3' stamp='0.119' comment='tiered' hot_count='3584'/>
<task_queued compile_id='21' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='512' iicount='512' level='3' stamp='0.119' comment='tiered' hot_count='512'/>
<writer thread='22872'/>
[Loaded sun.net.spi.DefaultProxySelector from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22084'/>
Decoding compiled method 0x0000000003b8a2d0:
Code:
<writer thread='13832'/>
[Loaded sun.misc.URLClassPath$FileLoader$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22084'/>
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000000265352d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rdx       = int
  # parm1:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000003b8a420: mov    %eax,-0x6000(%rsp)
  0x0000000003b8a427: push   %rbp
  0x0000000003b8a428: sub    $0x30,%rsp
  0x0000000003b8a42c: movabs $0x2662ffd0,%rax   ;   {metadata(method data for {method} {0x00000000265352d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000003b8a436: mov    0xdc(%rax),%esi
  0x0000000003b8a43c: add    $0x8,%esi
  0x0000000003b8a43f: mov    %esi,0xdc(%rax)
  0x0000000003b8a445: movabs $0x265352c8,%rax   ;   {metadata({method} {0x00000000265352d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000003b8a44f: and    $0x1ff8,%esi
  0x0000000003b8a455: cmp    $0x0,%esi
  0x0000000003b8a458: je     0x0000000003b8a4be  ;*iload_0
                                                ; - java.lang.Math::min@0 (line 1336)

  0x0000000003b8a45e: cmp    %r8d,%edx
  0x0000000003b8a461: movabs $0x2662ffd0,%rax   ;   {metadata(method data for {method} {0x00000000265352d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000003b8a46b: movabs $0x108,%rsi
  0x0000000003b8a475: jg     0x0000000003b8a485
  0x0000000003b8a47b: movabs $0x118,%rsi
  0x0000000003b8a485: mov    (%rax,%rsi,1),%rdi
  0x0000000003b8a489: lea    0x1(%rdi),%rdi
  0x0000000003b8a48d: mov    %rdi,(%rax,%rsi,1)
  0x0000000003b8a491: jg     0x0000000003b8a4ac  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)

  0x0000000003b8a497: movabs $0x2662ffd0,%rax   ;   {metadata(method data for {method} {0x00000000265352d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000003b8a4a1: incl   0x128(%rax)
  0x0000000003b8a4a7: jmpq   0x0000000003b8a4af  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)

  0x0000000003b8a4ac: mov    %r8,%rdx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x0000000003b8a4af: mov    %rdx,%rax
  0x0000000003b8a4b2: add    $0x30,%rsp
  0x0000000003b8a4b6: pop    %rbp
  0x0000000003b8a4b7: test   %eax,-0x215a3bd(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b8a4bd: retq   
  0x0000000003b8a4be: mov    %rax,0x8(%rsp)
  0x0000000003b8a4c3: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b8a4cb: callq  0x0000000003b789e0  ; OopMap{off=176}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ;   {runtime_call}
  0x0000000003b8a4d0: jmp    0x0000000003b8a45e
  0x0000000003b8a4d2: nop
  0x0000000003b8a4d3: nop
  0x0000000003b8a4d4: mov    0x2a8(%r15),%rax
  0x0000000003b8a4db: movabs $0x0,%r10
  0x0000000003b8a4e5: mov    %r10,0x2a8(%r15)
  0x0000000003b8a4ec: movabs $0x0,%r10
  0x0000000003b8a4f6: mov    %r10,0x2b0(%r15)
  0x0000000003b8a4fd: add    $0x30,%rsp
  0x0000000003b8a501: pop    %rbp
  0x0000000003b8a502: jmpq   0x000000000393ea20  ;   {runtime_call}
  0x0000000003b8a507: hlt    
  0x0000000003b8a508: hlt    
  0x0000000003b8a509: hlt    
  0x0000000003b8a50a: hlt    
  0x0000000003b8a50b: hlt    
  0x0000000003b8a50c: hlt    
  0x0000000003b8a50d: hlt    
  0x0000000003b8a50e: hlt    
  0x0000000003b8a50f: hlt    
  0x0000000003b8a510: hlt    
  0x0000000003b8a511: hlt    
  0x0000000003b8a512: hlt    
  0x0000000003b8a513: hlt    
  0x0000000003b8a514: hlt    
  0x0000000003b8a515: hlt    
  0x0000000003b8a516: hlt    
  0x0000000003b8a517: hlt    
  0x0000000003b8a518: hlt    
  0x0000000003b8a519: hlt    
  0x0000000003b8a51a: hlt    
  0x0000000003b8a51b: hlt    
  0x0000000003b8a51c: hlt    
  0x0000000003b8a51d: hlt    
  0x0000000003b8a51e: hlt    
  0x0000000003b8a51f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000003b8a520: callq  0x000000000393f3a0  ;   {no_reloc}
  0x0000000003b8a525: mov    %rsp,-0x28(%rsp)
  0x0000000003b8a52a: sub    $0x80,%rsp
  0x0000000003b8a531: mov    %rax,0x78(%rsp)
  0x0000000003b8a536: mov    %rcx,0x70(%rsp)
  0x0000000003b8a53b: mov    %rdx,0x68(%rsp)
  0x0000000003b8a540: mov    %rbx,0x60(%rsp)
  0x0000000003b8a545: mov    %rbp,0x50(%rsp)
  0x0000000003b8a54a: mov    %rsi,0x48(%rsp)
  0x0000000003b8a54f: mov    %rdi,0x40(%rsp)
  0x0000000003b8a554: mov    %r8,0x38(%rsp)
  0x0000000003b8a559: mov    %r9,0x30(%rsp)
  0x0000000003b8a55e: mov    %r10,0x28(%rsp)
  0x0000000003b8a563: mov    %r11,0x20(%rsp)
  0x0000000003b8a568: mov    %r12,0x18(%rsp)
  0x0000000003b8a56d: mov    %r13,0x10(%rsp)
  0x0000000003b8a572: mov    %r14,0x8(%rsp)
  0x0000000003b8a577: mov    %r15,(%rsp)
  0x0000000003b8a57b: movabs $0x713a0770,%rcx   ;   {external_word}
  0x0000000003b8a585: movabs $0x3b8a525,%rdx    ;   {internal_word}
  0x0000000003b8a58f: mov    %rsp,%r8
  0x0000000003b8a592: and    $0xfffffffffffffff0,%rsp
  0x0000000003b8a596: callq  0x0000000071056cc0  ;   {runtime_call}
  0x0000000003b8a59b: hlt    
[Deopt Handler Code]
  0x0000000003b8a59c: movabs $0x3b8a59c,%r10    ;   {section_word}
  0x0000000003b8a5a6: push   %r10
  0x0000000003b8a5a8: jmpq   0x0000000003917600  ;   {runtime_call}
  0x0000000003b8a5ad: hlt    
  0x0000000003b8a5ae: hlt    
  0x0000000003b8a5af: hlt    
<nmethod compile_id='19' compiler='C1' level='3' entry='0x0000000003b8a420' size='904' address='0x0000000003b8a2d0' relocation_offset='288' insts_offset='336' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' method='java/lang/Math min (II)I' bytes='11' count='1802' iicount='1802' stamp='0.121'/>
<writer thread='23180'/>
Decoding compiled method 0x0000000003b8a690:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000026444db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000003b8a800: mov    0x8(%rdx),%r10d
  0x0000000003b8a804: shl    $0x3,%r10
  0x0000000003b8a808: cmp    %rax,%r10
  0x0000000003b8a80b: jne    0x0000000003915f60  ;   {runtime_call}
  0x0000000003b8a811: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000003b8a81c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003b8a820: mov    %eax,-0x6000(%rsp)
  0x0000000003b8a827: push   %rbp
  0x0000000003b8a828: sub    $0x30,%rsp
  0x0000000003b8a82c: movabs $0x26697808,%rax   ;   {metadata(method data for {method} {0x0000000026444db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b8a836: mov    0xdc(%rax),%esi
  0x0000000003b8a83c: add    $0x8,%esi
  0x0000000003b8a83f: mov    %esi,0xdc(%rax)
  0x0000000003b8a845: movabs $0x26444db0,%rax   ;   {metadata({method} {0x0000000026444db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b8a84f: and    $0x1ff8,%esi
  0x0000000003b8a855: cmp    $0x0,%esi
  0x0000000003b8a858: je     0x0000000003b8aa15  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1403)

  0x0000000003b8a85e: mov    0xc(%rdx),%eax
  0x0000000003b8a861: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x0000000003b8a865: mov    0xc(%r8),%esi      ; implicit exception: dispatches to 0x0000000003b8aa2c
  0x0000000003b8a869: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)

  0x0000000003b8a86d: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x0000000003b8aa31
  0x0000000003b8a870: cmp    $0x0,%r9d
  0x0000000003b8a874: movabs $0x26697808,%rbx   ;   {metadata(method data for {method} {0x0000000026444db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b8a87e: movabs $0x108,%rdx
  0x0000000003b8a888: jl     0x0000000003b8a898
  0x0000000003b8a88e: movabs $0x118,%rdx
  0x0000000003b8a898: mov    (%rbx,%rdx,1),%rcx
  0x0000000003b8a89c: lea    0x1(%rcx),%rcx
  0x0000000003b8a8a0: mov    %rcx,(%rbx,%rdx,1)
  0x0000000003b8a8a4: jl     0x0000000003b8a9e2  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x0000000003b8a8aa: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x0000000003b8aa36
  0x0000000003b8a8ad: sub    %edi,%ebx
  0x0000000003b8a8af: cmp    %ebx,%r9d
  0x0000000003b8a8b2: movabs $0x26697808,%rbx   ;   {metadata(method data for {method} {0x0000000026444db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b8a8bc: movabs $0x128,%rdx
  0x0000000003b8a8c6: jle    0x0000000003b8a8d6
  0x0000000003b8a8cc: movabs $0x138,%rdx
  0x0000000003b8a8d6: mov    (%rbx,%rdx,1),%rcx
  0x0000000003b8a8da: lea    0x1(%rcx),%rcx
  0x0000000003b8a8de: mov    %rcx,(%rbx,%rdx,1)
  0x0000000003b8a8e2: jg     0x0000000003b8a9e2  ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x0000000003b8a8e8: mov    $0x0,%ebx
  0x0000000003b8a8ed: jmpq   0x0000000003b8a9a2  ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x0000000003b8a8f2: nopw   0x0(%rax,%rax,1)
  0x0000000003b8a8f8: mov    %r9,%rdx
  0x0000000003b8a8fb: inc    %edx
  0x0000000003b8a8fd: movslq %r9d,%rcx
  0x0000000003b8a900: cmp    0xc(%rax),%r9d
  0x0000000003b8a904: jae    0x0000000003b8aa3b
  0x0000000003b8a90a: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x0000000003b8a90f: mov    %rbx,%r8
  0x0000000003b8a912: inc    %r8d
  0x0000000003b8a915: movslq %ebx,%r9
  0x0000000003b8a918: cmp    0xc(%rsi),%ebx
  0x0000000003b8a91b: jae    0x0000000003b8aa44
  0x0000000003b8a921: movzwl 0x10(%rsi,%r9,2),%ebx  ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x0000000003b8a927: movabs $0x26697808,%r9    ;   {metadata(method data for {method} {0x0000000026444db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b8a931: mov    0xe0(%r9),%r11d
  0x0000000003b8a938: add    $0x8,%r11d
  0x0000000003b8a93c: mov    %r11d,0xe0(%r9)
  0x0000000003b8a943: movabs $0x26444db0,%r9    ;   {metadata({method} {0x0000000026444db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b8a94d: and    $0xfff8,%r11d
  0x0000000003b8a954: cmp    $0x0,%r11d
  0x0000000003b8a958: je     0x0000000003b8aa4d  ; OopMap{rsi=Oop rax=Oop off=350}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x0000000003b8a95e: test   %eax,-0x215a864(%rip)        # 0x0000000001a30100
                                                ;   {poll}
  0x0000000003b8a964: cmp    %ebx,%ecx
  0x0000000003b8a966: movabs $0x26697808,%rbx   ;   {metadata(method data for {method} {0x0000000026444db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b8a970: movabs $0x168,%rcx
  0x0000000003b8a97a: je     0x0000000003b8a98a
  0x0000000003b8a980: movabs $0x178,%rcx
  0x0000000003b8a98a: mov    (%rbx,%rcx,1),%r9
  0x0000000003b8a98e: lea    0x1(%r9),%r9
  0x0000000003b8a992: mov    %r9,(%rbx,%rcx,1)
  0x0000000003b8a996: jne    0x0000000003b8a9f3  ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x0000000003b8a99c: mov    %r8,%rbx
  0x0000000003b8a99f: mov    %rdx,%r9           ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x0000000003b8a9a2: dec    %edi
  0x0000000003b8a9a4: cmp    $0x0,%edi
  0x0000000003b8a9a7: movabs $0x26697808,%rdx   ;   {metadata(method data for {method} {0x0000000026444db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b8a9b1: movabs $0x148,%rcx
  0x0000000003b8a9bb: jl     0x0000000003b8a9cb
  0x0000000003b8a9c1: movabs $0x158,%rcx
  0x0000000003b8a9cb: mov    (%rdx,%rcx,1),%r8
  0x0000000003b8a9cf: lea    0x1(%r8),%r8
  0x0000000003b8a9d3: mov    %r8,(%rdx,%rcx,1)
  0x0000000003b8a9d7: jl     0x0000000003b8aa04
  0x0000000003b8a9dd: jmpq   0x0000000003b8a8f8  ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x0000000003b8a9e2: mov    $0x0,%eax
  0x0000000003b8a9e7: add    $0x30,%rsp
  0x0000000003b8a9eb: pop    %rbp
  0x0000000003b8a9ec: test   %eax,-0x215a8f2(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b8a9f2: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@41 (line 1410)

  0x0000000003b8a9f3: mov    $0x0,%eax
  0x0000000003b8a9f8: add    $0x30,%rsp
  0x0000000003b8a9fc: pop    %rbp
  0x0000000003b8a9fd: test   %eax,-0x215a903(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b8aa03: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@69 (line 1414)

  0x0000000003b8aa04: mov    $0x1,%eax
  0x0000000003b8aa09: add    $0x30,%rsp
  0x0000000003b8aa0d: pop    %rbp
  0x0000000003b8aa0e: test   %eax,-0x215a914(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b8aa14: retq   
  0x0000000003b8aa15: mov    %rax,0x8(%rsp)
  0x0000000003b8aa1a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b8aa22: callq  0x0000000003b789e0  ; OopMap{rdx=Oop r8=Oop off=551}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)
                                                ;   {runtime_call}
  0x0000000003b8aa27: jmpq   0x0000000003b8a85e
  0x0000000003b8aa2c: callq  0x000000000393f540  ; OopMap{rax=Oop off=561}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x0000000003b8aa31: callq  0x000000000393f540  ; OopMap{rax=Oop rsi=Oop off=566}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x0000000003b8aa36: callq  0x000000000393f540  ; OopMap{rsi=Oop rax=Oop off=571}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x0000000003b8aa3b: mov    %r9,(%rsp)
  0x0000000003b8aa3f: callq  0x000000000393fc00  ; OopMap{rsi=Oop rax=Oop off=580}
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)
                                                ;   {runtime_call}
  0x0000000003b8aa44: mov    %rbx,(%rsp)
  0x0000000003b8aa48: callq  0x000000000393fc00  ; OopMap{rsi=Oop rax=Oop off=589}
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)
                                                ;   {runtime_call}
  0x0000000003b8aa4d: mov    %r9,0x8(%rsp)
  0x0000000003b8aa52: movq   $0x41,(%rsp)
  0x0000000003b8aa5a: callq  0x0000000003b789e0  ; OopMap{rsi=Oop rax=Oop off=607}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)
                                                ;   {runtime_call}
  0x0000000003b8aa5f: jmpq   0x0000000003b8a95e
  0x0000000003b8aa64: nop
  0x0000000003b8aa65: nop
  0x0000000003b8aa66: mov    0x2a8(%r15),%rax
  0x0000000003b8aa6d: movabs $0x0,%r10
  0x0000000003b8aa77: mov    %r10,0x2a8(%r15)
  0x0000000003b8aa7e: movabs $0x0,%r10
  0x0000000003b8aa88: mov    %r10,0x2b0(%r15)
  0x0000000003b8aa8f: add    $0x30,%rsp
  0x0000000003b8aa93: pop    %rbp
  0x0000000003b8aa94: jmpq   0x000000000393ea20  ;   {runtime_call}
  0x0000000003b8aa99: hlt    
  0x0000000003b8aa9a: hlt    
  0x0000000003b8aa9b: hlt    
  0x0000000003b8aa9c: hlt    
  0x0000000003b8aa9d: hlt    
  0x0000000003b8aa9e: hlt    
  0x0000000003b8aa9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000003b8aaa0: callq  0x000000000393f3a0  ;   {no_reloc}
  0x0000000003b8aaa5: mov    %rsp,-0x28(%rsp)
  0x0000000003b8aaaa: sub    $0x80,%rsp
  0x0000000003b8aab1: mov    %rax,0x78(%rsp)
  0x0000000003b8aab6: mov    %rcx,0x70(%rsp)
  0x0000000003b8aabb: mov    %rdx,0x68(%rsp)
  0x0000000003b8aac0: mov    %rbx,0x60(%rsp)
  0x0000000003b8aac5: mov    %rbp,0x50(%rsp)
  0x0000000003b8aaca: mov    %rsi,0x48(%rsp)
  0x0000000003b8aacf: mov    %rdi,0x40(%rsp)
  0x0000000003b8aad4: mov    %r8,0x38(%rsp)
  0x0000000003b8aad9: mov    %r9,0x30(%rsp)
  0x0000000003b8aade: mov    %r10,0x28(%rsp)
  0x0000000003b8aae3: mov    %r11,0x20(%rsp)
  0x0000000003b8aae8: mov    %r12,0x18(%rsp)
  0x0000000003b8aaed: mov    %r13,0x10(%rsp)
  0x0000000003b8aaf2: mov    %r14,0x8(%rsp)
  0x0000000003b8aaf7: mov    %r15,(%rsp)
  0x0000000003b8aafb: movabs $0x713a0770,%rcx   ;   {external_word}
  0x0000000003b8ab05: movabs $0x3b8aaa5,%rdx    ;   {internal_word}
  0x0000000003b8ab0f: mov    %rsp,%r8
  0x0000000003b8ab12: and    $0xfffffffffffffff0,%rsp
  0x0000000003b8ab16: callq  0x0000000071056cc0  ;   {runtime_call}
  0x0000000003b8ab1b: hlt    
[Deopt Handler Code]
  0x0000000003b8ab1c: movabs $0x3b8ab1c,%r10    ;   {section_word}
  0x0000000003b8ab26: push   %r10
  0x0000000003b8ab28: jmpq   0x0000000003917600  ;   {runtime_call}
  0x0000000003b8ab2d: hlt    
  0x0000000003b8ab2e: hlt    
  0x0000000003b8ab2f: hlt    
<nmethod compile_id='18' compiler='C1' level='3' entry='0x0000000003b8a800' size='1824' address='0x0000000003b8a690' relocation_offset='288' insts_offset='368' stub_offset='1040' scopes_data_offset='1192' scopes_pcs_offset='1384' dependencies_offset='1784' nul_chk_table_offset='1792' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='744' backedge_count='1283' iicount='744' stamp='0.123'/>
<writer thread='5512'/>
Decoding compiled method 0x0000000003b8add0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # 
<writer thread='22872'/>
[Loaded sun.net.spi.DefaultProxySelector$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='5512'/>
{method} {0x00000000266132b0} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000003b8af80: mov    %eax,-0x6000(%rsp)
  0x0000000003b8af87: push   %rbp
  0x0000000003b8af88: sub    $0x30,%rsp
  0x0000000003b8af8c: movabs $0x26616cd8,%rax   ;   {metadata(method data for {method} {0x00000000266132b0} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x0000000003b8af96: mov    0xdc(%rax),%esi
  0x0000000003b8af9c: add    $0x8,%esi
  0x0000000003b8af9f: mov    %esi,0xdc(%rax)
  0x0000000003b8afa5: movabs $0x266132a8,%rax   ;   {metadata({method} {0x00000000266132b0} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x0000000003b8afaf: and    $0x1ff8,%esi
  0x0000000003b8afb5: cmp    $0x0,%esi
  0x0000000003b8afb8: je     0x0000000003b8b13c  ;*iload_0
                                                ; - java.lang.CharacterData::of@0 (line 77)

  0x0000000003b8afbe: mov    %rdx,%rax
  0x0000000003b8afc1: shr    $0x8,%eax
  0x0000000003b8afc4: cmp    $0x0,%eax
  0x0000000003b8afc7: movabs $0x26616cd8,%rax   ;   {metadata(method data for {method} {0x00000000266132b0} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x0000000003b8afd1: movabs $0x108,%rsi
  0x0000000003b8afdb: jne    0x0000000003b8afeb
  0x0000000003b8afe1: movabs $0x118,%rsi
  0x0000000003b8afeb: mov    (%rax,%rsi,1),%rdi
  0x0000000003b8afef: lea    0x1(%rdi),%rdi
  0x0000000003b8aff3: mov    %rdi,(%rax,%rsi,1)
  0x0000000003b8aff7: je     0x0000000003b8b126  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x0000000003b8affd: shr    $0x10,%edx
  0x0000000003b8b000: cmp    $0x0,%edx
  0x0000000003b8b003: je     0x0000000003b8b0fe
  0x0000000003b8b009: cmp    $0x1,%edx
  0x0000000003b8b00c: je     0x0000000003b8b0d6
  0x0000000003b8b012: cmp    $0x2,%edx
  0x0000000003b8b015: je     0x0000000003b8b0ae
  0x0000000003b8b01b: cmp    $0xe,%edx
  0x0000000003b8b01e: je     0x0000000003b8b086
  0x0000000003b8b024: cmp    $0xf,%edx
  0x0000000003b8b027: je     0x0000000003b8b036
  0x0000000003b8b02d: cmp    $0x10,%edx
  0x0000000003b8b030: jne    0x0000000003b8b05e  ;*tableswitch
                                                ; - java.lang.CharacterData::of@15 (line 80)

  0x0000000003b8b036: xchg   %ax,%ax
  0x0000000003b8b038: jmpq   0x0000000003b8b1b0  ;   {no_reloc}
  0x0000000003b8b03d: add    %al,(%rax)
  0x0000000003b8b03f: add    %al,(%rax)
  0x0000000003b8b041: add    %ah,0xf(%rsi)
  0x0000000003b8b044: (bad)  
  0x0000000003b8b045: add    %r8b,(%rax)
  0x0000000003b8b048: jmpq   0x0000000003b8b1ca  ; implicit exception: dispatches to 0x0000000003b8b1ba
  0x0000000003b8b04d: nop
  0x0000000003b8b04e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)

  0x0000000003b8b052: add    $0x30,%rsp
  0x0000000003b8b056: pop    %rbp
  0x0000000003b8b057: test   %eax,-0x215af5d(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b8b05d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@115 (line 91)

  0x0000000003b8b05e: xchg   %ax,%ax
  0x0000000003b8b060: jmpq   0x0000000003b8b231  ;   {no_reloc}
  0x0000000003b8b065: add    %al,(%rax)
  0x0000000003b8b067: add    %al,(%rax)
  0x0000000003b8b069: add    %ah,0xf(%rsi)
  0x0000000003b8b06c: (bad)  
  0x0000000003b8b06d: add    %r8b,(%rax)
  0x0000000003b8b070: jmpq   0x0000000003b8b24b  ; implicit exception: dispatches to 0x0000000003b8b23b
  0x0000000003b8b075: nop
  0x0000000003b8b076: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)

  0x0000000003b8b07a: add    $0x30,%rsp
  0x0000000003b8b07e: pop    %rbp
  0x0000000003b8b07f: test   %eax,-0x215af85(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b8b085: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@119 (line 93)

  0x0000000003b8b086: xchg   %ax,%ax
  0x0000000003b8b088: jmpq   0x0000000003b8b2b2  ;   {no_reloc}
  0x0000000003b8b08d: add    %al,(%rax)
  0x0000000003b8b08f: add    %al,(%rax)
  0x0000000003b8b091: add    %ah,0xf(%rsi)
  0x0000000003b8b094: (bad)  
  0x0000000003b8b095: add    %r8b,(%rax)
  0x0000000003b8b098: jmpq   0x0000000003b8b2cc  ; implicit exception: dispatches to 0x0000000003b8b2bc
  0x0000000003b8b09d: nop
  0x0000000003b8b09e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)

  0x0000000003b8b0a2: add    $0x30,%rsp
  0x0000000003b8b0a6: pop    %rbp
  0x0000000003b8b0a7: test   %eax,-0x215afad(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b8b0ad: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@111 (line 88)

  0x0000000003b8b0ae: xchg   %ax,%ax
  0x0000000003b8b0b0: jmpq   0x0000000003b8b333  ;   {no_reloc}
  0x0000000003b8b0b5: add    %al,(%rax)
  0x0000000003b8b0b7: add    %al,(%rax)
  0x0000000003b8b0b9: add    %ah,0xf(%rsi)
  0x0000000003b8b0bc: (bad)  
  0x0000000003b8b0bd: add    %r8b,(%rax)
  0x0000000003b8b0c0: jmpq   0x0000000003b8b34d  ; implicit exception: dispatches to 0x0000000003b8b33d
  0x0000000003b8b0c5: nop
  0x0000000003b8b0c6: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)

  0x0000000003b8b0ca: add    $0x30,%rsp
  0x0000000003b8b0ce: pop    %rbp
  0x0000000003b8b0cf: test   %eax,-0x215afd5(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b8b0d5: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@107 (line 86)

  0x0000000003b8b0d6: xchg   %ax,%ax
  0x0000000003b8b0d8: jmpq   0x0000000003b8b3b4  ;   {no_reloc}
  0x0000000003b8b0dd: add    %al,(%rax)
  0x0000000003b8b0df: add    %al,(%rax)
  0x0000000003b8b0e1: add    %ah,0xf(%rsi)
  0x0000000003b8b0e4: (bad)  
  0x0000000003b8b0e5: add    %r8b,(%rax)
  0x0000000003b8b0e8: jmpq   0x0000000003b8b3ce  ; implicit exception: dispatches to 0x0000000003b8b3be
  0x0000000003b8b0ed: nop
  0x0000000003b8b0ee: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)

  0x0000000003b8b0f2: add    $0x30,%rsp
  0x0000000003b8b0f6: pop    %rbp
  0x0000000003b8b0f7: test   %eax,-0x215affd(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b8b0fd: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@103 (line 84)

  0x0000000003b8b0fe: xchg   %ax,%ax
  0x0000000003b8b100: jmpq   0x0000000003b8b435  ;   {no_reloc}
  0x0000000003b8b105: add    %al,(%rax)
  0x0000000003b8b107: add    %al,(%rax)
  0x0000000003b8b109: add    %ah,0xf(%rsi)
  0x0000000003b8b10c: (bad)  
  0x0000000003b8b10d: add    %r8b,(%rax)
  0x0000000003b8b110: jmpq   0x0000000003b8b44f  ; implicit exception: dispatches to 0x0000000003b8b43f
  0x0000000003b8b115: nop
  0x0000000003b8b116: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)

  0x0000000003b8b11a: add    $0x30,%rsp
  0x0000000003b8b11e: pop    %rbp
  0x0000000003b8b11f: test   %eax,-0x215b025(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b8b125: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@99 (line 82)

  0x0000000003b8b126: movabs $0x715c8b780,%rax  ;   {oop(a &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000003b8b130: add    $0x30,%rsp
  0x0000000003b8b134: pop    %rbp
  0x0000000003b8b135: test   %eax,-0x215b03b(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b8b13b: retq   
  0x0000000003b8b13c: mov    %rax,0x8(%rsp)
  0x0000000003b8b141: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b8b149: callq  0x0000000003b789e0  ; OopMap{off=462}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 77)
                                                ;   {runtime_call}
  0x0000000003b8b14e: jmpq   0x0000000003b8afbe
  0x0000000003b8b153: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000003b8b15d: push   %rax
  0x0000000003b8b15e: push   %rbx
  0x0000000003b8b15f: mov    0x48(%rax),%rbx
  0x0000000003b8b163: push   %rdi
  0x0000000003b8b164: push   %rsi
  0x0000000003b8b165: push   %rdx
  0x0000000003b8b166: push   %rcx
  0x0000000003b8b167: push   %r8
  0x0000000003b8b169: push   %r9
  0x0000000003b8b16b: push   %r10
  0x0000000003b8b16d: mov    %rsp,%r10
  0x0000000003b8b170: and    $0xfffffffffffffff0,%rsp
  0x0000000003b8b174: push   %r10
  0x0000000003b8b176: push   %r11
  0x0000000003b8b178: mov    $0x6,%ecx
  0x0000000003b8b17d: movabs $0x7ffab62e5540,%r10  ;   {runtime_call}
  0x0000000003b8b187: callq  *%r10
  0x0000000003b8b18a: pop    %r11
  0x0000000003b8b18c: pop    %rsp
  0x0000000003b8b18d: pop    %r10
  0x0000000003b8b18f: pop    %r9
  0x0000000003b8b191: pop    %r8
  0x0000000003b8b193: pop    %rcx
  0x0000000003b8b194: pop    %rdx
  0x0000000003b8b195: pop    %rsi
  0x0000000003b8b196: pop    %rdi
  0x0000000003b8b197: cmp    0x118(%rbx),%rax
  0x0000000003b8b19e: pop    %rbx
  0x0000000003b8b19f: pop    %rax
  0x0000000003b8b1a0: jne    0x0000000003b8b1b0
  0x0000000003b8b1a6: jmpq   0x0000000003b8b042
  0x0000000003b8b1ab: mov    $0xa535d00,%eax
  0x0000000003b8b1b0: callq  0x0000000003b77be0  ; OopMap{off=565}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000003b8b1b5: jmpq   0x0000000003b8b038
  0x0000000003b8b1ba: callq  0x000000000393f540  ; OopMap{rax=Oop off=575}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000003b8b1bf: mov    0x0(%rax),%eax
  0x0000000003b8b1c5: mov    $0x6050b00,%eax
  0x0000000003b8b1ca: callq  0x0000000003b77360  ; OopMap{rax=Oop off=591}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000003b8b1cf: jmpq   0x0000000003b8b048
  0x0000000003b8b1d4: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000003b8b1de: push   %rax
  0x0000000003b8b1df: push   %rbx
  0x0000000003b8b1e0: mov    0x48(%rax),%rbx
  0x0000000003b8b1e4: push   %rdi
  0x0000000003b8b1e5: push   %rsi
  0x0000000003b8b1e6: push   %rdx
  0x0000000003b8b1e7: push   %rcx
  0x0000000003b8b1e8: push   %r8
  0x0000000003b8b1ea: push   %r9
  0x0000000003b8b1ec: push   %r10
  0x0000000003b8b1ee: mov    %rsp,%r10
  0x0000000003b8b1f1: and    $0xfffffffffffffff0,%rsp
  0x0000000003b8b1f5: push   %r10
  0x0000000003b8b1f7: push   %r11
  0x0000000003b8b1f9: mov    $0x6,%ecx
  0x0000000003b8b1fe: movabs $0x7ffab62e5540,%r10  ;   {runtime_call}
  0x0000000003b8b208: callq  *%r10
  0x0000000003b8b20b: pop    %r11
  0x0000000003b8b20d: pop    %rsp
  0x0000000003b8b20e: pop    %r10
  0x0000000003b8b210: pop    %r9
  0x0000000003b8b212: pop    %r8
  0x0000000003b8b214: pop    %rcx
  0x0000000003b8b215: pop    %rdx
  0x0000000003b8b216: pop    %rsi
  0x0000000003b8b217: pop    %rdi
  0x0000000003b8b218: cmp    0x118(%rbx),%rax
  0x0000000003b8b21f: pop    %rbx
  0x0000000003b8b220: pop    %rax
  0x0000000003b8b221: jne    0x0000000003b8b231
  0x0000000003b8b227: jmpq   0x0000000003b8b06a
  0x0000000003b8b22c: mov    $0xa535d00,%eax
  0x0000000003b8b231: callq  0x0000000003b77be0  ; OopMap{off=694}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000003b8b236: jmpq   0x0000000003b8b060
  0x0000000003b8b23b: callq  0x000000000393f540  ; OopMap{rax=Oop off=704}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000003b8b240: mov    0x0(%rax),%eax
  0x0000000003b8b246: mov    $0x6050b00,%eax
  0x0000000003b8b24b: callq  0x0000000003b77360  ; OopMap{rax=Oop off=720}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000003b8b250: jmpq   0x0000000003b8b070
  0x0000000003b8b255: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000003b8b25f: push   %rax
  0x0000000003b8b260: push   %rbx
  0x0000000003b8b261: mov    0x48(%rax),%rbx
  0x0000000003b8b265: push   %rdi
  0x0000000003b8b266: push   %rsi
  0x0000000003b8b267: push   %rdx
  0x0000000003b8b268: push   %rcx
  0x0000000003b8b269: push   %r8
  0x0000000003b8b26b: push   %r9
  0x0000000003b8b26d: push   %r10
  0x0000000003b8b26f: mov    %rsp,%r10
  0x0000000003b8b272: and    $0xfffffffffffffff0,%rsp
  0x0000000003b8b276: push   %r10
  0x0000000003b8b278: push   %r11
  0x0000000003b8b27a: mov    $0x6,%ecx
  0x0000000003b8b27f: movabs $0x7ffab62e5540,%r10  ;   {runtime_call}
  0x0000000003b8b289: callq  *%r10
  0x0000000003b8b28c: pop    %r11
  0x0000000003b8b28e: pop    %rsp
  0x0000000003b8b28f: pop    %r10
  0x0000000003b8b291: pop    %r9
  0x0000000003b8b293: pop    %r8
  0x0000000003b8b295: pop    %rcx
  0x0000000003b8b296: pop    %rdx
  0x0000000003b8b297: pop    %rsi
  0x0000000003b8b298: pop    %rdi
  0x0000000003b8b299: cmp    0x118(%rbx),%rax
  0x0000000003b8b2a0: pop    %rbx
  0x0000000003b8b2a1: pop    %rax
  0x0000000003b8b2a2: jne    0x0000000003b8b2b2
  0x0000000003b8b2a8: jmpq   0x0000000003b8b092
  0x0000000003b8b2ad: mov    $0xa535d00,%eax
  0x0000000003b8b2b2: callq  0x0000000003b77be0  ; OopMap{off=823}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000003b8b2b7: jmpq   0x0000000003b8b088
  0x0000000003b8b2bc: callq  0x000000000393f540  ; OopMap{rax=Oop off=833}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000003b8b2c1: mov    0x0(%rax),%eax
  0x0000000003b8b2c7: mov    $0x6050b00,%eax
  0x0000000003b8b2cc: callq  0x0000000003b77360  ; OopMap{rax=Oop off=849}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000003b8b2d1: jmpq   0x0000000003b8b098
  0x0000000003b8b2d6: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000003b8b2e0: push   %rax
  0x0000000003b8b2e1: push   %rbx
  0x0000000003b8b2e2: mov    0x48(%rax),%rbx
  0x0000000003b8b2e6: push   %rdi
  0x0000000003b8b2e7: push   %rsi
  0x0000000003b8b2e8: push   %rdx
  0x0000000003b8b2e9: push   %rcx
  0x0000000003b8b2ea: push   %r8
  0x0000000003b8b2ec: push   %r9
  0x0000000003b8b2ee: push   %r10
  0x0000000003b8b2f0: mov    %rsp,%r10
  0x0000000003b8b2f3: and    $0xfffffffffffffff0,%rsp
  0x0000000003b8b2f7: push   %r10
  0x0000000003b8b2f9: push   %r11
  0x0000000003b8b2fb: mov    $0x6,%ecx
  0x0000000003b8b300: movabs $0x7ffab62e5540,%r10  ;   {runtime_call}
  0x0000000003b8b30a: callq  *%r10
  0x0000000003b8b30d: pop    %r11
  0x0000000003b8b30f: pop    %rsp
  0x0000000003b8b310: pop    %r10
  0x0000000003b8b312: pop    %r9
  0x0000000003b8b314: pop    %r8
  0x0000000003b8b316: pop    %rcx
  0x0000000003b8b317: pop    %rdx
  0x0000000003b8b318: pop    %rsi
  0x0000000003b8b319: pop    %rdi
  0x0000000003b8b31a: cmp    0x118(%rbx),%rax
  0x0000000003b8b321: pop    %rbx
  0x0000000003b8b322: pop    %rax
  0x0000000003b8b323: jne    0x0000000003b8b333
  0x0000000003b8b329: jmpq   0x0000000003b8b0ba
  0x0000000003b8b32e: mov    $0xa535d00,%eax
  0x0000000003b8b333: callq  0x0000000003b77be0  ; OopMap{off=952}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000003b8b338: jmpq   0x0000000003b8b0b0
  0x0000000003b8b33d: callq  0x000000000393f540  ; OopMap{rax=Oop off=962}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000003b8b342: mov    0x0(%rax),%eax
  0x0000000003b8b348: mov    $0x6050b00,%eax
  0x0000000003b8b34d: callq  0x0000000003b77360  ; OopMap{rax=Oop off=978}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000003b8b352: jmpq   0x0000000003b8b0c0
  0x0000000003b8b357: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000003b8b361: push   %rax
  0x0000000003b8b362: push   %rbx
  0x0000000003b8b363: mov    0x48(%rax),%rbx
  0x0000000003b8b367: push   %rdi
  0x0000000003b8b368: push   %rsi
  0x0000000003b8b369: push   %rdx
  0x0000000003b8b36a: push   %rcx
  0x0000000003b8b36b: push   %r8
  0x0000000003b8b36d: push   %r9
  0x0000000003b8b36f: push   %r10
  0x0000000003b8b371: mov    %rsp,%r10
  0x0000000003b8b374: and    $0xfffffffffffffff0,%rsp
  0x0000000003b8b378: push   %r10
  0x0000000003b8b37a: push   %r11
  0x0000000003b8b37c: mov    $0x6,%ecx
  0x0000000003b8b381: movabs $0x7ffab62e5540,%r10  ;   {runtime_call}
  0x0000000003b8b38b: callq  *%r10
  0x0000000003b8b38e: pop    %r11
  0x0000000003b8b390: pop    %rsp
  0x0000000003b8b391: pop    %r10
  0x0000000003b8b393: pop    %r9
  0x0000000003b8b395: pop    %r8
  0x0000000003b8b397: pop    %rcx
  0x0000000003b8b398: pop    %rdx
  0x0000000003b8b399: pop    %rsi
  0x0000000003b8b39a: pop    %rdi
  0x0000000003b8b39b: cmp    0x118(%rbx),%rax
  0x0000000003b8b3a2: pop    %rbx
  0x0000000003b8b3a3: pop    %rax
  0x0000000003b8b3a4: jne    0x0000000003b8b3b4
  0x0000000003b8b3aa: jmpq   0x0000000003b8b0e2
  0x0000000003b8b3af: mov    $0xa535d00,%eax
  0x0000000003b8b3b4: callq  0x0000000003b77be0  ; OopMap{off=1081}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000003b8b3b9: jmpq   0x0000000003b8b0d8
  0x0000000003b8b3be: callq  0x000000000393f540  ; OopMap{rax=Oop off=1091}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000003b8b3c3: mov    0x0(%rax),%eax
  0x0000000003b8b3c9: mov    $0x6050b00,%eax
  0x0000000003b8b3ce: callq  0x0000000003b77360  ; OopMap{rax=Oop off=1107}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000003b8b3d3: jmpq   0x0000000003b8b0e8
  0x0000000003b8b3d8: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000003b8b3e2: push   %rax
  0x0000000003b8b3e3: push   %rbx
  0x0000000003b8b3e4: mov    0x48(%rax),%rbx
  0x0000000003b8b3e8: push   %rdi
  0x0000000003b8b3e9: push   %rsi
  0x0000000003b8b3ea: push   %rdx
  0x0000000003b8b3eb: push   %rcx
  0x0000000003b8b3ec: push   %r8
  0x0000000003b8b3ee: push   %r9
  0x0000000003b8b3f0: push   %r10
  0x0000000003b8b3f2: mov    %rsp,%r10
  0x0000000003b8b3f5: and    $0xfffffffffffffff0,%rsp
  0x0000000003b8b3f9: push   %r10
  0x0000000003b8b3fb: push   %r11
  0x0000000003b8b3fd: mov    $0x6,%ecx
  0x0000000003b8b402: movabs $0x7ffab62e5540,%r10  ;   {runtime_call}
  0x0000000003b8b40c: callq  *%r10
  0x0000000003b8b40f: pop    %r11
  0x0000000003b8b411: pop    %rsp
  0x0000000003b8b412: pop    %r10
  0x0000000003b8b414: pop    %r9
  0x0000000003b8b416: pop    %r8
  0x0000000003b8b418: pop    %rcx
  0x0000000003b8b419: pop    %rdx
  0x0000000003b8b41a: pop    %rsi
  0x0000000003b8b41b: pop    %rdi
  0x0000000003b8b41c: cmp    0x118(%rbx),%rax
  0x0000000003b8b423: pop    %rbx
  0x0000000003b8b424: pop    %rax
  0x0000000003b8b425: jne    0x0000000003b8b435
  0x0000000003b8b42b: jmpq   0x0000000003b8b10a
  0x0000000003b8b430: mov    $0xa535d00,%eax
  0x0000000003b8b435: callq  0x0000000003b77be0  ; OopMap{off=1210}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000003b8b43a: jmpq   0x0000000003b8b100
  0x0000000003b8b43f: callq  0x000000000393f540  ; OopMap{rax=Oop off=1220}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000003b8b444: mov    0x0(%rax),%eax
  0x0000000003b8b44a: mov    $0x6050b00,%eax
  0x0000000003b8b44f: callq  0x0000000003b77360  ; OopMap{rax=Oop off=1236}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000003b8b454: jmpq   0x0000000003b8b110
  0x0000000003b8b459: nop
  0x0000000003b8b45a: nop
  0x0000000003b8b45b: mov    0x2a8(%r15),%rax
  0x0000000003b8b462: movabs $0x0,%r10
  0x0000000003b8b46c: mov    %r10,0x2a8(%r15)
  0x0000000003b8b473: movabs $0x0,%r10
  0x0000000003b8b47d: mov    %r10,0x2b0(%r15)
  0x0000000003b8b484: add    $0x30,%rsp
  0x0000000003b8b488: pop    %rbp
  0x0000000003b8b489: jmpq   0x000000000393ea20  ;   {runtime_call}
  0x0000000003b8b48e: hlt    
  0x0000000003b8b48f: hlt    
  0x0000000003b8b490: hlt    
  0x0000000003b8b491: hlt    
  0x0000000003b8b492: hlt    
  0x0000000003b8b493: hlt    
  0x0000000003b8b494: hlt    
  0x0000000003b8b495: hlt    
  0x0000000003b8b496: hlt    
  0x0000000003b8b497: hlt    
  0x0000000003b8b498: hlt    
  0x0000000003b8b499: hlt    
  0x0000000003b8b49a: hlt    
  0x0000000003b8b49b: hlt    
  0x0000000003b8b49c: hlt    
  0x0000000003b8b49d: hlt    
  0x0000000003b8b49e: hlt    
  0x0000000003b8b49f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000003b8b4a0: callq  0x000000000393f3a0  ;   {no_reloc}
  0x0000000003b8b4a5: mov    %rsp,-0x28(%rsp)
  0x0000000003b8b4aa: sub    $0x80,%rsp
  0x0000000003b8b4b1: mov    %rax,0x78(%rsp)
  0x0000000003b8b4b6: mov    %rcx,0x70(%rsp)
  0x0000000003b8b4bb: mov    %rdx,0x68(%rsp)
  0x0000000003b8b4c0: mov    %rbx,0x60(%rsp)
  0x0000000003b8b4c5: mov    %rbp,0x50(%rsp)
  0x0000000003b8b4ca: mov    %rsi,0x48(%rsp)
  0x0000000003b8b4cf: mov    %rdi,0x40(%rsp)
  0x0000000003b8b4d4: mov    %r8,0x38(%rsp)
  0x0000000003b8b4d9: mov    %r9,0x30(%rsp)
  0x0000000003b8b4de: mov    %r10,0x28(%rsp)
  0x0000000003b8b4e3: mov    %r11,0x20(%rsp)
  0x0000000003b8b4e8: mov    %r12,0x18(%rsp)
  0x0000000003b8b4ed: mov    %r13,0x10(%rsp)
  0x0000000003b8b4f2: mov    %r14,0x8(%rsp)
  0x0000000003b8b4f7: mov    %r15,(%rsp)
  0x0000000003b8b4fb: movabs $0x713a0770,%rcx   ;   {external_word}
  0x0000000003b8b505: movabs $0x3b8b4a5,%rdx    ;   {internal_word}
  0x0000000003b8b50f: mov    %rsp,%r8
  0x0000000003b8b512: and    $0xfffffffffffffff0,%rsp
  0x0000000003b8b516: callq  0x0000000071056cc0  ;   {runtime_call}
  0x0000000003b8b51b: hlt    
[Deopt Handler Code]
  0x0000000003b8b51c: movabs $0x3b8b51c,%r10    ;   {section_word}
  0x0000000003b8b526: push   %r10
  0x0000000003b8b528: jmpq   0x0000000003917600  ;   {runtime_call}
  0x0000000003b8b52d: hlt    
  0x0000000003b8b52e: hlt    
  0x0000000003b8b52f: hlt    
<nmethod compile_id='20' compiler='C1' level='3' entry='0x0000000003b8af80' size='2680' address='0x0000000003b8add0' relocation_offset='288' insts_offset='432' stub_offset='1744' scopes_data_offset='1896' scopes_pcs_offset='2040' dependencies_offset='2616' nul_chk_table_offset='2624' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='3585' iicount='3585' stamp='0.129'/>
<writer thread='22188'/>
Decoding compiled method 0x0000000003b8b890:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000026444e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = 
<writer thread='22872'/>
[Loaded sun.net.NetProperties from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22188'/>
&apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000003b8ba00: mov    0x8(%rdx),%r10d
  0x0000000003b8ba04: shl    $0x3,%r10
  0x0000000003b8ba08: cmp    %rax,%r10
  0x0000000003b8ba0b: jne    0x0000000003915f60  ;   {runtime_call}
  0x0000000003b8ba11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000003b8ba1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003b8ba20: mov    %eax,-0x6000(%rsp)
  0x0000000003b8ba27: push   %rbp
  0x0000000003b8ba28: sub    $0x30,%rsp
  0x0000000003b8ba2c: movabs $0x266ee630,%r9    ;   {metadata(method data for {method} {0x0000000026444e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b8ba36: mov    0xdc(%r9),%esi
  0x0000000003b8ba3d: add    $0x8,%esi
  0x0000000003b8ba40: mov    %esi,0xdc(%r9)
  0x0000000003b8ba47: movabs $0x26444e48,%r9    ;   {metadata({method} {0x0000000026444e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b8ba51: and    $0x1ff8,%esi
  0x0000000003b8ba57: cmp    $0x0,%esi
  0x0000000003b8ba5a: je     0x0000000003b8bb0b  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1434)

  0x0000000003b8ba60: mov    %rdx,%r9
  0x0000000003b8ba63: movabs $0x266ee630,%rsi   ;   {metadata(method data for {method} {0x0000000026444e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000003b8ba6d: mov    0x8(%r9),%r9d
  0x0000000003b8ba71: shl    $0x3,%r9
  0x0000000003b8ba75: cmp    0x110(%rsi),%r9
  0x0000000003b8ba7c: jne    0x0000000003b8ba8b
  0x0000000003b8ba7e: addq   $0x1,0x118(%rsi)
  0x0000000003b8ba86: jmpq   0x0000000003b8baf1
  0x0000000003b8ba8b: cmp    0x120(%rsi),%r9
  0x0000000003b8ba92: jne    0x0000000003b8baa1
  0x0000000003b8ba94: addq   $0x1,0x128(%rsi)
  0x0000000003b8ba9c: jmpq   0x0000000003b8baf1
  0x0000000003b8baa1: cmpq   $0x0,0x110(%rsi)
  0x0000000003b8baac: jne    0x0000000003b8bac5
  0x0000000003b8baae: mov    %r9,0x110(%rsi)
  0x0000000003b8bab5: movq   $0x1,0x118(%rsi)
  0x0000000003b8bac0: jmpq   0x0000000003b8baf1
  0x0000000003b8bac5: cmpq   $0x0,0x120(%rsi)
  0x0000000003b8bad0: jne    0x0000000003b8bae9
  0x0000000003b8bad2: mov    %r9,0x120(%rsi)
  0x0000000003b8bad9: movq   $0x1,0x128(%rsi)
  0x0000000003b8bae4: jmpq   0x0000000003b8baf1
  0x0000000003b8bae9: addq   $0x1,0x108(%rsi)
  0x0000000003b8baf1: mov    $0x0,%r9d          ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)

  0x0000000003b8baf7: callq  0x00000000039161a0  ; OopMap{off=252}
                                                ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)
                                                ;   {optimized virtual_call}
  0x0000000003b8bafc: and    $0x1,%eax
  0x0000000003b8baff: add    $0x30,%rsp
  0x0000000003b8bb03: pop    %rbp
  0x0000000003b8bb04: test   %eax,-0x215ba0a(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b8bb0a: retq   
  0x0000000003b8bb0b: mov    %r9,0x8(%rsp)
  0x0000000003b8bb10: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b8bb18: callq  0x0000000003b789e0  ; OopMap{rdx=Oop r8=Oop off=285}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1434)
                                                ;   {runtime_call}
  0x0000000003b8bb1d: jmpq   0x0000000003b8ba60
  0x0000000003b8bb22: nop
  0x0000000003b8bb23: nop
  0x0000000003b8bb24: mov    0x2a8(%r15),%rax
  0x0000000003b8bb2b: movabs $0x0,%r10
  0x0000000003b8bb35: mov    %r10,0x2a8(%r15)
  0x0000000003b8bb3c: movabs $0x0,%r10
  0x0000000003b8bb46: mov    %r10,0x2b0(%r15)
  0x0000000003b8bb4d: add    $0x30,%rsp
  0x0000000003b8bb51: pop    %rbp
  0x0000000003b8bb52: jmpq   0x000000000393ea20  ;   {runtime_call}
  0x0000000003b8bb57: hlt    
  0x0000000003b8bb58: hlt    
  0x0000000003b8bb59: hlt    
  0x0000000003b8bb5a: hlt    
  0x0000000003b8bb5b: hlt    
  0x0000000003b8bb5c: hlt    
  0x0000000003b8bb5d: hlt    
  0x0000000003b8bb5e: hlt    
  0x0000000003b8bb5f: hlt    
[Stub Code]
  0x0000000003b8bb60: nop                       ;   {no_reloc}
  0x0000000003b8bb61: nop
  0x0000000003b8bb62: nop
  0x0000000003b8bb63: nop
  0x0000000003b8bb64: nop
  0x0000000003b8bb65: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b8bb6f: jmpq   0x0000000003b8bb6f  ;   {runtime_call}
[Exception Handler]
  0x0000000003b8bb74: callq  0x000000000393f3a0  ;   {runtime_call}
  0x0000000003b8bb79: mov    %rsp,-0x28(%rsp)
  0x0000000003b8bb7e: sub    $0x80,%rsp
  0x0000000003b8bb85: mov    %rax,0x78(%rsp)
  0x0000000003b8bb8a: mov    %rcx,0x70(%rsp)
  0x0000000003b8bb8f: mov    %rdx,0x68(%rsp)
  0x0000000003b8bb94: mov    %rbx,0x60(%rsp)
  0x0000000003b8bb99: mov    %rbp,0x50(%rsp)
  0x0000000003b8bb9e: mov    %rsi,0x48(%rsp)
  0x0000000003b8bba3: mov    %rdi,0x40(%rsp)
  0x0000000003b8bba8: mov    %r8,0x38(%rsp)
  0x0000000003b8bbad: mov    %r9,0x30(%rsp)
  0x0000000003b8bbb2: mov    %r10,0x28(%rsp)
  0x0000000003b8bbb7: mov    %r11,0x20(%rsp)
  0x0000000003b8bbbc: mov    %r12,0x18(%rsp)
  0x0000000003b8bbc1: mov    %r13,0x10(%rsp)
  0x0000000003b8bbc6: mov    %r14,0x8(%rsp)
  0x0000000003b8bbcb: mov    %r15,(%rsp)
  0x0000000003b8bbcf: movabs $0x713a0770,%rcx   ;   {external_word}
  0x0000000003b8bbd9: movabs $0x3b8bb79,%rdx    ;   {internal_word}
  0x0000000003b8bbe3: mov    %rsp,%r8
  0x0000000003b8bbe6: and    $0xfffffffffffffff0,%rsp
  0x0000000003b8bbea: callq  0x0000000071056cc0  ;   {runtime_call}
  0x0000000003b8bbef: hlt    
[Deopt Handler Code]
  0x0000000003b8bbf0: movabs $0x3b8bbf0,%r10    ;   {section_word}
  0x0000000003b8bbfa: push   %r10
  0x0000000003b8bbfc: jmpq   0x0000000003917600  ;   {runtime_call}
  0x0000000003b8bc01: hlt    
  0x0000000003b8bc02: hlt    
  0x0000000003b8bc03: hlt    
  0x0000000003b8bc04: hlt    
  0x0000000003b8bc05: hlt    
  0x0000000003b8bc06: hlt    
  0x0000000003b8bc07: hlt    
<nmethod compile_id='21' compiler='C1' level='3' entry='0x0000000003b8ba00' size='1040' address='0x0000000003b8b890' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='514' iicount='514' stamp='0.130'/>
<writer thread='13832'/>
<task_queued compile_id='22' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='3968' iicount='3968' level='3' stamp='0.130' comment='tiered' hot_count='3968'/>
<writer thread='22872'/>
[Loaded sun.net.NetProperties$1 from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='13832'/>
<task_queued compile_id='23' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='6528' iicount='6528' stamp='0.130' comment='tiered' hot_count='6528'/>
<task_queued compile_id='24' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='3584' iicount='3584' level='3' stamp='0.130' comment='tiered' hot_count='3584'/>
<task_queued compile_id='25' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='7296' iicount='7296' stamp='0.130' comment='tiered' hot_count='7296'/>
<writer thread='22084'/>
Decoding compiled method 0x0000000003b8bcd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000265bce50} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;j
<writer thread='22872'/>
[Loaded java.util.Properties$LineReader from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22084'/>
ava/io/WinNTFileSystem&apos;
  # parm0:    r8        = char
  #           [sp+0x40]  (sp of caller)
  0x0000000003b8be20: mov    0x8(%rdx),%r10d
  0x0000000003b8be24: shl    $0x3,%r10
  0x0000000003b8be28: cmp    %rax,%r10
  0x0000000003b8be2b: jne    0x0000000003915f60  ;   {runtime_call}
  0x0000000003b8be31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000003b8be3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003b8be40: mov    %eax,-0x6000(%rsp)
  0x0000000003b8be47: push   %rbp
  0x0000000003b8be48: sub    $0x30,%rsp
  0x0000000003b8be4c: movabs $0x26643ef8,%rax   ;   {metadata(method data for {method} {0x00000000265bce50} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b8be56: mov    0xdc(%rax),%esi
  0x0000000003b8be5c: add    $0x8,%esi
  0x0000000003b8be5f: mov    %esi,0xdc(%rax)
  0x0000000003b8be65: movabs $0x265bce48,%rax   ;   {metadata({method} {0x00000000265bce50} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b8be6f: and    $0x1ff8,%esi
  0x0000000003b8be75: cmp    $0x0,%esi
  0x0000000003b8be78: je     0x0000000003b8bf20  ;*iload_1
                                                ; - java.io.WinNTFileSystem::isSlash@0 (line 53)

  0x0000000003b8be7e: cmp    $0x5c,%r8d
  0x0000000003b8be82: movabs $0x26643ef8,%rax   ;   {metadata(method data for {method} {0x00000000265bce50} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b8be8c: movabs $0x108,%rsi
  0x0000000003b8be96: je     0x0000000003b8bea6
  0x0000000003b8be9c: movabs $0x118,%rsi
  0x0000000003b8bea6: mov    (%rax,%rsi,1),%rdi
  0x0000000003b8beaa: lea    0x1(%rdi),%rdi
  0x0000000003b8beae: mov    %rdi,(%rax,%rsi,1)
  0x0000000003b8beb2: je     0x0000000003b8bef2  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)

  0x0000000003b8beb8: cmp    $0x2f,%r8d
  0x0000000003b8bebc: movabs $0x26643ef8,%rax   ;   {metadata(method data for {method} {0x00000000265bce50} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b8bec6: movabs $0x128,%rsi
  0x0000000003b8bed0: jne    0x0000000003b8bee0
  0x0000000003b8bed6: movabs $0x138,%rsi
  0x0000000003b8bee0: mov    (%rax,%rsi,1),%rdi
  0x0000000003b8bee4: lea    0x1(%rdi),%rdi
  0x0000000003b8bee8: mov    %rdi,(%rax,%rsi,1)
  0x0000000003b8beec: jne    0x0000000003b8bf0c  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)

  0x0000000003b8bef2: movabs $0x26643ef8,%rax   ;   {metadata(method data for {method} {0x00000000265bce50} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000003b8befc: incl   0x148(%rax)
  0x0000000003b8bf02: mov    $0x1,%eax
  0x0000000003b8bf07: jmpq   0x0000000003b8bf11  ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 53)

  0x0000000003b8bf0c: mov    $0x0,%eax          ;*ireturn
                                                ; - java.io.WinNTFileSystem::isSlash@17 (line 53)

  0x0000000003b8bf11: and    $0x1,%eax
  0x0000000003b8bf14: add    $0x30,%rsp
  0x0000000003b8bf18: pop    %rbp
  0x0000000003b8bf19: test   %eax,-0x215be1f(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b8bf1f: retq   
  0x0000000003b8bf20: mov    %rax,0x8(%rsp)
  0x0000000003b8bf25: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b8bf2d: callq  0x0000000003b789e0  ; OopMap{rdx=Oop off=274}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)
                                                ;   {runtime_call}
  0x0000000003b8bf32: jmpq   0x0000000003b8be7e
  0x0000000003b8bf37: nop
  0x0000000003b8bf38: nop
  0x0000000003b8bf39: mov    0x2a8(%r15),%rax
  0x0000000003b8bf40: movabs $0x0,%r10
  0x0000000003b8bf4a: mov    %r10,0x2a8(%r15)
  0x0000000003b8bf51: movabs $0x0,%r10
  0x0000000003b8bf5b: mov    %r10,0x2b0(%r15)
  0x0000000003b8bf62: add    $0x30,%rsp
  0x0000000003b8bf66: pop    %rbp
  0x0000000003b8bf67: jmpq   0x000000000393ea20  ;   {runtime_call}
  0x0000000003b8bf6c: hlt    
  0x0000000003b8bf6d: hlt    
  0x0000000003b8bf6e: hlt    
  0x0000000003b8bf6f: hlt    
  0x0000000003b8bf70: hlt    
  0x0000000003b8bf71: hlt    
  0x0000000003b8bf72: hlt    
  0x0000000003b8bf73: hlt    
  0x0000000003b8bf74: hlt    
  0x0000000003b8bf75: hlt    
  0x0000000003b8bf76: hlt    
  0x0000000003b8bf77: hlt    
  0x0000000003b8bf78: hlt    
  0x0000000003b8bf79: hlt    
  0x0000000003b8bf7a: hlt    
  0x0000000003b8bf7b: hlt    
  0x0000000003b8bf7c: hlt    
  0x0000000003b8bf7d: hlt    
  0x0000000003b8bf7e: hlt    
  0x0000000003b8bf7f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000003b8bf80: callq  0x000000000393f3a0  ;   {no_reloc}
  0x0000000003b8bf85: mov    %rsp,-0x28(%rsp)
  0x0000000003b8bf8a: sub    $0x80,%rsp
  0x0000000003b8bf91: mov    %rax,0x78(%rsp)
  0x0000000003b8bf96: mov    %rcx,0x70(%rsp)
  0x0000000003b8bf9b: mov    %rdx,0x68(%rsp)
  0x0000000003b8bfa0: mov    %rbx,0x60(%rsp)
  0x0000000003b8bfa5: mov    %rbp,0x50(%rsp)
  0x0000000003b8bfaa: mov    %rsi,0x48(%rsp)
  0x0000000003b8bfaf: mov    %rdi,0x40(%rsp)
  0x0000000003b8bfb4: mov    %r8,0x38(%rsp)
  0x0000000003b8bfb9: mov    %r9,0x30(%rsp)
  0x0000000003b8bfbe: mov    %r10,0x28(%rsp)
  0x0000000003b8bfc3: mov    %r11,0x20(%rsp)
  0x0000000003b8bfc8: mov    %r12,0x18(%rsp)
  0x0000000003b8bfcd: mov    %r13,0x10(%rsp)
  0x0000000003b8bfd2: mov    %r14,0x8(%rsp)
  0x0000000003b8bfd7: mov    %r15,(%rsp)
  0x0000000003b8bfdb: movabs $0x713a0770,%rcx   ;   {external_word}
  0x0000000003b8bfe5: movabs $0x3b8bf85,%rdx    ;   {internal_word}
  0x0000000003b8bfef: mov    %rsp,%r8
  0x0000000003b8bff2: and    $0xfffffffffffffff0,%rsp
  0x0000000003b8bff6: callq  0x0000000071056cc0  ;   {runtime_call}
  0x0000000003b8bffb: hlt    
[Deopt Handler Code]
  0x0000000003b8bffc: movabs $0x3b8bffc,%r10    ;   {section_word}
  0x0000000003b8c006: push   %r10
  0x0000000003b8c008: jmpq   0x0000000003917600  ;   {runtime_call}
  0x0000000003b8c00d: hlt    
  0x0000000003b8c00e: hlt    
  0x0000000003b8c00f: hlt    
<nmethod compile_id='22' compiler='C1' level='3' entry='0x0000000003b8be20' size='1024' address='0x0000000003b8bcd0' relocation_offset='288' insts_offset='336' stub_offset='688' scopes_data_offset='840' scopes_pcs_offset='888' dependencies_offset='1016' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='4140' iicount='4140' stamp='0.132'/>
<writer thread='13832'/>
<task_queued compile_id='26' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='896' iicount='896' level='3' stamp='0.132' comment='tiered' hot_count='896'/>
<task_queued compile_id='27' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4608' iicount='4608' level='1' stamp='0.132' comment='tiered' hot_count='4608'/>
[Loaded cc.nimbusk.learningjvm.hsdis.Bar from file:/E:/Develop/ideaworkspace/git/learningjvm/target/classes/]
<writer thread='5512'/>
Decoding compiled method 0x0000000003b8c110:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000026440488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/
<writer thread='13832'/>
[Loaded sun.launcher.LauncherHelper$FXHelper from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='5512'/>
Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x0000000003b8c260: mov    0x8(%rdx),%r10d
  0x0000000003b8c264: shl    $0x3,%r10
  0x0000000003b8c268: cmp    %rax,%r10
  0x0000000003b8c26b: jne    0x0000000003915f60  ;   {runtime_call}
  0x0000000003b8c271: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000003b8c27c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003b8c280: mov    %eax,-0x6000(%rsp)
  0x0000000003b8c287: push   %rbp
  0x0000000003b8c288: sub    $0x50,%rsp
  0x0000000003b8c28c: mov    %rdx,%rcx          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x0000000003b8c28f: mov    %rdx,0x40(%rsp)
  0x0000000003b8c294: callq  0x0000000003b76ca0  ; OopMap{[64]=Oop off=57}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x0000000003b8c299: add    $0x50,%rsp
  0x0000000003b8c29d: pop    %rbp
  0x0000000003b8c29e: test   %eax,-0x215c1a4(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b8c2a4: retq   
  0x0000000003b8c2a5: nop
  0x0000000003b8c2a6: nop
  0x0000000003b8c2a7: mov    0x2a8(%r15),%rax
  0x0000000003b8c2ae: movabs $0x0,%r10
  0x0000000003b8c2b8: mov    %r10,0x2a8(%r15)
  0x0000000003b8c2bf: movabs $0x0,%r10
  0x0000000003b8c2c9: mov    %r10,0x2b0(%r15)
  0x0000000003b8c2d0: add    $0x50,%rsp
  0x0000000003b8c2d4: pop    %rbp
  0x0000000003b8c2d5: jmpq   0x000000000393ea20  ;   {runtime_call}
  0x0000000003b8c2da: hlt    
  0x0000000003b8c2db: hlt    
  0x0000000003b8c2dc: hlt    
  0x0000000003b8c2dd: hlt    
  0x0000000003b8c2de: hlt    
  0x0000000003b8c2df: hlt    
[Exception Handler]
[Stub Code]
  0x0000000003b8c2e0: callq  0x000000000393f3a0  ;   {no_reloc}
  0x0000000003b8c2e5: mov    %rsp,-0x28(%rsp)
  0x0000000003b8c2ea: sub    $0x80,
<writer thread='22872'/>
[Loaded java.net.URI from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='5512'/>
%rsp
  0x0000000003b8c2f1: mov    %rax,0x78(%rsp)
  0x0000000003b8c2f6: mov    %rcx,0x70(%rsp)
  0x0000000003b8c2fb: mov    %rdx,0x68(%rsp)
  0x0000000003b8c300: mov    %rbx,0x60(%rsp)
  0x0000000003b8c305: mov    %rbp,0x50(%rsp)
  0x0000000003b8c30a: mov    %rsi,0x48(%rsp)
  0x0000000003b8c30f: mov    %rdi,0x40(%rsp)
  0x0000000003b8c314: mov    %r8,0x38(%rsp)
  0x0000000003b8c319: mov    %r9,0x30(%rsp)
  0x0000000003b8c31e: mov    %r10,0x28(%rsp)
  0x0000000003b8c323: mov    %r11,0x20(%rsp)
  0x0000000003b8c328: mov    %r12,0x18(%rsp)
  0x0000000003b8c32d: mov    %r13,0x10(%rsp)
  0x0000000003b8c332: mov    %r14,0x8(%rsp)
  0x0000000003b8c337: mov    %r15,(%rsp)
  0x0000000003b8c33b: movabs $0x713a0770,%rcx   ;   {external_word}
  0x0000000003b8c345: movabs $0x3b8c2e5,%rdx    ;   {internal_word}
  0x0000000003b8c34f: mov    %rsp,%r8
  0x0000000003b8c352: and    $0xfffffffffffffff0,%rsp
  0x0000000003b8c356: callq  0x0000000071056cc0  ;   {runtime_call}
  0x0000000003b8c35b: hlt    
[Deopt Handler Code]
  0x0000000003b8c35c: movabs $0x3b8c35c,%r10    ;   {section_word}
  0x0000000003b8c366: push   %r10
  0x0000000003b8c368: jmpq   0x0000000003917600  ;   {runtime_call}
  0x0000000003b8c36d: hlt    
  0x0000000003b8c36e: hlt    
  0x0000000003b8c36f: hlt    
<nmethod compile_id='27' compiler='C1' level='1' entry='0x0000000003b8c260' size='712' address='0x0000000003b8c110' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='640' dependencies_offset='704' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4640' iicount='4640' stamp='0.133'/>
<make_not_entrant thread='5512' compile_id='6' compiler='C1' level='3' stamp='0.133'/>
<writer thread='23180'/>
Decoding compiled method 0x0000000003b8c410:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000264b0d70} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuffer&apos;
  # parm0:    r8        = char
  #           [sp+0x110]  (sp of caller)
  0x0000000003b8c5c0: mov    0x8(%rdx),%r10d
  0x0000000003b8c5c4: shl    $0x3,%r10
  0x0000000003b8c5c8: cmp    %rax,%r10
  0x0000000003b8c5cb: jne    0x0000000003915f60  ;   {runtime_call}
  0x0000000003b8c5d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000003b8c5dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003b8c5e0: mov    %eax,-0x6000(%rsp)
  0x0000000003b8c5e7: push   %rbp
  0x0000000003b8c5e8: sub    $0x100,%rsp
  0x0000000003b8c5ef: lea    0xe0(%rsp),%rsi
  0x0000000003b8c5f7: mov    %rdx,0x8(%rsi)
  0x0000000003b8c5fb: mov    (%rdx),%rax
  0x0000000003b8c5fe: mov    %rax,%rdi
  0x0000000003b8c601: and    $0x7,%rdi
  0x0000000003b8c605: cmp    $0x5,%rdi
  0x0000000003b8c609: jne    0x0000000003b8c690
  0x0000000003b8c60f: mov    0x8(%rdx),%edi
  0x0000000003b8c612: shl    $0x3,%rdi
  0x0000000003b8c616: mov    0xa8(%rdi),%rdi
  0x0000000003b8c61d: or     %r15,%rdi
  0x0000000003b8c620: xor    %rax,%rdi
  0x0000000003b8c623: and    $0xffffffffffffff87,%rdi
  0x0000000003b8c627: je     0x0000000003b8c6b8
  0x0000000003b8c62d: test   $0x7,%rdi
  0x0000000003b8c634: jne    0x0000000003b8c67d
  0x0000000003b8c636: test   $0x300,%rdi
  0x0000000003b8c63d: jne    0x0000000003b8c65c
  0x0000000003b8c63f: and    $0x37f,%rax
  0x0000000003b8c646: mov    %rax,%rdi
  0x0000000003b8c649: or     %r15,%rdi
  0x0000000003b8c64c: lock cmpxchg %rdi,(%rdx)
  0x0000000003b8c651: jne    0x0000000003b8cad5
  0x0000000003b8c657: jmpq   0x0000000003b8c6b8
  0x0000000003b8c65c: mov    0x8(%rdx),%edi
  0x0000000003b8c65f: shl    $0x3,%rdi
  0x0000000003b8c663: mov    0xa8(%rdi),%rdi
  0x0000000003b8c66a: or     %r15,%rdi
  0x0000000003b8c66d: lock cmpxchg %rdi,(%rdx)
  0x0000000003b8c672: jne    0x0000000003b8cad5
  0x0000000003b8c678: jmpq   0x0000000003b8c6b8
  0x0000000003b8c67d: mov    0x8(%rdx),%edi
  0x0000000003b8c680: shl    $0x3,%rdi
  0x0000000003b8c684: mov    0xa8(%rdi),%rdi
  0x0000000003b8c68b: lock cmpxchg %rdi,(%rdx)
  0x0000000003b8c690: mov    (%rdx),%rax
  0x0000000003b8c693: or     $0x1,%rax
  0x0000000003b8c697: mov    %rax,(%rsi)
  0x0000000003b8c69a: lock cmpxchg %rsi,(%rdx)
  0x0000000003b8c69f: je     0x0000000003b8c6b8
  0x0000000003b8c6a5: sub    %rsp,%rax
  0x0000000003b8c6a8: and    $0xfffffffffffff007,%rax
  0x0000000003b8c6af: mov    %rax,(%rsi)
  0x0000000003b8c6b2: jne    0x0000000003b8cad5
  0x0000000003b8c6b8: movabs $0x26644078,%rsi   ;   {metadata(method data for {method} {0x00000000264b0d70} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000003b8c6c2: mov    0xdc(%rsi),%edi
  0x0000000003b8c6c8: add    $0x8,%edi
  0x0000000003b8c6cb: mov    %edi,0xdc(%rsi)
  0x0000000003b8c6d1: movabs $0x264b0d68,%rsi   ;   {metadata({method} {0x00000000264b0d70} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000003b8c6db: and    $0x1ff8,%edi
  0x0000000003b8c6e1: cmp    $0x0,%edi
  0x0000000003b8c6e4: je     0x0000000003b8cae8  ;*aload_0
                                                ; - java.lang.StringBuffer::append@0 (line 380)

  0x0000000003b8c6ea: movl   $0x0,0x14(%rdx)
  0x0000000003b8c6f1: mov    %rdx,%rsi
  0x0000000003b8c6f4: shr    $0x9,%rsi
  0x0000000003b8c6f8: movabs $0xfe86000,%rdi
  0x0000000003b8c702: movb   $0x0,(%rsi,%rdi,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)

  0x0000000003b8c706: mov    %rdx,%rsi
  0x0000000003b8c709: movabs $0x26644078,%rdi   ;   {metadata(method data for {method} {0x00000000264b0d70} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000003b8c713: addq   $0x1,0x108(%rdi)
  0x0000000003b8c71b: movabs $0x26643c88,%rsi   ;   {metadata(method data for {method} {0x00000000264b5b50} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003b8c725: mov    0xdc(%rsi),%edi
  0x0000000003b8c72b: add    $0x8,%edi
  0x0000000003b8c72e: mov    %edi,0xdc(%rsi)
  0x0000000003b8c734: movabs $0x264b5b48,%rsi   ;   {metadata({method} {0x00000000264b5b50} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003b8c73e: and    $0x7ffff8,%edi
  0x0000000003b8c744: cmp    $0x0,%edi
  0x0000000003b8c747: je     0x0000000003b8caff
  0x0000000003b8c74d: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000003b8c750: inc    %esi
  0x0000000003b8c752: mov    %rdx,%rdi
  0x0000000003b8c755: movabs $0x26643c88,%rbx   ;   {metadata(method data for {method} {0x00000000264b5b50} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003b8c75f: addq   $0x1,0x108(%rbx)
  0x0000000003b8c767: movabs $0x26643af8,%rdi   ;   {metadata(method data for {method} {0x00000000264b4a18} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003b8c771: mov    0xdc(%rdi),%ebx
  0x0000000003b8c777: add    $0x8,%ebx
  0x0000000003b8c77a: mov    %ebx,0xdc(%rdi)
  0x0000000003b8c780: movabs $0x264b4a10,%rdi   ;   {metadata({method} {0x00000000264b4a18} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003b8c78a: and    $0x7ffff8,%ebx
  0x0000000003b8c790: cmp    $0x0,%ebx
  0x0000000003b8c793: je     0x0000000003b8cb16
  0x0000000003b8c799: mov    0x10(%rdx),%edi
  0x0000000003b8c79c: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000003b8c7a0: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; implicit exception: dispatches to 0x0000000003b8cb2d
  0x0000000003b8c7a3: mov    %rsi,%rax
  0x0000000003b8c7a6: sub    %ebx,%eax
  0x0000000003b8c7a8: cmp    $0x0,%eax
  0x0000000003b8c7ab: movabs $0x26643af8,%rax   ;   {metadata(method data for {method} {0x00000000264b4a18} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003b8c7b5: movabs $0x108,%rcx
  0x0000000003b8c7bf: jle    0x0000000003b8c7cf
  0x0000000003b8c7c5: movabs $0x118,%rcx
  0x0000000003b8c7cf: mov    (%rax,%rcx,1),%r9
  0x0000000003b8c7d3: lea    0x1(%r9),%r9
  0x0000000003b8c7d7: mov    %r9,(%rax,%rcx,1)
  0x0000000003b8c7db: jg     0x0000000003b8c7ee  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000003b8c7e1: mov    %r8d,0xc4(%rsp)
  0x0000000003b8c7e9: jmpq   0x0000000003b8ca63  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000003b8c7ee: mov    %ebx,0xc0(%rsp)
  0x0000000003b8c7f5: mov    %rdi,0xc8(%rsp)
  0x0000000003b8c7fd: mov    %r8d,0xc4(%rsp)
  0x0000000003b8c805: mov    %rdx,%rax
  0x0000000003b8c808: movabs $0x26643af8,%rcx   ;   {metadata(method data for {method} {0x00000000264b4a18} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003b8c812: addq   $0x1,0x128(%rcx)
  0x0000000003b8c81a: mov    %rsi,%r8
  0x0000000003b8c81d: mov    %rdx,%rsi
  0x0000000003b8c820: mov    %rsi,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000003b8c823: mov    %rsi,0xd0(%rsp)
  0x0000000003b8c82b: nop
  0x0000000003b8c82c: nop
  0x0000000003b8c82d: nop
  0x0000000003b8c82e: nop
  0x0000000003b8c82f: callq  0x00000000039161a0  ; OopMap{[208]=Oop [200]=Oop [232]=Oop off=628}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {optimized virtual_call}
  0x0000000003b8c834: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000003b8c837: movabs $0x26643af8,%rbx   ;   {metadata(method data for {method} {0x00000000264b4a18} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003b8c841: addq   $0x1,0x138(%rbx)
  0x0000000003b8c849: movabs $0x266bd6b0,%rbx   ;   {metadata(method data for {method} {0x0000000026559828} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000003b8c853: mov    0xdc(%rbx),%edx
  0x0000000003b8c859: add    $0x8,%edx
  0x0000000003b8c85c: mov    %edx,0xdc(%rbx)
  0x0000000003b8c862: movabs $0x26559820,%rbx   ;   {metadata({method} {0x0000000026559828} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000003b8c86c: and    $0x7ffff8,%edx
  0x0000000003b8c872: cmp    $0x0,%edx
  0x0000000003b8c875: je     0x0000000003b8cb32
  0x0000000003b8c87b: mov    %r8,%rbx
  0x0000000003b8c87e: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000003b8c888: movslq %ebx,%rbx
  0x0000000003b8c88b: mov    %rbx,%rdi
  0x0000000003b8c88e: cmp    $0xffffff,%rbx
  0x0000000003b8c895: ja     0x0000000003b8cb49
  0x0000000003b8c89b: movabs $0x17,%rsi
  0x0000000003b8c8a5: lea    (%rsi,%rbx,2),%rsi
  0x0000000003b8c8a9: and    $0xfffffffffffffff8,%rsi
  0x0000000003b8c8ad: mov    0x60(%r15),%rax
  0x0000000003b8c8b1: lea    (%rax,%rsi,1),%rsi
  0x0000000003b8c8b5: cmp    0x70(%r15),%rsi
  0x0000000003b8c8b9: ja     0x0000000003b8cb49
  0x0000000003b8c8bf: mov    %rsi,0x60(%r15)
  0x0000000003b8c8c3: sub    %rax,%rsi
  0x0000000003b8c8c6: movq   $0x1,(%rax)
  0x0000000003b8c8cd: mov    %rdx,%rcx
  0x0000000003b8c8d0: shr    $0x3,%rcx
  0x0000000003b8c8d4: mov    %ecx,0x8(%rax)
  0x0000000003b8c8d7: mov    %ebx,0xc(%rax)
  0x0000000003b8c8da: sub    $0x10,%rsi
  0x0000000003b8c8de: je     0x0000000003b8c8f5
  0x0000000003b8c8e4: xor    %rbx,%rbx
  0x0000000003b8c8e7: shr    $0x3,%rsi
  0x0000000003b8c8eb: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000003b8c8f0: dec    %rsi
  0x0000000003b8c8f3: jne    0x0000000003b8c8eb  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000003b8c8f5: movabs $0x266bd6b0,%rdx   ;   {metadata(method data for {method} {0x0000000026559828} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000003b8c8ff: addq   $0x1,0x108(%rdx)
  0x0000000003b8c907: movabs $0x2662ffd0,%rdx   ;   {metadata(method data for {method} {0x00000000265352d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000003b8c911: mov    0xdc(%rdx),%r9d
  0x0000000003b8c918: add    $0x8,%r9d
  0x0000000003b8c91c: mov    %r9d,0xdc(%rdx)
  0x0000000003b8c923: movabs $0x265352c8,%rdx   ;   {metadata({method} {0x00000000265352d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000003b8c92d: and    $0x7ffff8,%r9d
  0x0000000003b8c934: cmp    $0x0,%r9d
  0x0000000003b8c938: je     0x0000000003b8cb53
  0x0000000003b8c93e: mov    0xc0(%rsp),%ebx
  0x0000000003b8c945: cmp    %r8d,%ebx
  0x0000000003b8c948: movabs $0x2662ffd0,%rdx   ;   {metadata(method data for {method} {0x00000000265352d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000003b8c952: movabs $0x108,%r9
  0x0000000003b8c95c: jg     0x0000000003b8c96c
  0x0000000003b8c962: movabs $0x118,%r9
  0x0000000003b8c96c: mov    (%rdx,%r9,1),%rdi
  0x0000000003b8c970: lea    0x1(%rdi),%rdi
  0x0000000003b8c974: mov    %rdi,(%rdx,%r9,1)
  0x0000000003b8c978: jg     0x0000000003b8c993  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000003b8c97e: movabs $0x2662ffd0,%rdx   ;   {metadata(method data for {method} {0x00000000265352d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000003b8c988: incl   0x128(%rdx)
  0x0000000003b8c98e: jmpq   0x0000000003b8c996  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000003b8c993: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000003b8c996: mov    0xc8(%rsp),%rdi
  0x0000000003b8c99e: movabs $0x266bd6b0,%rdx   ;   {metadata(method data for {method} {0x0000000026559828} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000003b8c9a8: addq   $0x1,0x118(%rdx)
  0x0000000003b8c9b0: mov    %rdi,%rdx
  0x0000000003b8c9b3: mov    $0x0,%r8d
  0x0000000003b8c9b9: mov    %rax,%r9
  0x0000000003b8c9bc: mov    $0x0,%edi
  0x0000000003b8c9c1: mov    %rbx,%rsi
  0x0000000003b8c9c4: mov    %rax,0xd8(%rsp)
  0x0000000003b8c9cc: lea    (%r8,%rsi,1),%rcx
  0x0000000003b8c9d0: cmp    0xc(%rdx),%ecx
  0x0000000003b8c9d3: ja     0x0000000003b8cb6a
  0x0000000003b8c9d9: lea    (%rdi,%rsi,1),%rcx
  0x0000000003b8c9dd: cmp    0xc(%r9),%ecx
  0x0000000003b8c9e1: ja     0x0000000003b8cb6a
  0x0000000003b8c9e7: test   %esi,%esi
  0x0000000003b8c9e9: jl     0x0000000003b8cb6a
  0x0000000003b8c9ef: je     0x0000000003b8ca33
  0x0000000003b8c9f5: movslq %r8d,%r8
  0x0000000003b8c9f8: movslq %edi,%rdi
  0x0000000003b8c9fb: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000003b8ca00: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000003b8ca05: mov    %rsi,%r8
  0x0000000003b8ca08: sub    $0x20,%rsp
  0x0000000003b8ca0c: test   $0xf,%esp
  0x0000000003b8ca12: je     0x0000000003b8ca2a
  0x0000000003b8ca18: sub    $0x8,%rsp
  0x0000000003b8ca1c: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000003b8ca21: add    $0x8,%rsp
  0x0000000003b8ca25: jmpq   0x0000000003b8ca2f
  0x0000000003b8ca2a: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000003b8ca2f: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000003b8ca33: mov    0xd8(%rsp),%rax
  0x0000000003b8ca3b: mov    0xd0(%rsp),%rdx
  0x0000000003b8ca43: mov    %rax,%r10
  0x0000000003b8ca46: shr    $0x3,%r10
  0x0000000003b8ca4a: mov    %r10d,0x10(%rdx)
  0x0000000003b8ca4e: mov    %rdx,%rax
  0x0000000003b8ca51: shr    $0x9,%rax
  0x0000000003b8ca55: movabs $0xfe86000,%rsi
  0x0000000003b8ca5f: movb   $0x0,(%rax,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000003b8ca63: mov    0xc4(%rsp),%r8d
  0x0000000003b8ca6b: mov    0x10(%rdx),%eax
  0x0000000003b8ca6e: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000003b8ca72: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000003b8ca75: mov    %rsi,%rdi
  0x0000000003b8ca78: inc    %edi
  0x0000000003b8ca7a: mov    %edi,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000003b8ca7d: movslq %esi,%rdi
  0x0000000003b8ca80: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x0000000003b8cb79
  0x0000000003b8ca83: jae    0x0000000003b8cb83
  0x0000000003b8ca89: mov    %r8w,0x10(%rax,%rdi,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000003b8ca8f: lea    0xe0(%rsp),%rax
  0x0000000003b8ca97: mov    0x8(%rax),%rdi
  0x0000000003b8ca9b: mov    (%rdi),%rsi
  0x0000000003b8ca9e: and    $0x7,%rsi
  0x0000000003b8caa2: cmp    $0x5,%rsi
  0x0000000003b8caa6: je     0x0000000003b8cac3
  0x0000000003b8caac: mov    (%rax),%rsi
  0x0000000003b8caaf: test   %rsi,%rsi
  0x0000000003b8cab2: je     0x0000000003b8cac3
  0x0000000003b8cab8: lock cmpxchg %rsi,(%rdi)
  0x0000000003b8cabd: jne    0x0000000003b8cb8c  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)

  0x0000000003b8cac3: mov    %rdx,%rax
  0x0000000003b8cac6: add    $0x100,%rsp
  0x0000000003b8cacd: pop    %rbp
  0x0000000003b8cace: test   %eax,-0x215c9d4(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b8cad4: retq   
  0x0000000003b8cad5: mov    %rdx,0x8(%rsp)
  0x0000000003b8cada: mov    %rsi,(%rsp)
  0x0000000003b8cade: callq  0x0000000003b75860  ; OopMap{rdx=Oop [232]=Oop off=1315}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ;   {runtime_call}
  0x0000000003b8cae3: jmpq   0x0000000003b8c6b8
  0x0000000003b8cae8: mov    %rsi,0x8(%rsp)
  0x0000000003b8caed: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b8caf5: callq  0x0000000003b789e0  ; OopMap{rdx=Oop [232]=Oop off=1338}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ;   {runtime_call}
  0x0000000003b8cafa: jmpq   0x0000000003b8c6ea
  0x0000000003b8caff: mov    %rsi,0x8(%rsp)
  0x0000000003b8cb04: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b8cb0c: callq  0x0000000003b789e0  ; OopMap{rdx=Oop [232]=Oop off=1361}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000003b8cb11: jmpq   0x0000000003b8c74d
  0x0000000003b8cb16: mov    %rdi,0x8(%rsp)
  0x0000000003b8cb1b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b8cb23: callq  0x0000000003b789e0  ; OopMap{rdx=Oop [232]=Oop off=1384}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000003b8cb28: jmpq   0x0000000003b8c799
  0x0000000003b8cb2d: callq  0x000000000393f540  ; OopMap{rdx=Oop rdi=Oop [232]=Oop off=1394}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000003b8cb32: mov    %rbx,0x8(%rsp)
  0x0000000003b8cb37: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b8cb3f: callq  0x0000000003b789e0  ; OopMap{[208]=Oop [200]=Oop [232]=Oop off=1412}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000003b8cb44: jmpq   0x0000000003b8c87b
  0x0000000003b8cb49: callq  0x00000000039402c0  ; OopMap{[208]=Oop [200]=Oop [232]=Oop off=1422}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000003b8cb4e: jmpq   0x0000000003b8c8f5
  0x0000000003b8cb53: mov    %rdx,0x8(%rsp)
  0x0000000003b8cb58: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b8cb60: callq  0x0000000003b789e0  ; OopMap{[208]=Oop [200]=Oop rax=Oop [232]=Oop off=1445}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000003b8cb65: jmpq   0x0000000003b8c93e
  0x0000000003b8cb6a: nop
  0x0000000003b8cb6b: nop
  0x0000000003b8cb6c: nop
  0x0000000003b8cb6d: nop
  0x0000000003b8cb6e: nop
  0x0000000003b8cb6f: callq  0x0000000003916620  ; OopMap{[208]=Oop [216]=Oop [232]=Oop off=1460}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {static_call}
  0x0000000003b8cb74: jmpq   0x0000000003b8ca33
  0x0000000003b8cb79: callq  0x000000000393f540  ; OopMap{rdx=Oop rax=Oop [232]=Oop off=1470}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000003b8cb7e: callq  0x000000000393f540  ; OopMap{rdx=Oop rax=Oop [232]=Oop off=1475}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000003b8cb83: mov    %rsi,(%rsp)
  0x0000000003b8cb87: callq  0x000000000393fc00  ; OopMap{rdx=Oop rax=Oop [232]=Oop off=1484}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000003b8cb8c: lea    0xe0(%rsp),%rax
  0x0000000003b8cb94: mov    %rax,(%rsp)
  0x0000000003b8cb98: callq  0x0000000003b76f20  ;   {runtime_call}
  0x0000000003b8cb9d: jmpq   0x0000000003b8cac3
  0x0000000003b8cba2: nop
  0x0000000003b8cba3: nop
  0x0000000003b8cba4: mov    0x2a8(%r15),%rax
  0x0000000003b8cbab: movabs $0x0,%r10
  0x0000000003b8cbb5: mov    %r10,0x2a8(%r15)
  0x0000000003b8cbbc: movabs $0x0,%r10
  0x0000000003b8cbc6: mov    %r10,0x2b0(%r15)
  0x0000000003b8cbcd: mov    %rax,%rbx
  0x0000000003b8cbd0: lea    0xe0(%rsp),%rax
  0x0000000003b8cbd8: mov    0x8(%rax),%rsi
  0x0000000003b8cbdc: mov    (%rsi),%rdi
  0x0000000003b8cbdf: and    $0x7,%rdi
  0x0000000003b8cbe3: cmp    $0x5,%rdi
  0x0000000003b8cbe7: je     0x0000000003b8cc04
  0x0000000003b8cbed: mov    (%rax),%rdi
  0x0000000003b8cbf0: test   %rdi,%rdi
  0x0000000003b8cbf3: je     0x0000000003b8cc04
  0x0000000003b8cbf9: lock cmpxchg %rdi,(%rsi)
  0x0000000003b8cbfe: jne    0x0000000003b8cc14
  0x0000000003b8cc04: mov    %rbx,%rax
  0x0000000003b8cc07: add    $0x100,%rsp
  0x0000000003b8cc0e: pop    %rbp
  0x0000000003b8cc0f: jmpq   0x000000000393ea20  ;   {runtime_call}
  0x0000000003b8cc14: lea    0xe0(%rsp),%rax
  0x0000000003b8cc1c: mov    %rax,(%rsp)
  0x0000000003b8cc20: callq  0x0000000003b76f20  ;   {runtime_call}
  0x0000000003b8cc25: jmp    0x0000000003b8cc04
  0x0000000003b8cc27: hlt    
  0x0000000003b8cc28: hlt    
  0x0000000003b8cc29: hlt    
  0x0000000003b8cc2a: hlt    
  0x0000000003b8cc2b: hlt    
  0x0000000003b8cc2c: hlt    
  0x0000000003b8cc2d: hlt    
  0x0000000003b8cc2e: hlt    
  0x0000000003b8cc2f: hlt    
  0x0000000003b8cc30: hlt    
  0x0000000003b8cc31: hlt    
  0x0000000003b8cc32: hlt    
  0x0000000003b8cc33: hlt    
  0x0000000003b8cc34: hlt    
  0x0000000003b8cc35: hlt    
  0x0000000003b8cc36: hlt    
  0x0000000003b8cc37: hlt    
  0x0000000003b8cc38: hlt    
  0x0000000003b8cc39: hlt    
  0x0000000003b8cc3a: hlt    
  0x0000000003b8cc3b: hlt    
  0x0000000003b8cc3c: hlt    
  0x0000000003b8cc3d: hlt    
  0x0000000003b8cc3e: hlt    
  0x0000000003b8cc3f: hlt    
[Stub Code]
  0x0000000003b8cc40: nop                       ;   {no_reloc}
  0x0000000003b8cc41: nop
  0x0000000003b8cc42: nop
  0x0000000003b8cc43: nop
  0x0000000003b8cc44: nop
  0x0000000003b8cc45: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b8cc4f: jmpq   0x0000000003b8cc4f  ;   {runtime_call}
  0x0000000003b8cc54: nop
  0x0000000003b8cc55: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b8cc5f: jmpq   0x0000000003b8cc5f  ;   {runtime_call}
[Exception Handler]
  0x0000000003b8cc64: callq  0x000000000393f3a0  ;   {runtime_call}
  0x0000000003b8cc69: mov    %rsp,-0x28(%rsp)
  0x0000000003b8cc6e: sub    $0x80,%rsp
  0x0000000003b8cc75: mov    %rax,0x78(%rsp)
  0x0000000003b8cc7a: mov    %rcx,0x70(%rsp)
  0x0000000003b8cc7f: mov    %rdx,0x68(%rsp)
  0x0000000003b8cc84: mov    %rbx,0x60(%rsp)
  0x0000000003b8cc89: mov    %rbp,0x50(%rsp)
  0x0000000003b8cc8e: mov    %rsi,0x48(%rsp)
  0x0000000003b8cc93: mov    %rdi,0x40(%rsp)
  0x0000000003b8cc98: mov    %r8,0x38(%rsp)
  0x0000000003b8cc9d: mov    %r9,0x30(%rsp)
  0x0000000003b8cca2: mov    %r10,0x28(%rsp)
  0x0000000003b8cca7: mov    %r11,0x20(%rsp)
  0x0000000003b8ccac: mov    %r12,0x18(%rsp)
  0x0000000003b8ccb1: mov    %r13,0x10(%rsp)
  0x0000000003b8ccb6: mov    %r14,0x8(%rsp)
  0x0000000003b8ccbb: mov    %r15,(%rsp)
  0x0000000003b8ccbf: movabs $0x713a0770,%rcx   ;   {external_word}
  0x0000000003b8ccc9: movabs $0x3b8cc69,%rdx    ;   {internal_word}
  0x0000000003b8ccd3: mov    %rsp,%r8
  0x0000000003b8ccd6: and    $0xfffffffffffffff0,%rsp
  0x0000000003b8ccda: callq  0x0000000071056cc0  ;   {runtime_call}
  0x0000000003b8ccdf: hlt    
[Deopt Handler Code]
  0x0000000003b8cce0: movabs $0x3b8cce0,%r10    ;   {section_word}
  0x0000000003b8ccea: push   %r10
  0x0000000003b8ccec: jmpq   0x0000000003917600  ;   {runtime_call}
  0x0000000003b8ccf1: hlt    
  0x0000000003b8ccf2: hlt    
  0x0000000003b8ccf3: hlt    
  0x0000000003b8ccf4: hlt    
  0x0000000003b8ccf5: hlt    
  0x0000000003b8ccf6: hlt    
  0x0000000003b8ccf7: hlt    
<nmethod compile_id='24' compiler='C1' level='3' entry='0x0000000003b8c5c0' size='3272' address='0x0000000003b8c410' relocation_offset='288' insts_offset='432' stub_offset='2096' scopes_data_offset='2320' scopes_pcs_offset='2672' dependencies_offset='3232' nul_chk_table_offset='3240' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='3721' iicount='3721' stamp='0.139'/>
<writer thread='13832'/>
[Loaded java.lang.Class$MethodArray from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
[Loaded java.lang.Void from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22872'/>
[Loaded java.net.URI$Parser from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22084'/>
Decoding compiled method 0x0000000003b8d7d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000026559ff0} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/A
<writer thread='13832'/>
[Loaded java.lang.Shutdown from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22084'/>
rrays&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    r8        = int
  # parm2:    r9        = int
  #           [sp+0xb0]  (sp of caller)
  0x0000000003b8d9e0: mov    %eax,-0x6000(%rsp)
  0x0000000003b8d9e7: push   %rbp
  0x0000000003b8d9e8: sub    $0xa0,%rsp
  0x0000000003b8d9ef: mov    %rdx,%r11
  0x0000000003b8d9f2: movabs $0x2666b708,%rbx   ;   {metadata(method data for {method} {0x0000000026559ff0} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000003b8d9fc: mov    0xdc(%rbx),%edx
  0x0000000003b8da02: add    $0x8,%edx
  0x0000000003b8da05: mov    %edx,0xdc(%rbx)
  0x0000000003b8da0b: movabs $0x26559fe8,%rbx   ;   {metadata({method} {0x0000000026559ff0} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000003b8da15: and    $0x1ff8,%edx
  0x0000000003b8da1b: cmp    $0x0,%edx
  0x0000000003b8da1e: je     0x0000000003b8e289  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x0000000003b8da24: mov    %r9,%r13
  0x0000000003b8da27: sub    %r8d,%r13d
  0x0000000003b8da2a: cmp    $0x0,%r13d
  0x0000000003b8da2e: movabs $0x2666b708,%rbx   ;   {metadata(method data for {method} {0x0000000026559ff0} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000003b8da38: movabs $0x108,%rdx
  0x0000000003b8da42: jge    0x0000000003b8da52
  0x0000000003b8da48: movabs $0x118,%rdx
  0x0000000003b8da52: mov    (%rbx,%rdx,1),%rsi
  0x0000000003b8da56: lea    0x1(%rsi),%rsi
  0x0000000003b8da5a: mov    %rsi,(%rbx,%rdx,1)
  0x0000000003b8da5e: jl     0x0000000003b8dc26  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x0000000003b8da64: mov    %r13,%rbx
  0x0000000003b8da67: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000003b8da71: movslq %ebx,%rbx
  0x0000000003b8da74: mov    %rbx,%rdi
  0x0000000003b8da77: cmp    $0xffffff,%rbx
  0x0000000003b8da7e: ja     0x0000000003b8e2a0
  0x0000000003b8da84: movabs $0x17,%rsi
  0x0000000003b8da8e: lea    (%rsi,%rbx,2),%rsi
  0x0000000003b8da92: and    $0xfffffffffffffff8,%rsi
  0x0000000003b8da96: mov    0x60(%r15),%rax
  0x0000000003b8da9a: lea    (%rax,%rsi,1),%rsi
  0x0000000003b8da9e: cmp    0x70(%r15),%rsi
  0x0000000003b8daa2: ja     0x0000000003b8e2a0
  0x0000000003b8daa8: mov    %rsi,0x60(%r15)
  0x0000000003b8daac: sub    %rax,%rsi
  0x0000000003b8daaf: movq   $0x1,(%rax)
  0x0000000003b8dab6: mov    %rdx,%rcx
  0x0000000003b8dab9: shr    $0x3,%rcx
  0x0000000003b8dabd: mov    %ecx,0x8(%rax)
  0x0000000003b8dac0: mov    %ebx,0xc(%rax)
  0x0000000003b8dac3: sub    $0x10,%rsi
  0x0000000003b8dac7: je     0x0000000003b8dade
  0x0000000003b8dacd: xor    %rbx,%rbx
  0x0000000003b8dad0: shr    $0x3,%rsi
  0x0000000003b8dad4: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000003b8dad9: dec    %rsi
  0x0000000003b8dadc: jne    0x0000000003b8dad4  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x0000000003b8dade: mov    0xc(%r11),%edx     ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x0000000003b8e2aa
  0x0000000003b8dae2: sub    %r8d,%edx
  0x0000000003b8dae5: movabs $0x2666b708,%r9    ;   {metadata(method data for {method} {0x0000000026559ff0} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000003b8daef: addq   $0x1,0x208(%r9)
  0x0000000003b8daf7: movabs $0x2662ffd0,%r9    ;   {metadata(method data for {method} {0x00000000265352d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000003b8db01: mov    0xdc(%r9),%edi
  0x0000000003b8db08: add    $0x8,%edi
  0x0000000003b8db0b: mov    %edi,0xdc(%r9)
  0x0000000003b8db12: movabs $0x265352c8,%r9    ;   {metadata({method} {0x00000000265352d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000003b8db1c: and    $0x7ffff8,%edi
  0x0000000003b8db22: cmp    $0x0,%edi
  0x0000000003b8db25: je     0x0000000003b8e2af
  0x0000000003b8db2b: cmp    %r13d,%edx
  0x0000000003b8db2e: movabs $0x2662ffd0,%r9    ;   {metadata(method data for {method} {0x00000000265352d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000003b8db38: movabs $0x108,%rdi
  0x0000000003b8db42: jg     0x0000000003b8db52
  0x0000000003b8db48: movabs $0x118,%rdi
  0x0000000003b8db52: mov    (%r9,%rdi,1),%rsi
  0x0000000003b8db56: lea    0x1(%rsi),%rsi
  0x0000000003b8db5a: mov    %rsi,(%r9,%rdi,1)
  0x0000000003b8db5e: jg     0x0000000003b8db7d  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000003b8db64: movabs $0x2662ffd0,%r9    ;   {metadata(method data for {method} {0x00000000265352d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000003b8db6e: incl   0x128(%r9)
  0x0000000003b8db75: mov    %rdx,%rsi
  0x0000000003b8db78: jmpq   0x0000000003b8db80  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000003b8db7d: mov    %r13,%rsi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000003b8db80: movabs $0x2666b708,%rdx   ;   {metadata(method data for {method} {0x0000000026559ff0} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000003b8db8a: addq   $0x1,0x218(%rdx)
  0x0000000003b8db92: mov    %r11,%rdx
  0x0000000003b8db95: mov    %rax,%r9
  0x0000000003b8db98: mov    $0x0,%edi
  0x0000000003b8db9d: mov    %rax,0x70(%rsp)
  0x0000000003b8dba2: test   %r8d,%r8d
  0x0000000003b8dba5: jl     0x0000000003b8e2c6
  0x0000000003b8dbab: lea    (%r8,%rsi,1),%rcx
  0x0000000003b8dbaf: cmp    0xc(%rdx),%ecx
  0x0000000003b8dbb2: ja     0x0000000003b8e2c6
  0x0000000003b8dbb8: lea    (%rdi,%rsi,1),%rcx
  0x0000000003b8dbbc: cmp    0xc(%r9),%ecx
  0x0000000003b8dbc0: ja     0x0000000003b8e2c6
  0x0000000003b8dbc6: test   %esi,%esi
  0x0000000003b8dbc8: jl     0x0000000003b8e2c6
  0x0000000003b8dbce: je     0x0000000003b8dc12
  0x0000000003b8dbd4: movslq %r8d,%r8
  0x0000000003b8dbd7: movslq %edi,%rdi
  0x0000000003b8dbda: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000003b8dbdf: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000003b8dbe4: mov    %rsi,%r8
  0x0000000003b8dbe7: sub    $0x20,%rsp
  0x0000000003b8dbeb: test   $0xf,%esp
  0x0000000003b8dbf1: je     0x0000000003b8dc09
  0x0000000003b8dbf7: sub    $0x8,%rsp
  0x0000000003b8dbfb: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000003b8dc00: add    $0x8,%rsp
  0x0000000003b8dc04: jmpq   0x0000000003b8dc0e
  0x0000000003b8dc09: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000003b8dc0e: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x0000000003b8dc12: mov    0x70(%rsp),%rax
  0x0000000003b8dc17: add    $0xa0,%rsp
  0x0000000003b8dc1e: pop    %rbp
  0x0000000003b8dc1f: test   %eax,-0x215db25(%rip)        # 0x0000000001a30100
                                                ;   {poll_return}
  0x0000000003b8dc25: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x0000000003b8dc26: mov    %r9d,0x80(%rsp)
  0x0000000003b8dc2e: xchg   %ax,%ax
  0x0000000003b8dc30: jmpq   0x0000000003b8e2e0  ;   {no_reloc}
  0x0000000003b8dc35: add    %al,(%rax)
  0x0000000003b8dc37: add    %al,(%rax)
  0x0000000003b8dc39: add    %cl,-0x75(%rcx)
  0x0000000003b8dc3c: rex.RXB (bad) 
  0x0000000003b8dc3e: lea    0x20(%rax),%rdi
  0x0000000003b8dc42: cmp    0x70(%r15),%rdi
  0x0000000003b8dc46: ja     0x0000000003b8e2ea
  0x0000000003b8dc4c: mov    %rdi,0x60(%r15)
  0x0000000003b8dc50: mov    0xa8(%rdx),%rcx
  0x0000000003b8dc57: mov    %rcx,(%rax)
  0x0000000003b8dc5a: mov    %rdx,%rcx
  0x0000000003b8dc5d: shr    $0x3,%rcx
  0x0000000003b8dc61: mov    %ecx,0x8(%rax)
  0x0000000003b8dc64: xor    %rcx,%rcx
  0x0000000003b8dc67: mov    %ecx,0xc(%rax)
  0x0000000003b8dc6a: xor    %rcx,%rcx
  0x0000000003b8dc6d: mov    %rcx,0x10(%rax)
  0x0000000003b8dc71: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x0000000003b8dc75: data16 xchg %ax,%ax
  0x0000000003b8dc78: jmpq   0x0000000003b8e306  ;   {no_reloc}
  0x0000000003b8dc7d: add    %al,(%rax)
  0x0000000003b8dc7f: add    %al,(%rax)
  0x0000000003b8dc81: add    %cl,-0x77(%rax)
  0x0000000003b8dc84: test   %ah,(%rax,%rcx,4)
  0x0000000003b8dc87: add    %al,(%rax)
  0x0000000003b8dc89: add    %cl,-0x75(%rcx)
  0x0000000003b8dc8c: rex.RXB (bad) 
  0x0000000003b8dc8e: lea    0x18(%rax),%rdi
  0x0000000003b8dc92: cmp    0x70(%r15),%rdi
  0x0000000003b8dc96: ja     0x0000000003b8e310
  0x0000000003b8dc9c: mov    %rdi,0x60(%r15)
  0x0000000003b8dca0: mov    0xa8(%rdx),%rcx
  0x0000000003b8dca7: mov    %rcx,(%rax)
  0x0000000003b8dcaa: mov    %rdx,%rcx
  0x0000000003b8dcad: shr    $0x3,%rcx
  0x0000000003b8dcb1: mov    %ecx,0x8(%rax)
  0x0000000003b8dcb4: xor    %rcx,%rcx
  0x0000000003b8dcb7: mov    %ecx,0xc(%rax)
  0x0000000003b8dcba: xor    %rcx,%rcx
  0x0000000003b8dcbd: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x0000000003b8dcc1: mov    %rax,%rbx
  0x0000000003b8dcc4: movabs $0x2666b708,%rdx   ;   {metadata(method data for {method} {0x0000000026559ff0} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000003b8dcce: addq   $0x1,0x128(%rdx)
  0x0000000003b8dcd6: movabs $0x266e3918,%rbx   ;   {metadata(method data for {method} {0x00000000264b8468} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000003b8dce0: mov    0xdc(%rbx),%edx
  0x0000000003b8dce6: add    $0x8,%edx
  0x0000000003b8dce9: mov    %edx,0xdc(%rbx)
  0x0000000003b8dcef: movabs $0x264b8460,%rbx   ;   {metadata({method} {0x00000000264b8468} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000003b8dcf9: and    $0x7ffff8,%edx
  0x0000000003b8dcff: cmp    $0x0,%edx
  0x0000000003b8dd02: je     0x0000000003b8e31d
  0x0000000003b8dd08: mov    %rax,%rbx
  0x0000000003b8dd0b: movabs $0x266e3918,%rdx   ;   {metadata(method data for {method} {0x00000000264b8468} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000003b8dd15: addq   $0x1,0x108(%rdx)
  0x0000000003b8dd1d: movabs $0x266e3ac8,%rbx   ;   {metadata(method data for {method} {0x00000000264b4798} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003b8dd27: mov    0xdc(%rbx),%edx
  0x0000000003b8dd2d: add    $0x8,%edx
  0x0000000003b8dd30: mov    %edx,0xdc(%rbx)
  0x0000000003b8dd36: movabs $0x264b4790,%rbx   ;   {metadata({method} {0x00000000264b4798} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003b8dd40: and    $0x7ffff8,%edx
  0x0000000003b8dd46: cmp    $0x0,%edx
  0x0000000003b8dd49: je     0x0000000003b8e334
  0x0000000003b8dd4f: mov    %rax,%rbx
  0x0000000003b8dd52: movabs $0x266e3ac8,%rdx   ;   {metadata(method data for {method} {0x00000000264b4798} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003b8dd5c: addq   $0x1,0x108(%rdx)
  0x0000000003b8dd64: movabs $0x265743d8,%rbx   ;   {metadata(method data for {method} {0x0000000026440488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000003b8dd6e: mov    0xdc(%rbx),%edx
  0x0000000003b8dd74: add    $0x8,%edx
  0x0000000003b8dd77: mov    %edx,0xdc(%rbx)
  0x0000000003b8dd7d: movabs $0x26440480,%rbx   ;   {metadata({method} {0x0000000026440488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000003b8dd87: and    $0x7ffff8,%edx
  0x0000000003b8dd8d: cmp    $0x0,%edx
  0x0000000003b8dd90: je     0x0000000003b8e34b
  0x0000000003b8dd96: mov    $0x10,%ebx
  0x0000000003b8dd9b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000003b8dda5: mov    %rax,%r13
  0x0000000003b8dda8: movslq %ebx,%rbx
  0x0000000003b8ddab: mov    %rbx,%rdi
  0x0000000003b8ddae: cmp    $0xffffff,%rbx
  0x0000000003b8ddb5: ja     0x0000000003b8e362
  0x0000000003b8ddbb: movabs $0x17,%rsi
  0x0000000003b8ddc5: lea    (%rsi,%rbx,2),%rsi
  0x0000000003b8ddc9: and    $0xfffffffffffffff8,%rsi
  0x0000000003b8ddcd: mov    0x60(%r15),%rax
  0x0000000003b8ddd1: lea    (%rax,%rsi,1),%rsi
  0x0000000003b8ddd5: cmp    0x70(%r15),%rsi
  0x0000000003b8ddd9: ja     0x0000000003b8e362
  0x0000000003b8dddf: mov    %rsi,0x60(%r15)
  0x0000000003b8dde3: sub    %rax,%rsi
  0x0000000003b8dde6: movq   $0x1,(%rax)
  0x0000000003b8dded: mov    %rdx,%rcx
  0x0000000003b8ddf0: shr    $0x3,%rcx
  0x0000000003b8ddf4: mov    %ecx,0x8(%rax)
  0x0000000003b8ddf7: mov    %ebx,0xc(%rax)
  0x0000000003b8ddfa: sub    $0x10,%rsi
  0x0000000003b8ddfe: je     0x0000000003b8de15
  0x0000000003b8de04: xor    %rbx,%rbx
  0x0000000003b8de07: shr    $0x3,%rsi
  0x0000000003b8de0b: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000003b8de10: dec    %rsi
  0x0000000003b8de13: jne    0x0000000003b8de0b  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000003b8de15: mov    %rax,%r10
  0x0000000003b8de18: shr    $0x3,%r10
  0x0000000003b8de1c: mov    %r10d,0x10(%r13)
  0x0000000003b8de20: mov    %r13,%rax
  0x0000000003b8de23: shr    $0x9,%rax
  0x0000000003b8de27: movabs $0xfe86000,%rdx
  0x0000000003b8de31: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000003b8de35: mov    %r13,%rax
  0x0000000003b8de38: movabs $0x2666b708,%rdx   ;   {metadata(method data for {method} {0x0000000026559ff0} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000003b8de42: mov    0x8(%rax),%eax
  0x0000000003b8de45: shl    $0x3,%rax
  0x0000000003b8de49: cmp    0x140(%rdx),%rax
  0x0000000003b8de50: jne    0x0000000003b8de5f
  0x0000000003b8de52: addq   $0x1,0x148(%rdx)
  0x0000000003b8de5a: jmpq   0x0000000003b8dec5
  0x0000000003b8de5f: cmp    0x150(%rdx),%rax
  0x0000000003b8de66: jne    0x0000000003b8de75
  0x0000000003b8de68: addq   $0x1,0x158(%rdx)
  0x0000000003b8de70: jmpq   0x0000000003b8dec5
  0x0000000003b8de75: cmpq   $0x0,0x140(%rdx)
  0x0000000003b8de80: jne    0x0000000003b8de99
  0x0000000003b8de82: mov    %rax,0x140(%rdx)
  0x0000000003b8de89: movq   $0x1,0x148(%rdx)
  0x0000000003b8de94: jmpq   0x0000000003b8dec5
  0x0000000003b8de99: cmpq   $0x0,0x150(%rdx)
  0x0000000003b8dea4: jne    0x0000000003b8debd
  0x0000000003b8dea6: mov    %rax,0x150(%rdx)
  0x0000000003b8dead: movq   $0x1,0x158(%rdx)
  0x0000000003b8deb8: jmpq   0x0000000003b8dec5
  0x0000000003b8debd: addq   $0x1,0x138(%rdx)
  0x0000000003b8dec5: movabs $0x266f2c38,%rdx   ;   {metadata(method data for {method} {0x00000000264b8c40} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000003b8decf: mov    0xdc(%rdx),%esi
  0x0000000003b8ded5: add    $0x8,%esi
  0x0000000003b8ded8: mov    %esi,0xdc(%rdx)
  0x0000000003b8dede: movabs $0x264b8c38,%rdx   ;   {metadata({method} {0x00000000264b8c40} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000003b8dee8: and    $0x7ffff8,%esi
  0x0000000003b8deee: cmp    $0x0,%esi
  0x0000000003b8def1: je     0x0000000003b8e36c
  0x0000000003b8def7: mov    %r13,%rax
  0x0000000003b8defa: movabs $0x266f2c38,%rdx   ;   {metadata(method data for {method} {0x00000000264b8c40} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000003b8df04: addq   $0x1,0x108(%rdx)
  0x0000000003b8df0c: mov    %r13,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x0000000003b8df0f: mov    %r13,0x78(%rsp)
  0x0000000003b8df14: nop
  0x0000000003b8df15: nop
  0x0000000003b8df16: nop
  0x0000000003b8df17: callq  0x00000000039161a0  ; OopMap{[120]=Oop [136]=Oop off=1340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000003b8df1c: mov    0x78(%rsp),%rax
  0x0000000003b8df21: movabs $0x2666b708,%r8    ;   {metadata(method data for {method} {0x0000000026559ff0} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000003b8df2b: mov    0x8(%rax),%eax
  0x0000000003b8df2e: shl    $0x3,%rax
  0x0000000003b8df32: cmp    0x170(%r8),%rax
  0x0000000003b8df39: jne    0x0000000003b8df48
  0x0000000003b8df3b: addq   $0x1,0x178(%r8)
  0x0000000003b8df43: jmpq   0x0000000003b8dfae
  0x0000000003b8df48: cmp    0x180(%r8),%rax
  0x0000000003b8df4f: jne    0x0000000003b8df5e
  0x0000000003b8df51: addq   $0x1,0x188(%r8)
  0x0000000003b8df59: jmpq   0x0000000003b8dfae
  0x0000000003b8df5e: cmpq   $0x0,0x170(%r8)
  0x0000000003b8df69: jne    0x0000000003b8df82
  0x0000000003b8df6b: mov    %rax,0x170(%r8)
  0x0000000003b8df72: movq   $0x1,0x178(%r8)
  0x0000000003b8df7d: jmpq   0x0000000003b8dfae
  0x0000000003b8df82: cmpq   $0x0,0x180(%r8)
  0x0000000003b8df8d: jne    0x0000000003b8dfa6
  0x0000000003b8df8f: mov    %rax,0x180(%r8)
  0x0000000003b8df96: movq   $0x1,0x188(%r8)
  0x0000000003b8dfa1: jmpq   0x0000000003b8dfae
  0x0000000003b8dfa6: addq   $0x1,0x168(%r8)
  0x0000000003b8dfae: movabs $0x26676958,%r8    ;   {metadata(method data for {method} {0x00000000264b8780} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000003b8dfb8: mov    0xdc(%r8),%edx
  0x0000000003b8dfbf: add    $0x8,%edx
  0x0000000003b8dfc2: mov    %edx,0xdc(%r8)
  0x0000000003b8dfc9: movabs $0x264b8778,%r8    ;   {metadata({method} {0x00000000264b8780} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000003b8dfd3: and    $0x7ffff8,%edx
  0x0000000003b8dfd9: cmp    $0x0,%edx
  0x0000000003b8dfdc: je     0x0000000003b8e383
  0x0000000003b8dfe2: mov    0x78(%rsp),%rax
  0x0000000003b8dfe7: movabs $0x26676958,%r8    ;   {metadata(method data for {method} {0x00000000264b8780} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000003b8dff1: addq   $0x1,0x108(%r8)
  0x0000000003b8dff9: movabs $0x716123d98,%r8   ;   {oop(&quot; &gt; &quot;)}
  0x0000000003b8e003: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x0000000003b8e008: nop
  0x0000000003b8e009: nop
  0x0000000003b8e00a: nop
  0x0000000003b8e00b: nop
  0x0000000003b8e00c: nop
  0x0000000003b8e00d: nop
  0x0000000003b8e00e: nop
  0x0000000003b8e00f: callq  0x00000000039161a0  ; OopMap{[120]=Oop [136]=Oop off=1588}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000003b8e014: mov    0x78(%rsp),%rax
  0x0000000003b8e019: movabs $0x2666b708,%r8    ;   {metadata(method data for {method} {0x0000000026559ff0} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000003b8e023: mov    0x8(%rax),%eax
  0x0000000003b8e026: shl    $0x3,%rax
  0x0000000003b8e02a: cmp    0x1a0(%r8),%rax
  0x0000000003b8e031: jne    0x0000000003b8e040
  0x0000000003b8e033: addq   $0x1,0x1a8(%r8)
  0x0000000003b8e03b: jmpq   0x0000000003b8e0a6
  0x0000000003b8e040: cmp    0x1b0(%r8),%rax
  0x0000000003b8e047: jne    0x0000000003b8e056
  0x0000000003b8e049: addq   $0x1,0x1b8(%r8)
  0x0000000003b8e051: jmpq   0x0000000003b8e0a6
  0x0000000003b8e056: cmpq   $0x0,0x1a0(%r8)
  0x0000000003b8e061: jne    0x0000000003b8e07a
  0x0000000003b8e063: mov    %rax,0x1a0(%r8)
  0x0000000003b8e06a: movq   $0x1,0x1a8(%r8)
  0x0000000003b8e075: jmpq   0x0000000003b8e0a6
  0x0000000003b8e07a: cmpq   $0x0,0x1b0(%r8)
  0x0000000003b8e085: jne    0x0000000003b8e09e
  0x0000000003b8e087: mov    %rax,0x1b0(%r8)
  0x0000000003b8e08e: movq   $0x1,0x1b8(%r8)
  0x0000000003b8e099: jmpq   0x0000000003b8e0a6
  0x0000000003b8e09e: addq   $0x1,0x198(%r8)
  0x0000000003b8e0a6: movabs $0x266f2c38,%r8    ;   {metadata(method data for {method} {0x00000000264b8c40} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000003b8e0b0: mov    0xdc(%r8),%edx
  0x0000000003b8e0b7: add    $0x8,%edx
  0x0000000003b8e0ba: mov    %edx,0xdc(%r8)
  0x0000000003b8e0c1: movabs $0x264b8c38,%r8    ;   {metadata({method} {0x00000000264b8c40} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000003b8e0cb: and    $0x7ffff8,%edx
  0x0000000003b8e0d1: cmp    $0x0,%edx
  0x0000000003b8e0d4: je     0x0000000003b8e39a
  0x0000000003b8e0da: mov    0x78(%rsp),%rax
  0x0000000003b8e0df: movabs $0x266f2c38,%r8    ;   {metadata(method data for {method} {0x00000000264b8c40} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000003b8e0e9: addq   $0x1,0x108(%r8)
  0x0000000003b8e0f1: mov    0x80(%rsp),%r8d
  0x0000000003b8e0f9: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x0000000003b8e0fe: nop
  0x0000000003b8e0ff: callq  0x00000000039161a0  ; OopMap{[120]=Oop [136]=Oop off=1828}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000003b8e104: mov    0x78(%rsp),%rax
  0x0000000003b8e109: movabs $0x2666b708,%rdx   ;   {metadata(method data for {method} {0x0000000026559ff0} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000003b8e113: mov    0x8(%rax),%eax
  0x0000000003b8e116: shl    $0x3,%rax
  0x0000000003b8e11a: cmp    0x1d0(%rdx),%rax
  0x0000000003b8e121: jne    0x0000000003b8e130
  0x0000000003b8e123: addq   $0x1,0x1d8(%rdx)
  0x0000000003b8e12b: jmpq   0x0000000003b8e196
  0x0000000003b8e130: cmp    0x1e0(%rdx),%rax
  0x0000000003b8e137: jne    0x0000000003b8e146
  0x0000000003b8e139: addq   $0x1,0x1e8(%rdx)
  0x0000000003b8e141: jmpq   0x0000000003b8e196
  0x0000000003b8e146: cmpq   $0x0,0x1d0(%rdx)
  0x0000000003b8e151: jne    0x0000000003b8e16a
  0x0000000003b8e153: mov    %rax,0x1d0(%rdx)
  0x0000000003b8e15a: movq   $0x1,0x1d8(%rdx)
  0x0000000003b8e165: jmpq   0x0000000003b8e196
  0x0000000003b8e16a: cmpq   $0x0,0x1e0(%rdx)
  0x0000000003b8e175: jne    0x0000000003b8e18e
  0x0000000003b8e177: mov    %rax,0x1e0(%rdx)
  0x0000000003b8e17e: movq   $0x1,0x1e8(%rdx)
  0x0000000003b8e189: jmpq   0x0000000003b8e196
  0x0000000003b8e18e: addq   $0x1,0x1c8(%rdx)
  0x0000000003b8e196: movabs $0x266fd5d0,%rdx   ;   {metadata(method data for {method} {0x00000000264b9b30} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000003b8e1a0: mov    0xdc(%rdx),%esi
  0x0000000003b8e1a6: add    $0x8,%esi
  0x0000000003b8e1a9: mov    %esi,0xdc(%rdx)
  0x0000000003b8e1af: movabs $0x264b9b28,%rdx   ;   {metadata({method} {0x00000000264b9b30} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000003b8e1b9: and    $0x7ffff8,%esi
  0x0000000003b8e1bf: cmp    $0x0,%esi
  0x0000000003b8e1c2: je     0x0000000003b8e3b1
  0x0000000003b8e1c8: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000003b8e1d2: mov    0x60(%r15),%rax
  0x0000000003b8e1d6: lea    0x18(%rax),%rdi
  0x0000000003b8e1da: cmp    0x70(%r15),%rdi
  0x0000000003b8e1de: ja     0x0000000003b8e3c8
  0x0000000003b8e1e4: mov    %rdi,0x60(%r15)
  0x0000000003b8e1e8: mov    0xa8(%rdx),%rcx
  0x0000000003b8e1ef: mov    %rcx,(%rax)
  0x0000000003b8e1f2: mov    %rdx,%rcx
  0x0000000003b8e1f5: shr    $0x3,%rcx
  0x0000000003b8e1f9: mov    %ecx,0x8(%rax)
  0x0000000003b8e1fc: xor    %rcx,%rcx
  0x0000000003b8e1ff: mov    %ecx,0xc(%rax)
  0x0000000003b8e202: xor    %rcx,%rcx
  0x0000000003b8e205: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000003b8e209: mov    0x78(%rsp),%r8
  0x0000000003b8e20e: mov    0x10(%r8),%r9d
  0x0000000003b8e212: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000003b8e216: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000003b8e21a: mov    %rax,%r8
  0x0000000003b8e21d: movabs $0x266fd5d0,%rdx   ;   {metadata(method data for {method} {0x00000000264b9b30} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000003b8e227: addq   $0x1,0x108(%rdx)
  0x0000000003b8e22f: mov    %r9,%r8
  0x0000000003b8e232: mov    $0x0,%r9d
  0x0000000003b8e238: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000003b8e23b: mov    %rax,0x90(%rsp)
  0x0000000003b8e243: nop
  0x0000000003b8e244: nop
  0x0000000003b8e245: nop
  0x0000000003b8e246: nop
  0x0000000003b8e247: callq  0x00000000039161a0  ; OopMap{[136]=Oop [144]=Oop off=2156}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000003b8e24c: mov    0x88(%rsp),%rax
  0x0000000003b8e254: movabs $0x2666b708,%r8    ;   {metadata(method data for {method} {0x0000000026559ff0} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000003b8e25e: addq   $0x1,0x1f8(%r8)
  0x0000000003b8e266: mov    0x90(%rsp),%r8
  0x0000000003b8e26e: mov    0x88(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x0000000003b8e276: nop
  0x0000000003b8e277: callq  0x00000000039161a0  ; OopMap{[136]=Oop off=2204}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000003b8e27c: mov    0x88(%rsp),%rax
  0x0000000003b8e284: jmpq   0x0000000003b8e400
  0x0000000003b8e289: mov    %rbx,0x8(%rsp)
  0x0000000003b8e28e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b8e296: callq  0x0000000003b789e0  ; OopMap{r11=Oop off=2235}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x0000000003b8e29b: jmpq   0x0000000003b8da24
  0x0000000003b8e2a0: callq  0x00000000039402c0  ; OopMap{r11=Oop off=2245}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x0000000003b8e2a5: jmpq   0x0000000003b8dade
  0x0000000003b8e2aa: callq  0x000000000393f540  ; OopMap{r11=Oop rax=Oop off=2255}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x0000000003b8e2af: mov    %r9,0x8(%rsp)
  0x0000000003b8e2b4: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b8e2bc: callq  0x0000000003b789e0  ; OopMap{r11=Oop rax=Oop off=2273}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x0000000003b8e2c1: jmpq   0x0000000003b8db2b
  0x0000000003b8e2c6: nop
  0x0000000003b8e2c7: callq  0x0000000003916620  ; OopMap{[112]=Oop off=2284}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x0000000003b8e2cc: jmpq   0x0000000003b8dc12
  0x0000000003b8e2d1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000003b8e2db: mov    $0xa050f00,%eax
  0x0000000003b8e2e0: callq  0x0000000003b777a0  ; OopMap{off=2309}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x0000000003b8e2e5: jmpq   0x0000000003b8dc30
  0x0000000003b8e2ea: mov    %rdx,%rdx
  0x0000000003b8e2ed: callq  0x0000000003940c80  ; OopMap{off=2322}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x0000000003b8e2f2: jmpq   0x0000000003b8dc75
  0x0000000003b8e2f7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000003b8e301: mov    $0xa050f00,%eax
  0x0000000003b8e306: callq  0x0000000003b777a0  ; OopMap{rax=Oop off=2347}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x0000000003b8e30b: jmpq   0x0000000003b8dc78
  0x0000000003b8e310: mov    %rdx,%rdx
  0x0000000003b8e313: callq  0x0000000003940c80  ; OopMap{[136]=Oop off=2360}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x0000000003b8e318: jmpq   0x0000000003b8dcc1
  0x0000000003b8e31d: mov    %rbx,0x8(%rsp)
  0x0000000003b8e322: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b8e32a: callq  0x0000000003b789e0  ; OopMap{[136]=Oop rax=Oop off=2383}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000003b8e32f: jmpq   0x0000000003b8dd08
  0x0000000003b8e334: mov    %rbx,0x8(%rsp)
  0x0000000003b8e339: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b8e341: callq  0x0000000003b789e0  ; OopMap{[136]=Oop rax=Oop off=2406}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000003b8e346: jmpq   0x0000000003b8dd4f
  0x0000000003b8e34b: mov    %rbx,0x8(%rsp)
  0x0000000003b8e350: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b8e358: callq  0x0000000003b789e0  ; OopMap{[136]=Oop rax=Oop off=2429}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000003b8e35d: jmpq   0x0000000003b8dd96
  0x0000000003b8e362: callq  0x00000000039402c0  ; OopMap{[136]=Oop r13=Oop off=2439}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000003b8e367: jmpq   0x0000000003b8de15
  0x0000000003b8e36c: mov    %rdx,0x8(%rsp)
  0x0000000003b8e371: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b8e379: callq  0x0000000003b789e0  ; OopMap{[136]=Oop r13=Oop off=2462}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x0000000003b8e37e: jmpq   0x0000000003b8def7
  0x0000000003b8e383: mov    %r8,0x8(%rsp)
  0x0000000003b8e388: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b8e390: callq  0x0000000003b789e0  ; OopMap{[120]=Oop [136]=Oop off=2485}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x0000000003b8e395: jmpq   0x0000000003b8dfe2
  0x0000000003b8e39a: mov    %r8,0x8(%rsp)
  0x0000000003b8e39f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b8e3a7: callq  0x0000000003b789e0  ; OopMap{[120]=Oop [136]=Oop off=2508}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x0000000003b8e3ac: jmpq   0x0000000003b8e0da
  0x0000000003b8e3b1: mov    %rdx,0x8(%rsp)
  0x0000000003b8e3b6: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003b8e3be: callq  0x0000000003b789e0  ; OopMap{[120]=Oop [136]=Oop off=2531}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x0000000003b8e3c3: jmpq   0x0000000003b8e1c8
  0x0000000003b8e3c8: mov    %rdx,%rdx
  0x0000000003b8e3cb: callq  0x0000000003940c80  ; OopMap{[120]=Oop [136]=Oop off=2544}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x0000000003b8e3d0: jmpq   0x0000000003b8e209
  0x0000000003b8e3d5: nop
  0x0000000003b8e3d6: nop
  0x0000000003b8e3d7: mov    0x2a8(%r15),%rax
  0x0000000003b8e3de: movabs $0x0,%r10
  0x0000000003b8e3e8: mov    %r10,0x2a8(%r15)
  0x0000000003b8e3ef: movabs $0x0,%r10
  0x0000000003b8e3f9: mov    %r10,0x2b0(%r15)
  0x0000000003b8e400: add    $0xa0,%rsp
  0x0000000003b8e407: pop    %rbp
  0x0000000003b8e408: jmpq   0x000000000393ea20  ;   {runtime_call}
  0x0000000003b8e40d: hlt    
  0x0000000003b8e40e: hlt    
  0x0000000003b8e40f: hlt    
  0x0000000003b8e410: hlt    
  0x0000000003b8e411: hlt    
  0x0000000003b8e412: hlt    
  0x0000000003b8e413: hlt    
  0x0000000003b8e414: hlt    
  0x0000000003b8e415: hlt    
  0x0000000003b8e416: hlt    
  0x0000000003b8e417: hlt    
  0x0000000003b8e418: hlt    
  0x0000000003b8e419: hlt    
  0x0000000003b8e41a: hlt    
  0x0000000003b8e41b: hlt    
  0x0000000003b8e41c: hlt    
  0x0000000003b8e41d: hlt    
  0x0000000003b8e41e: hlt    
  0x0000000003b8e41f: hlt    
[Stub Code]
  0x0000000003b8e420: nop                       ;   {no_reloc}
  0x0000000003b8e421: nop
  0x0000000003b8e422: nop
  0x0000000003b8e423: nop
  0x0000000003b8e424: nop
  0x0000000003b8e425: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b8e42f: jmpq   0x0000000003b8e42f  ;   {runtime_call}
  0x0000000003b8e434: nop
  0x0000000003b8e435: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b8e43f: jmpq   0x0000000003b8e43f  ;   {runtime_call}
  0x0000000003b8e444: nop
  0x0000000003b8e445: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b8e44f: jmpq   0x0000000003b8e44f  ;   {runtime_call}
  0x0000000003b8e454: nop
  0x0000000003b8e455: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b8e45f: jmpq   0x0000000003b8e45f  ;   {runtime_call}
  0x0000000003b8e464: nop
  0x0000000003b8e465: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b8e46f: jmpq   0x0000000003b8e46f  ;   {runtime_call}
  0x0000000003b8e474: nop
  0x0000000003b8e475: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003b8e47f: jmpq   0x0000000003b8e47f  ;   {runtime_call}
[Exception Handler]
  0x0000000003b8e484: callq  0x000000000393f3a0  ;   {runtime_call}
  0x0000000003b8e489: mov    %rsp,-0x28(%rsp)
  0x0000000003b8e48e: sub    $0x80,%rsp
  0x0000000003b8e495: mov    %rax,0x78(%rsp)
  0x0000000003b8e49a: mov    %rcx,0x70(%rsp)
  0x0000000003b8e49f: mov    %rdx,0x68(%rsp)
  0x0000000003b8e4a4: mov    %rbx,0x60(%rsp)
  0x0000000003b8e4a9: mov    %rbp,0x50(%rsp)
  0x0000000003b8e4ae: mov    %rsi,0x48(%rsp)
  0x0000000003b8e4b3: mov    %rdi,0x40(%rsp)
  0x0000000003b8e4b8: mov    %r8,0x38(%rsp)
  0x0000000003b8e4bd: mov    %r9,0x30(%rsp)
  0x0000000003b8e4c2: mov    %r10,0x28(%rsp)
  0x0000000003b8e4c7: mov    %r11,0x20(%rsp)
  0x0000000003b8e4cc: mov    %r12,0x18(%rsp)
  0x0000000003b8e4d1: mov    %r13,0x10(%rsp)
  0x0000000003b8e4d6: mov    %r14,0x8(%rsp)
  0x0000000003b8e4db: mov    %r15,(%rsp)
  0x0000000003b8e4df: movabs $0x713a0770,%rcx   ;   {external_word}
  0x0000000003b8e4e9: movabs $0x3b8e489,%rdx    ;   {internal_word}
  0x0000000003b8e4f3: mov    %rsp,%r8
  0x0000000003b8e4f6: and    $0xfffffffffffffff0,%rsp
  0x0000000003b8e4fa: callq  0x0000000071056cc0  ;   {runtime_call}
  0x0000000003b8e4ff: hlt    
[Deopt Handler Code]
  0x0000000003b8e500: movabs $0x3b8e500,%r10    ;   {section_word}
  0x0000000003b8e50a: push   %r10
  0x0000000003b8e50c: jmpq   0x0000000003917600  ;   {runtime_call}
  0x0000000003b8e511: hlt    
  0x0000000003b8e512: hlt    
  0x0000000003b8e513: hlt    
  0x0000000003b8e514: hlt    
  0x0000000003b8e515: hlt    
  0x0000000003b8e516: hlt    
  0x0000000003b8e517: hlt    
<nmethod compile_id='26' compiler='C1' level='3' entry='0x0000000003b8d9e0' size='4856' address='0x0000000003b8d7d0' relocation_offset='288' insts_offset='528' stub_offset='3152' scopes_data_offset='3472' scopes_pcs_offset='4096' dependencies_offset='4832' nul_chk_table_offset='4840' oops_offset='3400' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='911' iicount='911' stamp='0.148'/>
<writer thread='13832'/>
[Loaded java.lang.Shutdown$Lock from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<writer thread='22872'/>
<task_queued compile_id='28' method='java/lang/String indexOf (I)I' bytes='7' count='512' iicount='512' level='3' stamp='0.148' comment='tiered' hot_count='512'/>
<writer thread='7600'/>
<destroy_vm stamp='0.148'/>
<writer thread='22872'/>
[Loaded sun.net.spi.DefaultProxySelector$NonProxyInfo from G:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar]
<tty_done stamp='0.148'/>
</tty>
<compilation_log thread='22188'>
<start_compile_thread name='C1 CompilerThread10' thread='22188' process='21212' stamp='0.075'/>
<task compile_id='5' method='sun/nio/cs/ext/DoubleByte$Encoder encodeChar (C)I' bytes='21' count='914' iicount='914' level='3' stamp='0.077'>
<phase name='buildIR' stamp='0.077'>
<type id='733' name='int'/>
<type id='728' name='char'/>
<klass id='844' name='sun/nio/cs/ext/DoubleByte$Encoder' flags='9'/>
<method id='845' holder='844' name='encodeChar' return='733' arguments='728' flags='1' bytes='21' iicount='914'/>
<parse method='845'  stamp='0.077'>
<parse_done stamp='0.077'/>
</parse>
<phase name='optimize_blocks' stamp='0.077'>
<phase_done name='optimize_blocks' stamp='0.077'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.077'>
<phase_done name='rangeCheckElimination' stamp='0.077'/>
</phase>
<phase name='optimize_null_checks' stamp='0.077'>
<phase_done name='optimize_null_checks' stamp='0.077'/>
</phase>
<phase_done name='buildIR' stamp='0.077'/>
</phase>
<phase name='emit_lir' stamp='0.077'>
<phase name='lirGeneration' stamp='0.077'>
<phase_done name='lirGeneration' stamp='0.077'/>
</phase>
<phase name='linearScan' stamp='0.077'>
<phase_done name='linearScan' stamp='0.077'/>
</phase>
<phase_done name='emit_lir' stamp='0.077'/>
</phase>
<phase name='codeemit' stamp='0.077'>
<phase_done name='codeemit' stamp='0.077'/>
</phase>
<phase name='codeinstall' stamp='0.077'>
<phase_done name='codeinstall' stamp='0.081'/>
</phase>
<code_cache total_blobs='231' nmethods='3' adapters='149' free_code_cache='248865792'/>
<task_done success='1' nmsize='432' count='914' stamp='0.081'/>
</task>
<task compile_id='9' method='java/lang/String getChars (II[CI)V' bytes='62' count='776' iicount='776' level='3' stamp='0.092'>
<phase name='buildIR' stamp='0.092'>
<type id='735' name='void'/>
<type id='733' name='int'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='getChars' return='735' arguments='733 733 833 733' flags='1' bytes='62' iicount='776'/>
<parse method='844'  stamp='0.092'>
<bc code='183' bci='9'/>
<klass id='846' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='847' holder='846' name='&lt;init&gt;' return='735' arguments='733' unloaded='1'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='27'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='43'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='58'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='848' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='3' compile_kind='c2n' level='0' iicount='2560'/>
<call method='848' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.092'/>
</parse>
<phase name='optimize_blocks' stamp='0.092'>
<phase_done name='optimize_blocks' stamp='0.092'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.092'>
<phase_done name='rangeCheckElimination' stamp='0.092'/>
</phase>
<phase name='optimize_null_checks' stamp='0.092'>
<phase_done name='optimize_null_checks' stamp='0.092'/>
</phase>
<phase_done name='buildIR' stamp='0.092'/>
</phase>
<phase name='emit_lir' stamp='0.092'>
<phase name='lirGeneration' stamp='0.092'>
<phase_done name='lirGeneration' stamp='0.092'/>
</phase>
<phase name='linearScan' stamp='0.092'>
<phase_done name='linearScan' stamp='0.093'/>
</phase>
<phase_done name='emit_lir' stamp='0.093'/>
</phase>
<phase name='codeemit' stamp='0.093'>
<phase_done name='codeemit' stamp='0.093'/>
</phase>
<phase name='codeinstall' stamp='0.093'>
<phase_done name='codeinstall' stamp='0.096'/>
</phase>
<code_cache total_blobs='254' nmethods='8' adapters='155' free_code_cache='248807616'/>
<task_done success='1' nmsize='1080' count='778' stamp='0.096'/>
</task>
<task compile_id='12' method='java/lang/Character toLowerCase (I)I' bytes='9' count='3346' iicount='3346' level='3' stamp='0.100'>
<phase name='buildIR' stamp='0.100'>
<type id='733' name='int'/>
<klass id='822' name='java/lang/Character' flags='17'/>
<method id='844' holder='822' name='toLowerCase' return='733' arguments='733' flags='9' bytes='9' iicount='3346'/>
<parse method='844'  stamp='0.100'>
<bc code='184' bci='1'/>
<klass id='847' name='java/lang/CharacterData' flags='1024'/>
<method id='848' holder='847' name='of' return='847' arguments='733' flags='24' bytes='120' iicount='3570'/>
<call method='848' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='850' holder='847' name='toLowerCase' return='733' arguments='733' flags='1024' bytes='0' iicount='1'/>
<call method='850' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.100'/>
</parse>
<phase name='optimize_blocks' stamp='0.100'>
<phase_done name='optimize_blocks' stamp='0.100'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.100'>
<phase_done name='rangeCheckElimination' stamp='0.100'/>
</phase>
<phase name='optimize_null_checks' stamp='0.100'>
<phase_done name='optimize_null_checks' stamp='0.100'/>
</phase>
<phase_done name='buildIR' stamp='0.100'/>
</phase>
<phase name='emit_lir' stamp='0.100'>
<phase name='lirGeneration' stamp='0.100'>
<phase_done name='lirGeneration' stamp='0.100'/>
</phase>
<phase name='linearScan' stamp='0.100'>
<phase_done name='linearScan' stamp='0.100'/>
</phase>
<phase_done name='emit_lir' stamp='0.100'/>
</phase>
<phase name='codeemit' stamp='0.100'>
<phase_done name='codeemit' stamp='0.100'/>
</phase>
<phase name='codeinstall' stamp='0.100'>
<phase_done name='codeinstall' stamp='0.102'/>
</phase>
<code_cache total_blobs='259' nmethods='12' adapters='158' free_code_cache='248813888'/>
<task_done success='1' nmsize='568' count='3346' stamp='0.102'/>
</task>
<task compile_id='16' method='java/lang/String indexOf (II)I' bytes='70' count='486' backedge_count='16433' iicount='486' level='3' stamp='0.103'>
<phase name='buildIR' stamp='0.104'>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='indexOf' return='733' arguments='733 733' flags='1' bytes='70' iicount='486'/>
<parse method='844'  stamp='0.104'>
<bc code='183' bci='66'/>
<method id='846' holder='741' name='indexOfSupplementary' return='733' arguments='733 733' flags='2' bytes='71' iicount='1'/>
<call method='846' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.104'/>
</parse>
<phase name='optimize_blocks' stamp='0.104'>
<phase_done name='optimize_blocks' stamp='0.104'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.104'>
<phase_done name='rangeCheckElimination' stamp='0.104'/>
</phase>
<phase name='optimize_null_checks' stamp='0.104'>
<phase_done name='optimize_null_checks' stamp='0.104'/>
</phase>
<phase_done name='buildIR' stamp='0.104'/>
</phase>
<phase name='emit_lir' stamp='0.104'>
<phase name='lirGeneration' stamp='0.104'>
<phase_done name='lirGeneration' stamp='0.104'/>
</phase>
<phase name='linearScan' stamp='0.104'>
<phase_done name='linearScan' stamp='0.104'/>
</phase>
<phase_done name='emit_lir' stamp='0.104'/>
</phase>
<phase name='codeemit' stamp='0.104'>
<phase_done name='codeemit' stamp='0.104'/>
</phase>
<phase name='codeinstall' stamp='0.104'>
<phase_done name='codeinstall' stamp='0.111'/>
</phase>
<code_cache total_blobs='263' nmethods='15' adapters='159' free_code_cache='248807296'/>
<task_done success='1' nmsize='936' count='486' backedge_count='16433' stamp='0.111'/>
</task>
<task compile_id='17' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='256' iicount='256' level='3' stamp='0.111'>
<phase name='buildIR' stamp='0.111'>
<type id='735' name='void'/>
<klass id='807' name='java/lang/StringBuilder' flags='17'/>
<method id='844' holder='807' name='&lt;init&gt;' return='735' flags='1' bytes='7' iicount='256'/>
<parse method='844'  stamp='0.111'>
<bc code='183' bci='3'/>
<type id='733' name='int'/>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='846' holder='805' name='&lt;init&gt;' return='735' arguments='733' flags='0' bytes='12' iicount='410'/>
<call method='846' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='183' bci='1'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<method id='848' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' compile_id='6' compiler='C1' level='3' iicount='4482'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<parse_done stamp='0.111'/>
</parse>
<parse_done stamp='0.111'/>
</parse>
<parse_done stamp='0.111'/>
</parse>
<phase name='optimize_blocks' stamp='0.111'>
<phase_done name='optimize_blocks' stamp='0.111'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.111'>
<phase_done name='rangeCheckElimination' stamp='0.111'/>
</phase>
<phase name='optimize_null_checks' stamp='0.111'>
<phase_done name='optimize_null_checks' stamp='0.111'/>
</phase>
<phase_done name='buildIR' stamp='0.111'/>
</phase>
<phase name='emit_lir' stamp='0.111'>
<phase name='lirGeneration' stamp='0.111'>
<phase_done name='lirGeneration' stamp='0.111'/>
</phase>
<phase name='linearScan' stamp='0.111'>
<phase_done name='linearScan' stamp='0.111'/>
</phase>
<phase_done name='emit_lir' stamp='0.111'/>
</phase>
<phase name='codeemit' stamp='0.111'>
<phase_done name='codeemit' stamp='0.111'/>
</phase>
<phase name='codeinstall' stamp='0.111'>
<phase_done name='codeinstall' stamp='0.113'/>
</phase>
<code_cache total_blobs='265' nmethods='16' adapters='160' free_code_cache='248805440'/>
<task_done success='1' nmsize='688' count='256' inlined_bytes='13' stamp='0.113'/>
</task>
<task compile_id='21' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='512' iicount='513' level='3' stamp='0.119'>
<phase name='buildIR' stamp='0.119'>
<type id='727' name='boolean'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='startsWith' return='727' arguments='741' flags='1' bytes='7' iicount='514'/>
<parse method='844'  stamp='0.119'>
<bc code='182' bci='3'/>
<type id='733' name='int'/>
<method id='846' holder='741' name='startsWith' return='727' arguments='741 733' flags='1' bytes='72' iicount='744'/>
<call method='846' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.119'/>
</parse>
<phase name='optimize_blocks' stamp='0.119'>
<phase_done name='optimize_blocks' stamp='0.119'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.119'>
<phase_done name='rangeCheckElimination' stamp='0.119'/>
</phase>
<phase name='optimize_null_checks' stamp='0.119'>
<phase_done name='optimize_null_checks' stamp='0.119'/>
</phase>
<phase_done name='buildIR' stamp='0.119'/>
</phase>
<phase name='emit_lir' stamp='0.119'>
<phase name='lirGeneration' stamp='0.119'>
<phase_done name='lirGeneration' stamp='0.119'/>
</phase>
<phase name='linearScan' stamp='0.119'>
<phase_done name='linearScan' stamp='0.119'/>
</phase>
<phase_done name='emit_lir' stamp='0.119'/>
</phase>
<phase name='codeemit' stamp='0.119'>
<phase_done name='codeemit' stamp='0.119'/>
</phase>
<phase name='codeinstall' stamp='0.119'>
<phase_done name='codeinstall' stamp='0.130'/>
</phase>
<code_cache total_blobs='274' nmethods='21' adapters='164' free_code_cache='248792640'/>
<task_done success='1' nmsize='520' count='514' stamp='0.130'/>
</task>
</compilation_log>
<compilation_log thread='23180'>
<start_compile_thread name='C1 CompilerThread11' thread='23180' process='21212' stamp='0.075'/>
<task compile_id='6' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4352' iicount='4352' level='3' stamp='0.081'>
<phase name='buildIR' stamp='0.081'>
<type id='735' name='void'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<method id='844' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' iicount='4352'/>
<parse method='844'  stamp='0.081'>
<parse_done stamp='0.081'/>
</parse>
<phase name='optimize_blocks' stamp='0.081'>
<phase_done name='optimize_blocks' stamp='0.081'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.081'>
<phase_done name='rangeCheckElimination' stamp='0.081'/>
</phase>
<phase name='optimize_null_checks' stamp='0.081'>
<phase_done name='optimize_null_checks' stamp='0.081'/>
</phase>
<phase_done name='buildIR' stamp='0.081'/>
</phase>
<phase name='emit_lir' stamp='0.081'>
<phase name='lirGeneration' stamp='0.081'>
<phase_done name='lirGeneration' stamp='0.081'/>
</phase>
<phase name='linearScan' stamp='0.081'>
<phase_done name='linearScan' stamp='0.081'/>
</phase>
<phase_done name='emit_lir' stamp='0.081'/>
</phase>
<phase name='codeemit' stamp='0.081'>
<phase_done name='codeemit' stamp='0.081'/>
</phase>
<phase name='codeinstall' stamp='0.081'>
<phase_done name='codeinstall' stamp='0.082'/>
</phase>
<code_cache total_blobs='238' nmethods='4' adapters='151' free_code_cache='248851904'/>
<task_done success='1' nmsize='336' count='4363' stamp='0.082'/>
</task>
<task compile_id='10' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='256' iicount='256' level='1' stamp='0.092'>
<phase name='buildIR' stamp='0.092'>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='766' name='java/lang/ref/Reference' flags='1025'/>
<method id='844' holder='766' name='get' return='740' flags='1' bytes='5' iicount='256'/>
<parse method='844'  stamp='0.092'>
<parse_done stamp='0.092'/>
</parse>
<phase name='optimize_blocks' stamp='0.092'>
<phase_done name='optimize_blocks' stamp='0.092'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.092'>
<phase_done name='rangeCheckElimination' stamp='0.092'/>
</phase>
<phase name='optimize_null_checks' stamp='0.092'>
<phase_done name='optimize_null_checks' stamp='0.092'/>
</phase>
<phase_done name='buildIR' stamp='0.092'/>
</phase>
<phase name='emit_lir' stamp='0.092'>
<phase name='lirGeneration' stamp='0.092'>
<phase_done name='lirGeneration' stamp='0.092'/>
</phase>
<phase name='linearScan' stamp='0.092'>
<phase_done name='linearScan' stamp='0.092'/>
</phase>
<phase_done name='emit_lir' stamp='0.092'/>
</phase>
<phase name='codeemit' stamp='0.092'>
<phase_done name='codeemit' stamp='0.092'/>
</phase>
<phase name='codeinstall' stamp='0.092'>
<phase_done name='codeinstall' stamp='0.097'/>
</phase>
<code_cache total_blobs='255' nmethods='9' adapters='155' free_code_cache='248806912'/>
<task_done success='1' nmsize='272' count='256' stamp='0.097'/>
</task>
<task compile_id='13' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='3346' iicount='3346' level='3' stamp='0.100'>
<phase name='buildIR' stamp='0.100'>
<type id='733' name='int'/>
<klass id='844' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='845' holder='844' name='toLowerCase' return='733' arguments='733' flags='0' bytes='39' iicount='3346'/>
<parse method='845'  stamp='0.100'>
<bc code='182' bci='4'/>
<method id='847' holder='844' name='getProperties' return='733' arguments='733' flags='0' bytes='11' iicount='3570'/>
<call method='847' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='844'/>
<parse method='847'>
<parse_done stamp='0.100'/>
</parse>
<parse_done stamp='0.100'/>
</parse>
<phase name='optimize_blocks' stamp='0.100'>
<phase_done name='optimize_blocks' stamp='0.100'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.100'>
<phase_done name='rangeCheckElimination' stamp='0.100'/>
</phase>
<phase name='optimize_null_checks' stamp='0.100'>
<phase_done name='optimize_null_checks' stamp='0.100'/>
</phase>
<phase_done name='buildIR' stamp='0.100'/>
</phase>
<phase name='emit_lir' stamp='0.100'>
<phase name='lirGeneration' stamp='0.100'>
<phase_done name='lirGeneration' stamp='0.100'/>
</phase>
<phase name='linearScan' stamp='0.100'>
<phase_done name='linearScan' stamp='0.100'/>
</phase>
<phase_done name='emit_lir' stamp='0.100'/>
</phase>
<phase name='codeemit' stamp='0.100'>
<phase_done name='codeemit' stamp='0.100'/>
</phase>
<phase name='codeinstall' stamp='0.100'>
<dependency type='leaf_type' ctxk='844'/>
<phase_done name='codeinstall' stamp='0.103'/>
</phase>
<code_cache total_blobs='260' nmethods='13' adapters='158' free_code_cache='248812480'/>
<task_done success='1' nmsize='624' count='3357' inlined_bytes='11' stamp='0.103'/>
</task>
<task compile_id='18' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='739' backedge_count='1225' iicount='739' level='3' stamp='0.119'>
<phase name='buildIR' stamp='0.119'>
<type id='727' name='boolean'/>
<klass id='741' name='java/lang/String' flags='17'/>
<type id='733' name='int'/>
<method id='844' holder='741' name='startsWith' return='727' arguments='741 733' flags='1' bytes='72' iicount='739'/>
<parse method='844'  stamp='0.119'>
<parse_done stamp='0.119'/>
</parse>
<phase name='optimize_blocks' stamp='0.119'>
<phase_done name='optimize_blocks' stamp='0.119'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.119'>
<phase_done name='rangeCheckElimination' stamp='0.119'/>
</phase>
<phase name='optimize_null_checks' stamp='0.119'>
<phase_done name='optimize_null_checks' stamp='0.119'/>
</phase>
<phase_done name='buildIR' stamp='0.119'/>
</phase>
<phase name='emit_lir' stamp='0.119'>
<phase name='lirGeneration' stamp='0.119'>
<phase_done name='lirGeneration' stamp='0.119'/>
</phase>
<phase name='linearScan' stamp='0.119'>
<phase_done name='linearScan' stamp='0.119'/>
</phase>
<phase_done name='emit_lir' stamp='0.119'/>
</phase>
<phase name='codeemit' stamp='0.119'>
<phase_done name='codeemit' stamp='0.120'/>
</phase>
<phase name='codeinstall' stamp='0.120'>
<phase_done name='codeinstall' stamp='0.123'/>
</phase>
<code_cache total_blobs='272' nmethods='19' adapters='164' free_code_cache='248796480'/>
<task_done success='1' nmsize='816' count='744' backedge_count='1283' stamp='0.123'/>
</task>
<task compile_id='24' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='3664' iicount='3664' level='3' stamp='0.130'>
<phase name='buildIR' stamp='0.130'>
<klass id='806' name='java/lang/StringBuffer' flags='17'/>
<type id='728' name='char'/>
<method id='844' holder='806' name='append' return='806' arguments='728' flags='33' bytes='13' iicount='3712'/>
<parse method='844'  stamp='0.130'>
<bc code='183' bci='7'/>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='846' holder='805' name='append' return='805' arguments='728' flags='1' bytes='29' iicount='6673'/>
<call method='846' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='183' bci='7'/>
<type id='735' name='void'/>
<type id='733' name='int'/>
<method id='848' holder='805' name='ensureCapacityInternal' return='735' arguments='733' flags='2' bytes='27' iicount='7426'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='17'/>
<method id='850' holder='805' name='newCapacity' return='733' arguments='733' flags='2' bytes='39' iicount='352'/>
<call method='850' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='852' name='java/util/Arrays' flags='1'/>
<method id='853' holder='852' name='copyOf' return='833' arguments='833 733' flags='9' bytes='19' iicount='416'/>
<call method='853' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<bc code='184' bci='11'/>
<klass id='855' name='java/lang/Math' flags='17'/>
<method id='856' holder='855' name='min' return='733' arguments='733 733' flags='9' bytes='11' compile_id='19' compiler='C1' level='3' iicount='1829'/>
<call method='856' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='856'>
<parse_done stamp='0.132'/>
</parse>
<bc code='184' bci='14'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='858' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='3' compile_kind='c2n' level='0' iicount='2560'/>
<call method='858' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.132'/>
</parse>
<parse_done stamp='0.132'/>
</parse>
<parse_done stamp='0.132'/>
</parse>
<parse_done stamp='0.132'/>
</parse>
<phase name='optimize_blocks' stamp='0.132'>
<phase_done name='optimize_blocks' stamp='0.132'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.132'>
<phase_done name='rangeCheckElimination' stamp='0.132'/>
</phase>
<phase name='optimize_null_checks' stamp='0.132'>
<phase_done name='optimize_null_checks' stamp='0.132'/>
</phase>
<phase_done name='buildIR' stamp='0.132'/>
</phase>
<phase name='emit_lir' stamp='0.132'>
<phase name='lirGeneration' stamp='0.132'>
<phase_done name='lirGeneration' stamp='0.132'/>
</phase>
<phase name='linearScan' stamp='0.132'>
<phase_done name='linearScan' stamp='0.132'/>
</phase>
<phase_done name='emit_lir' stamp='0.132'/>
</phase>
<phase name='codeemit' stamp='0.132'>
<phase_done name='codeemit' stamp='0.132'/>
</phase>
<phase name='codeinstall' stamp='0.132'>
<phase_done name='codeinstall' stamp='0.139'/>
</phase>
<code_cache total_blobs='277' nmethods='24' adapters='164' free_code_cache='248787456'/>
<task_done success='1' nmsize='1848' count='3721' inlined_bytes='86' stamp='0.139'/>
</task>
</compilation_log>
<compilation_log thread='5512'>
<start_compile_thread name='C1 CompilerThread9' thread='5512' process='21212' stamp='0.075'/>
<task compile_id='7' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='2944' iicount='2944' level='3' stamp='0.082'>
<phase name='buildIR' stamp='0.082'>
<klass id='807' name='java/lang/StringBuilder' flags='17'/>
<type id='728' name='char'/>
<method id='844' holder='807' name='append' return='807' arguments='728' flags='1' bytes='8' iicount='2944'/>
<parse method='844'  stamp='0.082'>
<bc code='183' bci='2'/>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='846' holder='805' name='append' return='805' arguments='728' flags='1' bytes='29' iicount='6498'/>
<call method='846' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='183' bci='7'/>
<type id='735' name='void'/>
<type id='733' name='int'/>
<method id='848' holder='805' name='ensureCapacityInternal' return='735' arguments='733' flags='2' bytes='27' iicount='7199'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='17'/>
<method id='850' holder='805' name='newCapacity' return='733' arguments='733' flags='2' bytes='39' iicount='324'/>
<call method='850' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='852' name='java/util/Arrays' flags='1'/>
<method id='853' holder='852' name='copyOf' return='833' arguments='833 733' flags='9' bytes='19' iicount='378'/>
<call method='853' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<bc code='184' bci='11'/>
<klass id='855' name='java/lang/Math' flags='17'/>
<method id='856' holder='855' name='min' return='733' arguments='733 733' flags='9' bytes='11' iicount='1711'/>
<call method='856' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='856'>
<parse_done stamp='0.082'/>
</parse>
<bc code='184' bci='14'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='858' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='3' compile_kind='c2n' level='0' iicount='2560'/>
<call method='858' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.082'/>
</parse>
<parse_done stamp='0.082'/>
</parse>
<parse_done stamp='0.082'/>
</parse>
<parse_done stamp='0.082'/>
</parse>
<phase name='optimize_blocks' stamp='0.082'>
<phase_done name='optimize_blocks' stamp='0.082'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.082'>
<phase_done name='rangeCheckElimination' stamp='0.082'/>
</phase>
<phase name='optimize_null_checks' stamp='0.082'>
<phase_done name='optimize_null_checks' stamp='0.082'/>
</phase>
<phase_done name='buildIR' stamp='0.082'/>
</phase>
<phase name='emit_lir' stamp='0.082'>
<phase name='lirGeneration' stamp='0.082'>
<phase_done name='lirGeneration' stamp='0.083'/>
</phase>
<phase name='linearScan' stamp='0.083'>
<phase_done name='linearScan' stamp='0.083'/>
</phase>
<phase_done name='emit_lir' stamp='0.083'/>
</phase>
<phase name='codeemit' stamp='0.083'>
<phase_done name='codeemit' stamp='0.083'/>
</phase>
<phase name='codeinstall' stamp='0.083'>
<phase_done name='codeinstall' stamp='0.088'/>
</phase>
<code_cache total_blobs='247' nmethods='5' adapters='153' free_code_cache='248814720'/>
<task_done success='1' nmsize='1432' count='2944' inlined_bytes='86' stamp='0.088'/>
</task>
<task compile_id='11' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='129' iicount='129' level='1' stamp='0.099'>
<phase name='buildIR' stamp='0.099'>
<klass id='846' name='[Lsun/instrument/TransformerManager$TransformerInfo;' flags='1042'/>
<klass id='844' name='sun/instrument/TransformerManager' flags='1'/>
<method id='847' holder='844' name='getSnapshotTransformerList' return='846' flags='2' bytes='5' iicount='129'/>
<parse method='847'  stamp='0.099'>
<parse_done stamp='0.099'/>
</parse>
<phase name='optimize_blocks' stamp='0.099'>
<phase_done name='optimize_blocks' stamp='0.099'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.099'>
<phase_done name='rangeCheckElimination' stamp='0.099'/>
</phase>
<phase name='optimize_null_checks' stamp='0.099'>
<phase_done name='optimize_null_checks' stamp='0.099'/>
</phase>
<phase_done name='buildIR' stamp='0.099'/>
</phase>
<phase name='emit_lir' stamp='0.099'>
<phase name='lirGeneration' stamp='0.099'>
<phase_done name='lirGeneration' stamp='0.099'/>
</phase>
<phase name='linearScan' stamp='0.099'>
<phase_done name='linearScan' stamp='0.099'/>
</phase>
<phase_done name='emit_lir' stamp='0.099'/>
</phase>
<phase name='codeemit' stamp='0.099'>
<phase_done name='codeemit' stamp='0.099'/>
</phase>
<phase name='codeinstall' stamp='0.099'>
<phase_done name='codeinstall' stamp='0.100'/>
</phase>
<code_cache total_blobs='257' nmethods='11' adapters='157' free_code_cache='248815616'/>
<task_done success='1' nmsize='272' count='131' stamp='0.100'/>
</task>
<task compile_id='15' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='143' count='146' backedge_count='3232' iicount='146' level='3' stamp='0.104'>
<phase name='buildIR' stamp='0.104'>
<klass id='741' name='java/lang/String' flags='17'/>
<klass id='844' name='java/io/WinNTFileSystem' flags='0'/>
<method id='845' holder='844' name='normalize' return='741' arguments='741' flags='1' bytes='143' iicount='146'/>
<parse method='845'  stamp='0.104'>
<bc code='182' bci='1'/>
<type id='733' name='int'/>
<method id='847' holder='741' name='length' return='733' flags='1' bytes='6' compile_id='1' compiler='C2' level='4' iicount='27689'/>
<call method='847' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<parse_done stamp='0.104'/>
</parse>
<bc code='182' bci='31'/>
<type id='728' name='char'/>
<method id='849' holder='741' name='charAt' return='728' arguments='733' flags='1' bytes='29' compile_id='2' compiler='C2' level='4' iicount='102620'/>
<call method='849' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<bc code='183' bci='18'/>
<type id='735' name='void'/>
<klass id='851' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='852' holder='851' name='&lt;init&gt;' return='735' arguments='733' unloaded='1'/>
<call method='852' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.104'/>
</parse>
<bc code='183' bci='61'/>
<method id='853' holder='844' name='normalize' return='741' arguments='741 733 733' flags='2' bytes='231' iicount='63'/>
<call method='853' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='90'/>
<call method='853' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='111'/>
<call method='853' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='137'/>
<call method='853' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.111'/>
</parse>
<phase name='optimize_blocks' stamp='0.111'>
<phase_done name='optimize_blocks' stamp='0.111'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.111'>
<phase_done name='rangeCheckElimination' stamp='0.111'/>
</phase>
<phase name='optimize_null_checks' stamp='0.111'>
<phase_done name='optimize_null_checks' stamp='0.111'/>
</phase>
<phase_done name='buildIR' stamp='0.111'/>
</phase>
<phase name='emit_lir' stamp='0.111'>
<phase name='lirGeneration' stamp='0.111'>
<phase_done name='lirGeneration' stamp='0.111'/>
</phase>
<phase name='linearScan' stamp='0.111'>
<phase_done name='linearScan' stamp='0.111'/>
</phase>
<phase_done name='emit_lir' stamp='0.111'/>
</phase>
<phase name='codeemit' stamp='0.111'>
<phase_done name='codeemit' stamp='0.111'/>
</phase>
<phase name='codeinstall' stamp='0.111'>
<dependency type='leaf_type' ctxk='844'/>
<phase_done name='codeinstall' stamp='0.119'/>
</phase>
<code_cache total_blobs='266' nmethods='17' adapters='160' free_code_cache='248801408'/>
<task_done success='1' nmsize='2088' count='146' backedge_count='3232' inlined_bytes='35' stamp='0.119'/>
</task>
<task compile_id='20' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='3585' iicount='3585' level='3' stamp='0.119'>
<phase name='buildIR' stamp='0.119'>
<klass id='844' name='java/lang/CharacterData' flags='1024'/>
<type id='733' name='int'/>
<method id='845' holder='844' name='of' return='844' arguments='733' flags='24' bytes='120' iicount='3585'/>
<parse method='845'  stamp='0.119'>
<parse_done stamp='0.119'/>
</parse>
<phase name='optimize_blocks' stamp='0.119'>
<phase_done name='optimize_blocks' stamp='0.119'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.119'>
<phase_done name='rangeCheckElimination' stamp='0.119'/>
</phase>
<phase name='optimize_null_checks' stamp='0.119'>
<phase_done name='optimize_null_checks' stamp='0.119'/>
</phase>
<phase_done name='buildIR' stamp='0.119'/>
</phase>
<phase name='emit_lir' stamp='0.119'>
<phase name='lirGeneration' stamp='0.119'>
<phase_done name='lirGeneration' stamp='0.119'/>
</phase>
<phase name='linearScan' stamp='0.119'>
<phase_done name='linearScan' stamp='0.119'/>
</phase>
<phase_done name='emit_lir' stamp='0.119'/>
</phase>
<phase name='codeemit' stamp='0.119'>
<phase_done name='codeemit' stamp='0.120'/>
</phase>
<phase name='codeinstall' stamp='0.120'>
<phase_done name='codeinstall' stamp='0.129'/>
</phase>
<code_cache total_blobs='273' nmethods='20' adapters='164' free_code_cache='248793728'/>
<task_done success='1' nmsize='1456' count='3585' stamp='0.129'/>
</task>
<task compile_id='27' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4610' iicount='4610' level='1' stamp='0.132'>
<phase name='buildIR' stamp='0.132'>
<type id='735' name='void'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<method id='844' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' compile_id='6' compiler='C1' level='3' iicount='4612'/>
<parse method='844'  stamp='0.132'>
<parse_done stamp='0.132'/>
</parse>
<phase name='optimize_blocks' stamp='0.132'>
<phase_done name='optimize_blocks' stamp='0.132'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.132'>
<phase_done name='rangeCheckElimination' stamp='0.132'/>
</phase>
<phase name='optimize_null_checks' stamp='0.132'>
<phase_done name='optimize_null_checks' stamp='0.132'/>
</phase>
<phase_done name='buildIR' stamp='0.132'/>
</phase>
<phase name='emit_lir' stamp='0.132'>
<phase name='lirGeneration' stamp='0.132'>
<phase_done name='lirGeneration' stamp='0.132'/>
</phase>
<phase name='linearScan' stamp='0.132'>
<phase_done name='linearScan' stamp='0.132'/>
</phase>
<phase_done name='emit_lir' stamp='0.132'/>
</phase>
<phase name='codeemit' stamp='0.132'>
<phase_done name='codeemit' stamp='0.132'/>
</phase>
<phase name='codeinstall' stamp='0.132'>
<phase_done name='codeinstall' stamp='0.133'/>
</phase>
<code_cache total_blobs='276' nmethods='23' adapters='164' free_code_cache='248790784'/>
<task_done success='1' nmsize='272' count='4640' stamp='0.133'/>
</task>
</compilation_log>
<compilation_log thread='22084'>
<start_compile_thread name='C1 CompilerThread8' thread='22084' process='21212' stamp='0.075'/>
<task compile_id='4' method='java/lang/String hashCode ()I' bytes='55' count='728' backedge_count='14381' iicount='728' level='3' stamp='0.077'>
<phase name='buildIR' stamp='0.077'>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='hashCode' return='733' flags='1' bytes='55' iicount='728'/>
<parse method='844'  stamp='0.077'>
<parse_done stamp='0.077'/>
</parse>
<phase name='optimize_blocks' stamp='0.077'>
<phase_done name='optimize_blocks' stamp='0.077'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.077'>
<phase_done name='rangeCheckElimination' stamp='0.077'/>
</phase>
<phase name='optimize_null_checks' stamp='0.077'>
<phase_done name='optimize_null_checks' stamp='0.077'/>
</phase>
<phase_done name='buildIR' stamp='0.077'/>
</phase>
<phase name='emit_lir' stamp='0.077'>
<phase name='lirGeneration' stamp='0.077'>
<phase_done name='lirGeneration' stamp='0.077'/>
</phase>
<phase name='linearScan' stamp='0.077'>
<phase_done name='linearScan' stamp='0.077'/>
</phase>
<phase_done name='emit_lir' stamp='0.077'/>
</phase>
<phase name='codeemit' stamp='0.077'>
<phase_done name='codeemit' stamp='0.077'/>
</phase>
<phase name='codeinstall' stamp='0.077'>
<phase_done name='codeinstall' stamp='0.079'/>
</phase>
<code_cache total_blobs='230' nmethods='2' adapters='149' free_code_cache='248861888'/>
<task_done success='1' nmsize='656' count='729' backedge_count='14405' stamp='0.079'/>
</task>
<task compile_id='8' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='645' backedge_count='3034' iicount='647' level='3' stamp='0.083'>
<phase name='buildIR' stamp='0.083'>
<type id='727' name='boolean'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='equals' return='727' arguments='740' flags='1' bytes='81' iicount='649'/>
<parse method='844'  stamp='0.083'>
<parse_done stamp='0.083'/>
</parse>
<phase name='optimize_blocks' stamp='0.083'>
<phase_done name='optimize_blocks' stamp='0.083'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.083'>
<phase_done name='rangeCheckElimination' stamp='0.083'/>
</phase>
<phase name='optimize_null_checks' stamp='0.083'>
<phase_done name='optimize_null_checks' stamp='0.083'/>
</phase>
<phase_done name='buildIR' stamp='0.083'/>
</phase>
<phase name='emit_lir' stamp='0.083'>
<phase name='lirGeneration' stamp='0.083'>
<phase_done name='lirGeneration' stamp='0.083'/>
</phase>
<phase name='linearScan' stamp='0.083'>
<phase_done name='linearScan' stamp='0.083'/>
</phase>
<phase_done name='emit_lir' stamp='0.083'/>
</phase>
<phase name='codeemit' stamp='0.083'>
<phase_done name='codeemit' stamp='0.083'/>
</phase>
<phase name='codeinstall' stamp='0.083'>
<phase_done name='codeinstall' stamp='0.092'/>
</phase>
<code_cache total_blobs='247' nmethods='6' adapters='153' free_code_cache='248823360'/>
<task_done success='1' nmsize='1360' count='661' backedge_count='3156' stamp='0.092'/>
</task>
<task compile_id='14' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='769' iicount='769' level='3' stamp='0.100'>
<phase name='buildIR' stamp='0.100'>
<type id='735' name='void'/>
<klass id='833' name='[C' flags='1041'/>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='&lt;init&gt;' return='735' arguments='833 733 733' flags='1' bytes='82' iicount='769'/>
<parse method='844'  stamp='0.100'>
<bc code='183' bci='1'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<method id='846' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' compile_id='6' compiler='C1' level='3' iicount='4444'/>
<call method='846' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<parse_done stamp='0.100'/>
</parse>
<bc code='183' bci='13'/>
<klass id='848' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='849' holder='848' name='&lt;init&gt;' return='735' arguments='733' unloaded='1'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='30'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='65'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='75'/>
<klass id='851' name='java/util/Arrays' flags='1'/>
<method id='852' holder='851' name='copyOfRange' return='833' arguments='833 733 733' flags='9' bytes='63' iicount='874'/>
<call method='852' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.104'/>
</parse>
<phase name='optimize_blocks' stamp='0.104'>
<phase_done name='optimize_blocks' stamp='0.104'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.104'>
<phase_done name='rangeCheckElimination' stamp='0.104'/>
</phase>
<phase name='optimize_null_checks' stamp='0.104'>
<phase_done name='optimize_null_checks' stamp='0.104'/>
</phase>
<phase_done name='buildIR' stamp='0.104'/>
</phase>
<phase name='emit_lir' stamp='0.104'>
<phase name='lirGeneration' stamp='0.104'>
<phase_done name='lirGeneration' stamp='0.104'/>
</phase>
<phase name='linearScan' stamp='0.104'>
<phase_done name='linearScan' stamp='0.104'/>
</phase>
<phase_done name='emit_lir' stamp='0.104'/>
</phase>
<phase name='codeemit' stamp='0.104'>
<phase_done name='codeemit' stamp='0.104'/>
</phase>
<phase name='codeinstall' stamp='0.104'>
<phase_done name='codeinstall' stamp='0.108'/>
</phase>
<code_cache total_blobs='262' nmethods='14' adapters='159' free_code_cache='248809216'/>
<task_done success='1' nmsize='1272' count='774' inlined_bytes='1' stamp='0.108'/>
</task>
<task compile_id='19' method='java/lang/Math min (II)I' bytes='11' count='1797' iicount='1797' level='3' stamp='0.119'>
<phase name='buildIR' stamp='0.119'>
<type id='733' name='int'/>
<klass id='844' name='java/lang/Math' flags='17'/>
<method id='845' holder='844' name='min' return='733' arguments='733 733' flags='9' bytes='11' iicount='1797'/>
<parse method='845'  stamp='0.119'>
<parse_done stamp='0.119'/>
</parse>
<phase name='optimize_blocks' stamp='0.119'>
<phase_done name='optimize_blocks' stamp='0.119'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.119'>
<phase_done name='rangeCheckElimination' stamp='0.119'/>
</phase>
<phase name='optimize_null_checks' stamp='0.119'>
<phase_done name='optimize_null_checks' stamp='0.119'/>
</phase>
<phase_done name='buildIR' stamp='0.119'/>
</phase>
<phase name='emit_lir' stamp='0.119'>
<phase name='lirGeneration' stamp='0.119'>
<phase_done name='lirGeneration' stamp='0.119'/>
</phase>
<phase name='linearScan' stamp='0.119'>
<phase_done name='linearScan' stamp='0.119'/>
</phase>
<phase_done name='emit_lir' stamp='0.119'/>
</phase>
<phase name='codeemit' stamp='0.119'>
<phase_done name='codeemit' stamp='0.119'/>
</phase>
<phase name='codeinstall' stamp='0.119'>
<phase_done name='codeinstall' stamp='0.121'/>
</phase>
<code_cache total_blobs='271' nmethods='18' adapters='164' free_code_cache='248798336'/>
<task_done success='1' nmsize='400' count='1802' stamp='0.121'/>
</task>
<task compile_id='22' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='3990' iicount='3994' level='3' stamp='0.130'>
<phase name='buildIR' stamp='0.130'>
<type id='727' name='boolean'/>
<type id='728' name='char'/>
<klass id='844' name='java/io/WinNTFileSystem' flags='0'/>
<method id='845' holder='844' name='isSlash' return='727' arguments='728' flags='2' bytes='18' iicount='4014'/>
<parse method='845'  stamp='0.130'>
<parse_done stamp='0.130'/>
</parse>
<phase name='optimize_blocks' stamp='0.130'>
<phase_done name='optimize_blocks' stamp='0.130'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.130'>
<phase_done name='rangeCheckElimination' stamp='0.130'/>
</phase>
<phase name='optimize_null_checks' stamp='0.130'>
<phase_done name='optimize_null_checks' stamp='0.130'/>
</phase>
<phase_done name='buildIR' stamp='0.130'/>
</phase>
<phase name='emit_lir' stamp='0.130'>
<phase name='lirGeneration' stamp='0.130'>
<phase_done name='lirGeneration' stamp='0.130'/>
</phase>
<phase name='linearScan' stamp='0.130'>
<phase_done name='linearScan' stamp='0.130'/>
</phase>
<phase_done name='emit_lir' stamp='0.130'/>
</phase>
<phase name='codeemit' stamp='0.130'>
<phase_done name='codeemit' stamp='0.130'/>
</phase>
<phase name='codeinstall' stamp='0.130'>
<phase_done name='codeinstall' stamp='0.132'/>
</phase>
<code_cache total_blobs='275' nmethods='22' adapters='164' free_code_cache='248791552'/>
<task_done success='1' nmsize='496' count='4140' stamp='0.132'/>
</task>
<task compile_id='26' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='896' iicount='896' level='3' stamp='0.132'>
<phase name='buildIR' stamp='0.132'>
<klass id='833' name='[C' flags='1041'/>
<type id='733' name='int'/>
<klass id='844' name='java/util/Arrays' flags='1'/>
<method id='845' holder='844' name='copyOfRange' return='833' arguments='833 733 733' flags='9' bytes='63' iicount='896'/>
<parse method='845'  stamp='0.132'>
<bc code='183' bci='16'/>
<type id='735' name='void'/>
<klass id='807' name='java/lang/StringBuilder' flags='17'/>
<method id='848' holder='807' name='&lt;init&gt;' return='735' flags='1' bytes='7' compile_id='17' compiler='C1' level='3' iicount='268'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='3'/>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='850' holder='805' name='&lt;init&gt;' return='735' arguments='733' flags='0' bytes='12' iicount='426'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<bc code='183' bci='1'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<method id='852' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' compile_id='6' compiler='C1' level='3' iicount='4614'/>
<call method='852' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='852'>
<parse_done stamp='0.132'/>
</parse>
<parse_done stamp='0.132'/>
</parse>
<parse_done stamp='0.132'/>
</parse>
<bc code='182' bci='20'/>
<method id='854' holder='807' name='append' return='807' arguments='733' flags='1' bytes='8' iicount='1'/>
<call method='854' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='854'>
<bc code='183' bci='2'/>
<method id='856' holder='805' name='append' return='805' arguments='733' flags='1' bytes='62' iicount='1'/>
<call method='856' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.132'/>
</parse>
<bc code='182' bci='25'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='859' holder='807' name='append' return='807' arguments='741' flags='1' bytes='8' iicount='633'/>
<call method='859' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='859'>
<bc code='183' bci='2'/>
<method id='861' holder='805' name='append' return='805' arguments='741' flags='1' bytes='50' iicount='756'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.139'/>
</parse>
<bc code='182' bci='29'/>
<call method='854' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='854'>
<bc code='183' bci='2'/>
<call method='856' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.139'/>
</parse>
<bc code='182' bci='32'/>
<method id='863' holder='807' name='toString' return='741' flags='1' bytes='17' iicount='318'/>
<call method='863' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='863'>
<bc code='183' bci='13'/>
<method id='865' holder='741' name='&lt;init&gt;' return='735' arguments='833 733 733' flags='1' bytes='82' compile_id='14' compiler='C1' level='3' iicount='805'/>
<call method='865' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.139'/>
</parse>
<bc code='183' bci='35'/>
<klass id='847' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='867' holder='847' name='&lt;init&gt;' return='735' arguments='741' flags='1' bytes='6' iicount='1'/>
<call method='867' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='54'/>
<klass id='869' name='java/lang/Math' flags='17'/>
<method id='870' holder='869' name='min' return='733' arguments='733 733' flags='9' bytes='11' compile_id='19' compiler='C1' level='3' iicount='1850'/>
<call method='870' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='870'>
<parse_done stamp='0.140'/>
</parse>
<bc code='184' bci='57'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='872' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='3' compile_kind='c2n' level='0' iicount='2560'/>
<call method='872' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.140'/>
</parse>
<phase name='optimize_blocks' stamp='0.140'>
<phase_done name='optimize_blocks' stamp='0.140'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.140'>
<phase_done name='rangeCheckElimination' stamp='0.140'/>
</phase>
<phase name='optimize_null_checks' stamp='0.140'>
<phase_done name='optimize_null_checks' stamp='0.140'/>
</phase>
<phase_done name='buildIR' stamp='0.140'/>
</phase>
<phase name='emit_lir' stamp='0.140'>
<phase name='lirGeneration' stamp='0.140'>
<phase_done name='lirGeneration' stamp='0.140'/>
</phase>
<phase name='linearScan' stamp='0.140'>
<phase_done name='linearScan' stamp='0.140'/>
</phase>
<phase_done name='emit_lir' stamp='0.140'/>
</phase>
<phase name='codeemit' stamp='0.140'>
<phase_done name='codeemit' stamp='0.140'/>
</phase>
<phase name='codeinstall' stamp='0.140'>
<phase_done name='codeinstall' stamp='0.148'/>
</phase>
<code_cache total_blobs='281' nmethods='25' adapters='167' free_code_cache='248780800'/>
<task_done success='1' nmsize='2872' count='911' inlined_bytes='72' stamp='0.148'/>
</task>
</compilation_log>
<compilation_log thread='10728'>
<fragment>
<![CDATA[
<start_compile_thread name='C2 CompilerThread7' thread='10728' process='21212' stamp='0.075'/>
<task compile_id='25' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='7306' iicount='7306' stamp='0.130'>
<phase name='parse' nodes='3' live='3' stamp='0.130'>
<type id='735' name='void'/>
<type id='733' name='int'/>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='844' holder='805' name='ensureCapacityInternal' return='735' arguments='733' flags='2' bytes='27' iicount='7306'/>
<parse method='844' uses='7306' stamp='0.130'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='7108' not_taken='198' cnt='7306' prob='0.972899'/>
<bc code='183' bci='17'/>
<method id='846' holder='805' name='newCapacity' return='733' arguments='733' flags='2' bytes='39' iicount='350'/>
<call method='846' count='186' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='198' stamp='0.132'>
<bc code='183' bci='31'/>
<method id='849' holder='805' name='hugeCapacity' return='733' arguments='733' flags='2' bytes='28' iicount='1'/>
<call method='849' count='-1' prof_factor='0.565714' inline='1'/>
<klass id='763' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='849' bci='7' reason='unloaded' action='reinterpret' index='145' klass='763'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='129' live='127' memory='41976' stamp='0.132'/>
</parse>
<bc code='184' bci='20'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='847' name='java/util/Arrays' flags='1'/>
<method id='848' holder='847' name='copyOf' return='833' arguments='833 733' flags='9' bytes='19' iicount='414'/>
<call method='848' count='186' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='848' uses='198' stamp='0.139'>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='11'/>
<klass id='851' name='java/lang/Math' flags='17'/>
<method id='852' holder='851' name='min' return='733' arguments='733 733' flags='9' bytes='11' compile_id='19' compiler='C1' level='3' iicount='1831'/>
<call method='852' count='-1' prof_factor='0.478261' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='853' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='3' compile_kind='c2n' level='0' iicount='2560'/>
<call method='853' count='-1' prof_factor='0.478261' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='320' live='316' memory='77672' stamp='0.140'/>
</parse>
<parse_done nodes='347' live='342' memory='83016' stamp='0.140'/>
</parse>
<phase_done name='parse' nodes='349' live='221' stamp='0.140'/>
</phase>
<phase name='optimizer' nodes='349' live='221' stamp='0.140'>
<phase name='escapeAnalysis' nodes='353' live='218' stamp='0.140'>
<phase name='connectionGraph' nodes='354' live='219' stamp='0.140'>
<phase_done name='connectionGraph' nodes='354' live='219' stamp='0.140'/>
</phase>
<phase_done name='escapeAnalysis' nodes='354' live='219' stamp='0.140'/>
</phase>
<phase name='ccp' nodes='354' live='219' stamp='0.140'>
<phase_done name='ccp' nodes='354' live='219' stamp='0.140'/>
</phase>
<phase name='idealLoop' nodes='354' live='218' stamp='0.140'>
<phase_done name='idealLoop' nodes='360' live='208' stamp='0.140'/>
</phase>
<phase name='idealLoop' nodes='360' live='208' stamp='0.140'>
<phase_done name='idealLoop' nodes='366' live='208' stamp='0.140'/>
</phase>
<phase_done name='optimizer' nodes='424' live='246' stamp='0.140'/>
</phase>
<phase name='matcher' nodes='424' live='246' stamp='0.140'>
<phase_done name='matcher' nodes='246' live='246' stamp='0.140'/>
</phase>
<phase name='regalloc' nodes='309' live='308' stamp='0.140'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='385' live='359' stamp='0.141'/>
</phase>
<phase name='output' nodes='385' live='359' stamp='0.141'>
<phase_done name='output' nodes='404' live='369' stamp='0.148'/>
</phase>
]]>
</fragment>
</compilation_log>
<compilation_log thread='23420'>
<fragment>
<![CDATA[
<start_compile_thread name='C2 CompilerThread6' thread='23420' process='21212' stamp='0.075'/>
<task compile_id='23' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='6550' iicount='6550' stamp='0.130'>
<phase name='parse' nodes='3' live='3' stamp='0.130'>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<type id='728' name='char'/>
<method id='844' holder='805' name='append' return='805' arguments='728' flags='1' bytes='29' iicount='6560'/>
<parse method='844' uses='6560' stamp='0.130'>
<bc code='183' bci='7'/>
<type id='735' name='void'/>
<type id='733' name='int'/>
<method id='846' holder='805' name='ensureCapacityInternal' return='735' arguments='733' flags='2' bytes='27' iicount='7365'/>
<call method='846' count='6081' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='6556' stamp='0.132'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='7163' not_taken='202' cnt='7365' prob='0.972573'/>
<bc code='183' bci='17'/>
<method id='847' holder='805' name='newCapacity' return='733' arguments='733' flags='2' bytes='39' iicount='352'/>
<call method='847' count='190' prof_factor='0.890156' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='847' uses='180' stamp='0.132'>
<bc code='183' bci='31'/>
<method id='851' holder='805' name='hugeCapacity' return='733' arguments='733' flags='2' bytes='28' iicount='1'/>
<call method='851' count='-1' prof_factor='0.511364' inline='1'/>
<klass id='763' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='851' bci='7' reason='unloaded' action='reinterpret' index='145' klass='763'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='147' live='145' memory='44880' stamp='0.139'/>
</parse>
<bc code='184' bci='20'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='848' name='java/util/Arrays' flags='1'/>
<method id='849' holder='848' name='copyOf' return='833' arguments='833 733' flags='9' bytes='19' iicount='416'/>
<call method='849' count='190' prof_factor='0.890156' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='849' uses='180' stamp='0.139'>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='11'/>
<klass id='853' name='java/lang/Math' flags='17'/>
<method id='854' holder='853' name='min' return='733' arguments='733 733' flags='9' bytes='11' compile_id='19' compiler='C1' level='3' iicount='1840'/>
<call method='854' count='-1' prof_factor='0.432692' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='855' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='3' compile_kind='c2n' level='0' iicount='2560'/>
<call method='855' count='-1' prof_factor='0.432692' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='338' live='334' memory='84440' stamp='0.140'/>
</parse>
<parse_done nodes='365' live='360' memory='89736' stamp='0.140'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='414' live='406' memory='98440' stamp='0.140'/>
</parse>
<phase_done name='parse' nodes='416' live='259' stamp='0.140'/>
</phase>
<phase name='optimizer' nodes='416' live='259' stamp='0.140'>
<phase name='escapeAnalysis' nodes='420' live='255' stamp='0.140'>
<phase name='connectionGraph' nodes='421' live='256' stamp='0.140'>
<phase_done name='connectionGraph' nodes='421' live='256' stamp='0.140'/>
</phase>
<phase_done name='escapeAnalysis' nodes='421' live='256' stamp='0.140'/>
</phase>
<phase name='ccp' nodes='421' live='256' stamp='0.140'>
<phase_done name='ccp' nodes='421' live='256' stamp='0.140'/>
</phase>
<phase name='idealLoop' nodes='421' live='255' stamp='0.140'>
<phase_done name='idealLoop' nodes='439' live='246' stamp='0.140'/>
</phase>
<phase name='idealLoop' nodes='439' live='246' stamp='0.140'>
<phase_done name='idealLoop' nodes='445' live='246' stamp='0.140'/>
</phase>
<phase_done name='optimizer' nodes='504' live='285' stamp='0.140'/>
</phase>
<phase name='matcher' nodes='504' live='285' stamp='0.140'>
<phase_done name='matcher' nodes='284' live='284' stamp='0.140'/>
</phase>
<phase name='regalloc' nodes='353' live='352' stamp='0.140'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='462' live='419' stamp='0.141'/>
</phase>
<phase name='output' nodes='462' live='419' stamp='0.141'>
<phase_done name='output' nodes='481' live='431' stamp='0.148'/>
</phase>
]]>
</fragment>
</compilation_log>
<compilation_log thread='9844'>
<fragment>
<![CDATA[
<start_compile_thread name='C2 CompilerThread4' thread='9844' process='21212' stamp='0.075'/>
]]>
</fragment>
</compilation_log>
<compilation_log thread='14668'>
<fragment>
<![CDATA[
<start_compile_thread name='C2 CompilerThread5' thread='14668' process='21212' stamp='0.075'/>
]]>
</fragment>
</compilation_log>
<compilation_log thread='22716'>
<fragment>
<![CDATA[
<start_compile_thread name='C2 CompilerThread3' thread='22716' process='21212' stamp='0.075'/>
]]>
</fragment>
</compilation_log>
<compilation_log thread='10556'>
<fragment>
<![CDATA[
<start_compile_thread name='C2 CompilerThread0' thread='10556' process='21212' stamp='0.075'/>
]]>
</fragment>
</compilation_log>
<compilation_log thread='16008'>
<start_compile_thread name='C2 CompilerThread2' thread='16008' process='21212' stamp='0.075'/>
<task compile_id='1' method='java/lang/String length ()I' bytes='6' count='27668' iicount='27668' stamp='0.092'>
<phase name='parse' nodes='3' live='3' stamp='0.092'>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='length' return='733' flags='1' bytes='6' iicount='27668'/>
<parse method='844' uses='27668' stamp='0.092'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='44' live='42' memory='25944' stamp='0.092'/>
</parse>
<phase_done name='parse' nodes='45' live='27' stamp='0.092'/>
</phase>
<phase name='optimizer' nodes='45' live='27' stamp='0.092'>
<phase name='ccp' nodes='45' live='27' stamp='0.092'>
<phase_done name='ccp' nodes='45' live='27' stamp='0.092'/>
</phase>
<phase name='idealLoop' nodes='45' live='27' stamp='0.092'>
<phase_done name='idealLoop' nodes='45' live='27' stamp='0.092'/>
</phase>
<phase_done name='optimizer' nodes='48' live='27' stamp='0.092'/>
</phase>
<phase name='matcher' nodes='48' live='27' stamp='0.092'>
<phase_done name='matcher' nodes='24' live='24' stamp='0.092'/>
</phase>
<phase name='regalloc' nodes='30' live='29' stamp='0.092'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='30' live='29' stamp='0.092'/>
</phase>
<phase name='output' nodes='30' live='29' stamp='0.092'>
<phase_done name='output' nodes='38' live='37' stamp='0.092'/>
</phase>
<code_cache total_blobs='253' nmethods='7' adapters='155' free_code_cache='248810624'/>
<task_done success='1' nmsize='120' count='27689' stamp='0.093'/>
</task>
</compilation_log>
<compilation_log thread='22496'>
<start_compile_thread name='C2 CompilerThread1' thread='22496' process='21212' stamp='0.074'/>
<task compile_id='2' method='java/lang/String charAt (I)C' bytes='29' count='102430' iicount='102430' stamp='0.092'>
<phase name='parse' nodes='3' live='3' stamp='0.092'>
<type id='728' name='char'/>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='charAt' return='728' arguments='733' flags='1' bytes='29' iicount='102430'/>
<klass id='846' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='844' bci='13' reason='unloaded' action='reinterpret' index='245' klass='846'/>
<parse method='844' uses='102430' stamp='0.092'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='102430' cnt='102430' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='102430' not_taken='0' cnt='102430' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='102' live='97' memory='35048' stamp='0.092'/>
</parse>
<phase_done name='parse' nodes='103' live='63' stamp='0.092'/>
</phase>
<phase name='optimizer' nodes='103' live='63' stamp='0.092'>
<phase name='ccp' nodes='103' live='63' stamp='0.092'>
<phase_done name='ccp' nodes='103' live='63' stamp='0.092'/>
</phase>
<phase name='idealLoop' nodes='103' live='63' stamp='0.092'>
<phase_done name='idealLoop' nodes='103' live='63' stamp='0.092'/>
</phase>
<phase_done name='optimizer' nodes='107' live='63' stamp='0.092'/>
</phase>
<phase name='matcher' nodes='107' live='63' stamp='0.092'>
<phase_done name='matcher' nodes='55' live='55' stamp='0.092'/>
</phase>
<phase name='regalloc' nodes='70' live='69' stamp='0.093'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='80' live='75' stamp='0.093'/>
</phase>
<phase name='output' nodes='80' live='75' stamp='0.093'>
<phase_done name='output' nodes='93' live='85' stamp='0.093'/>
</phase>
<code_cache total_blobs='257' nmethods='10' adapters='157' free_code_cache='248811008'/>
<task_done success='1' nmsize='216' count='102620' stamp='0.099'/>
</task>
</compilation_log>
<hotspot_log_done stamp='0.151'/>
</hotspot_log>
